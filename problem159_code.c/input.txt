# problem159/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$312, %rsp                      ## imm = 0x138
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movq	%rdi, -344(%rbp)                ## 8-byte Spill
	movq	___stack_chk_guard@GOTPCREL(%rip), %rax
	movq	(%rax), %rax
	movq	%rax, -48(%rbp)
	testl	%esi, %esi
	jle	LBB0_1
## %bb.4:
	movl	%esi, %eax
	movq	%rax, -336(%rbp)                ## 8-byte Spill
	xorl	%r14d, %r14d
	leaq	L_.str(%rip), %rax
	movq	%rax, -320(%rbp)                ## 8-byte Spill
	leaq	-304(%rbp), %rbx
	movl	$0, -308(%rbp)                  ## 4-byte Folded Spill
	jmp	LBB0_5
	.p2align	4, 0x90
LBB0_13:                                ##   in Loop: Header=BB0_5 Depth=1
	movl	%r15d, -308(%rbp)               ## 4-byte Spill
	movq	-328(%rbp), %rax                ## 8-byte Reload
	movq	%rax, -320(%rbp)                ## 8-byte Spill
LBB0_14:                                ##   in Loop: Header=BB0_5 Depth=1
	incq	%r14
	cmpq	-336(%rbp), %r14                ## 8-byte Folded Reload
	je	LBB0_2
LBB0_5:                                 ## =>This Loop Header: Depth=1
                                        ##     Child Loop BB0_7 Depth 2
	xorps	%xmm0, %xmm0
	movaps	%xmm0, -64(%rbp)
	movaps	%xmm0, -80(%rbp)
	movaps	%xmm0, -96(%rbp)
	movaps	%xmm0, -112(%rbp)
	movaps	%xmm0, -128(%rbp)
	movaps	%xmm0, -144(%rbp)
	movaps	%xmm0, -160(%rbp)
	movaps	%xmm0, -176(%rbp)
	movaps	%xmm0, -192(%rbp)
	movaps	%xmm0, -208(%rbp)
	movaps	%xmm0, -224(%rbp)
	movaps	%xmm0, -240(%rbp)
	movaps	%xmm0, -256(%rbp)
	movaps	%xmm0, -272(%rbp)
	movaps	%xmm0, -288(%rbp)
	movaps	%xmm0, -304(%rbp)
	movq	-344(%rbp), %rax                ## 8-byte Reload
	movq	(%rax,%r14,8), %rax
	movq	%rax, -328(%rbp)                ## 8-byte Spill
	movb	(%rax), %r12b
	movl	$0, %r15d
	testb	%r12b, %r12b
	je	LBB0_10
## %bb.6:                               ##   in Loop: Header=BB0_5 Depth=1
	movq	-328(%rbp), %rax                ## 8-byte Reload
	leaq	1(%rax), %r13
	xorl	%r15d, %r15d
	jmp	LBB0_7
	.p2align	4, 0x90
LBB0_9:                                 ##   in Loop: Header=BB0_7 Depth=2
	movzbl	(%r13), %r12d
	incq	%r13
	testb	%r12b, %r12b
	je	LBB0_10
LBB0_7:                                 ##   Parent Loop BB0_5 Depth=1
                                        ## =>  This Inner Loop Header: Depth=2
	movsbl	%r12b, %esi
	movq	%rbx, %rdi
	callq	_strchr
	testq	%rax, %rax
	jne	LBB0_9
## %bb.8:                               ##   in Loop: Header=BB0_7 Depth=2
	movq	%rbx, %rdi
	callq	_strlen
	cltq
	movb	%r12b, -304(%rbp,%rax)
	incl	%eax
	cltq
	movb	$0, -304(%rbp,%rax)
	incl	%r15d
	jmp	LBB0_9
	.p2align	4, 0x90
LBB0_10:                                ##   in Loop: Header=BB0_5 Depth=1
	cmpl	-308(%rbp), %r15d               ## 4-byte Folded Reload
	jg	LBB0_13
## %bb.11:                              ##   in Loop: Header=BB0_5 Depth=1
	jne	LBB0_14
## %bb.12:                              ##   in Loop: Header=BB0_5 Depth=1
	movq	-328(%rbp), %rdi                ## 8-byte Reload
	movq	-320(%rbp), %rsi                ## 8-byte Reload
	callq	_strcmp
	testl	%eax, %eax
	js	LBB0_13
	jmp	LBB0_14
LBB0_1:
	leaq	L_.str(%rip), %rax
	movq	%rax, -320(%rbp)                ## 8-byte Spill
LBB0_2:
	movq	___stack_chk_guard@GOTPCREL(%rip), %rax
	movq	(%rax), %rax
	cmpq	-48(%rbp), %rax
	jne	LBB0_15
## %bb.3:
	movq	-320(%rbp), %rax                ## 8-byte Reload
	addq	$312, %rsp                      ## imm = 0x138
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
LBB0_15:
	callq	___stack_chk_fail
	.cfi_endproc
                                        ## -- End function
	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.space	1

.subsections_via_symbols
