# problem82/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ; -- Begin function func0
	.p2align	2
_func0:                                 ; @func0
	.cfi_startproc
; %bb.0:
	stp	x28, x27, [sp, #-96]!           ; 16-byte Folded Spill
	.cfi_def_cfa_offset 96
	stp	x26, x25, [sp, #16]             ; 16-byte Folded Spill
	stp	x24, x23, [sp, #32]             ; 16-byte Folded Spill
	stp	x22, x21, [sp, #48]             ; 16-byte Folded Spill
	stp	x20, x19, [sp, #64]             ; 16-byte Folded Spill
	stp	x29, x30, [sp, #80]             ; 16-byte Folded Spill
	add	x29, sp, #80
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	.cfi_offset w19, -24
	.cfi_offset w20, -32
	.cfi_offset w21, -40
	.cfi_offset w22, -48
	.cfi_offset w23, -56
	.cfi_offset w24, -64
	.cfi_offset w25, -72
	.cfi_offset w26, -80
	.cfi_offset w27, -88
	.cfi_offset w28, -96
	mov	x20, x1
	mov	x19, x0
	sbfiz	x0, x20, #3, #32
	bl	_malloc
	cmp	w20, #1
	b.lt	LBB0_28
; %bb.1:
	mov	w8, w20
	mov	x9, #10695
	movk	x9, #37434, lsl #16
	movk	x9, #65483, lsl #32
	movk	x9, #16399, lsl #48
Lloh0:
	adrp	x10, l_.str.1@PAGE
Lloh1:
	add	x10, x10, l_.str.1@PAGEOFF
	mov	x11, #28626
	movk	x11, #1887, lsl #16
	movk	x11, #39374, lsl #32
	movk	x11, #16397, lsl #48
	mov	x12, #15519
	movk	x12, #54316, lsl #16
	movk	x12, #26266, lsl #32
	movk	x12, #16394, lsl #48
Lloh2:
	adrp	x13, l_.str.2@PAGE
Lloh3:
	add	x13, x13, l_.str.2@PAGEOFF
Lloh4:
	adrp	x14, l_.str.3@PAGE
Lloh5:
	add	x14, x14, l_.str.3@PAGEOFF
	mov	x15, #54841
	movk	x15, #28101, lsl #16
	movk	x15, #52, lsl #32
	movk	x15, #16392, lsl #48
	mov	x16, #28626
	movk	x16, #1887, lsl #16
	movk	x16, #39374, lsl #32
	movk	x16, #16389, lsl #48
Lloh6:
	adrp	x17, l_.str.4@PAGE
Lloh7:
	add	x17, x17, l_.str.4@PAGEOFF
Lloh8:
	adrp	x1, l_.str.5@PAGE
Lloh9:
	add	x1, x1, l_.str.5@PAGEOFF
	mov	x2, #15519
	movk	x2, #54316, lsl #16
	movk	x2, #26266, lsl #32
	movk	x2, #16386, lsl #48
	mov	x3, #54841
	movk	x3, #28101, lsl #16
	movk	x3, #52, lsl #32
	movk	x3, #16384, lsl #48
Lloh10:
	adrp	x4, l_.str.6@PAGE
Lloh11:
	add	x4, x4, l_.str.6@PAGEOFF
Lloh12:
	adrp	x5, l_.str.7@PAGE
Lloh13:
	add	x5, x5, l_.str.7@PAGEOFF
	mov	x6, #57252
	movk	x6, #3774, lsl #16
	movk	x6, #13212, lsl #32
	movk	x6, #16379, lsl #48
	mov	x7, #31038
	movk	x7, #43096, lsl #16
	movk	x7, #52533, lsl #32
	movk	x7, #16372, lsl #48
Lloh14:
	adrp	x20, l_.str.8@PAGE
Lloh15:
	add	x20, x20, l_.str.8@PAGEOFF
Lloh16:
	adrp	x21, l_.str.9@PAGE
Lloh17:
	add	x21, x21, l_.str.9@PAGEOFF
	mov	x22, #44145
	movk	x22, #56203, lsl #16
	movk	x22, #104, lsl #32
	movk	x22, #16368, lsl #48
	mov	x23, #48968
	movk	x23, #7549, lsl #16
	movk	x23, #26424, lsl #32
	movk	x23, #16358, lsl #48
Lloh18:
	adrp	x24, l_.str.10@PAGE
Lloh19:
	add	x24, x24, l_.str.10@PAGEOFF
Lloh20:
	adrp	x25, l_.str.11@PAGE
Lloh21:
	add	x25, x25, l_.str.11@PAGEOFF
	mov	x26, #17197
	movk	x26, #60188, lsl #16
	movk	x26, #14050, lsl #32
	movk	x26, #16154, lsl #48
Lloh22:
	adrp	x27, l_.str.12@PAGE
Lloh23:
	add	x27, x27, l_.str.12@PAGEOFF
	mov	x28, x0
Lloh24:
	adrp	x30, l_.str@PAGE
Lloh25:
	add	x30, x30, l_.str@PAGEOFF
	b	LBB0_4
LBB0_2:                                 ;   in Loop: Header=BB0_4 Depth=1
	str	x30, [x28]
LBB0_3:                                 ;   in Loop: Header=BB0_4 Depth=1
	add	x28, x28, #8
	add	x19, x19, #4
	subs	x8, x8, #1
	b.eq	LBB0_28
LBB0_4:                                 ; =>This Inner Loop Header: Depth=1
	ldr	s0, [x19]
	fcvt	d0, s0
	fmov	d1, x9
	fcmp	d0, d1
	b.ge	LBB0_2
; %bb.5:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x11
	fcmp	d0, d1
	b.le	LBB0_7
; %bb.6:                                ;   in Loop: Header=BB0_4 Depth=1
	str	x10, [x28]
	b	LBB0_3
LBB0_7:                                 ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x12
	fcmp	d0, d1
	b.le	LBB0_9
; %bb.8:                                ;   in Loop: Header=BB0_4 Depth=1
	str	x13, [x28]
	b	LBB0_3
LBB0_9:                                 ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x15
	fcmp	d0, d1
	b.le	LBB0_11
; %bb.10:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x14, [x28]
	b	LBB0_3
LBB0_11:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x16
	fcmp	d0, d1
	b.le	LBB0_13
; %bb.12:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x17, [x28]
	b	LBB0_3
LBB0_13:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x2
	fcmp	d0, d1
	b.le	LBB0_15
; %bb.14:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x1, [x28]
	b	LBB0_3
LBB0_15:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x3
	fcmp	d0, d1
	b.le	LBB0_17
; %bb.16:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x4, [x28]
	b	LBB0_3
LBB0_17:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x6
	fcmp	d0, d1
	b.le	LBB0_19
; %bb.18:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x5, [x28]
	b	LBB0_3
LBB0_19:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x7
	fcmp	d0, d1
	b.le	LBB0_21
; %bb.20:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x20, [x28]
	b	LBB0_3
LBB0_21:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x22
	fcmp	d0, d1
	b.le	LBB0_23
; %bb.22:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x21, [x28]
	b	LBB0_3
LBB0_23:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x23
	fcmp	d0, d1
	b.le	LBB0_25
; %bb.24:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x24, [x28]
	b	LBB0_3
LBB0_25:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x26
	fcmp	d0, d1
	b.le	LBB0_27
; %bb.26:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x25, [x28]
	b	LBB0_3
LBB0_27:                                ;   in Loop: Header=BB0_4 Depth=1
	str	x27, [x28]
	b	LBB0_3
LBB0_28:
	ldp	x29, x30, [sp, #80]             ; 16-byte Folded Reload
	ldp	x20, x19, [sp, #64]             ; 16-byte Folded Reload
	ldp	x22, x21, [sp, #48]             ; 16-byte Folded Reload
	ldp	x24, x23, [sp, #32]             ; 16-byte Folded Reload
	ldp	x26, x25, [sp, #16]             ; 16-byte Folded Reload
	ldp	x28, x27, [sp], #96             ; 16-byte Folded Reload
	ret
	.loh AdrpAdd	Lloh24, Lloh25
	.loh AdrpAdd	Lloh22, Lloh23
	.loh AdrpAdd	Lloh20, Lloh21
	.loh AdrpAdd	Lloh18, Lloh19
	.loh AdrpAdd	Lloh16, Lloh17
	.loh AdrpAdd	Lloh14, Lloh15
	.loh AdrpAdd	Lloh12, Lloh13
	.loh AdrpAdd	Lloh10, Lloh11
	.loh AdrpAdd	Lloh8, Lloh9
	.loh AdrpAdd	Lloh6, Lloh7
	.loh AdrpAdd	Lloh4, Lloh5
	.loh AdrpAdd	Lloh2, Lloh3
	.loh AdrpAdd	Lloh0, Lloh1
	.cfi_endproc
                                        ; -- End function
	.section	__TEXT,__cstring,cstring_literals
l_.str:                                 ; @.str
	.asciz	"A+"

l_.str.1:                               ; @.str.1
	.asciz	"A"

l_.str.2:                               ; @.str.2
	.asciz	"A-"

l_.str.3:                               ; @.str.3
	.asciz	"B+"

l_.str.4:                               ; @.str.4
	.asciz	"B"

l_.str.5:                               ; @.str.5
	.asciz	"B-"

l_.str.6:                               ; @.str.6
	.asciz	"C+"

l_.str.7:                               ; @.str.7
	.asciz	"C"

l_.str.8:                               ; @.str.8
	.asciz	"C-"

l_.str.9:                               ; @.str.9
	.asciz	"D+"

l_.str.10:                              ; @.str.10
	.asciz	"D"

l_.str.11:                              ; @.str.11
	.asciz	"D-"

l_.str.12:                              ; @.str.12
	.asciz	"E"

.subsections_via_symbols
