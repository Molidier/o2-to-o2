# problem73/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%rbx
	.cfi_offset %rbx, -24
                                        ## kill: def $esi killed $esi def $rsi
	movl	%esi, %r8d
	shrl	$31, %r8d
	addl	%esi, %r8d
	sarl	%r8d
	xorl	%r10d, %r10d
	cmpl	$2, %esi
	jl	LBB0_5
## %bb.1:
	movl	%r8d, %r9d
	leal	-1(%rsi), %r11d
	xorl	%ecx, %ecx
	xorl	%r10d, %r10d
	.p2align	4, 0x90
LBB0_2:                                 ## =>This Inner Loop Header: Depth=1
	movl	(%rdi,%rcx,4), %eax
	movslq	%r11d, %rbx
	cmpl	(%rdi,%rbx,4), %eax
	jne	LBB0_3
## %bb.4:                               ##   in Loop: Header=BB0_2 Depth=1
	leal	(%r10,%rax,2), %r10d
	incq	%rcx
	decl	%r11d
	cmpq	%rcx, %r9
	jne	LBB0_2
LBB0_5:
	andl	$-2147483647, %esi              ## imm = 0x80000001
	cmpl	$1, %esi
	jne	LBB0_7
## %bb.6:
	movslq	%r8d, %rax
	addl	(%rdi,%rax,4), %r10d
LBB0_7:
	cmpl	%edx, %r10d
	setle	%al
	jmp	LBB0_8
LBB0_3:
	xorl	%eax, %eax
LBB0_8:
                                        ## kill: def $al killed $al killed $eax
	popq	%rbx
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
