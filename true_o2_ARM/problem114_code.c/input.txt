# problem114/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movl	%esi, %r15d
	movq	%rdi, %r14
	movslq	%esi, %rbx
	leaq	(,%rbx,8), %rdi
	callq	_malloc
	movq	%rax, %r12
	testl	%ebx, %ebx
	jle	LBB0_8
## %bb.1:
	movl	%r15d, %r13d
	xorl	%r15d, %r15d
	jmp	LBB0_2
	.p2align	4, 0x90
LBB0_7:                                 ##   in Loop: Header=BB0_2 Depth=1
	movl	$100, %edi
	callq	_malloc
	movq	%rax, (%r12,%r15,8)
	movl	%ebx, (%rsp)
	movl	$100, %edx
	movq	%rax, %rdi
	xorl	%esi, %esi
	leaq	L_.str(%rip), %rcx
	movl	%ebx, %r8d
	movl	%ebx, %r9d
	xorl	%eax, %eax
	callq	___sprintf_chk
	incq	%r15
	cmpq	%r13, %r15
	je	LBB0_8
LBB0_2:                                 ## =>This Loop Header: Depth=1
                                        ##     Child Loop BB0_4 Depth 2
	movq	(%r14,%r15,8), %rax
	movb	(%rax), %cl
	movl	$0, %ebx
	testb	%cl, %cl
	je	LBB0_7
## %bb.3:                               ##   in Loop: Header=BB0_2 Depth=1
	incq	%rax
	xorl	%ebx, %ebx
	jmp	LBB0_4
	.p2align	4, 0x90
LBB0_6:                                 ##   in Loop: Header=BB0_4 Depth=2
	movzbl	(%rax), %ecx
	incq	%rax
	testb	%cl, %cl
	je	LBB0_7
LBB0_4:                                 ##   Parent Loop BB0_2 Depth=1
                                        ## =>  This Inner Loop Header: Depth=2
	leal	-48(%rcx), %edx
	cmpb	$9, %dl
	ja	LBB0_6
## %bb.5:                               ##   in Loop: Header=BB0_4 Depth=2
	movzbl	%cl, %ecx
	addl	$-48, %ecx
	andl	$-2147483647, %ecx              ## imm = 0x80000001
	xorl	%edx, %edx
	cmpl	$1, %ecx
	sete	%dl
	addl	%edx, %ebx
	jmp	LBB0_6
LBB0_8:
	movq	%r12, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"the number of odd elements %d in the string %d of the %d input."

.subsections_via_symbols
