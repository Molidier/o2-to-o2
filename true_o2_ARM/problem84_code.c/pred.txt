# problem84/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ; -- Begin function func0
	.p2align	2
_func0:                                 ; @func0
	.cfi_startproc
; %bb.0:
	cmp	w0, #1
	b.lt	LBB0_5
; %bb.1:
	b.ne	LBB0_3
; %bb.2:
	mov	w0, #1
	ret
LBB0_3:
	cmp	w0, #3
	b.hs	LBB0_6
; %bb.4:
	mov	w0, #18
	ret
LBB0_5:
	mov	w0, #0
	ret
LBB0_6:
	sub	w10, w0, #2
	cmp	w10, #16
	b.hs	LBB0_8
; %bb.7:
	mov	w8, #18
	mov	w9, #2
	b	LBB0_11
LBB0_8:
	and	w11, w10, #0xfffffff0
	orr	w9, w11, #0x2
	movi.4s	v0, #1
	movi.4s	v1, #18
	mov	x8, x11
	movi.4s	v2, #1
	movi.4s	v3, #1
	movi.4s	v4, #1
LBB0_9:                                 ; =>This Inner Loop Header: Depth=1
	mul.4s	v1, v1, v0
	mul.4s	v2, v2, v0
	mul.4s	v3, v3, v0
	mul.4s	v4, v4, v0
	subs	w8, w8, #16
	b.ne	LBB0_9
; %bb.10:
	mul.4s	v0, v2, v1
	mul.4s	v0, v3, v0
	mul.4s	v0, v4, v0
	ext.16b	v1, v0, v0, #8
	mul.2s	v0, v0, v1
	fmov	w8, s0
	mov.s	w12, v0[1]
	mul	w8, w8, w12
	cmp	w10, w11
	b.eq	LBB0_13
LBB0_11:
	sub	w9, w0, w9
LBB0_12:                                ; =>This Inner Loop Header: Depth=1
	add	w8, w8, w8, lsl #2
	lsl	w8, w8, #1
	subs	w9, w9, #1
	b.ne	LBB0_12
LBB0_13:
	mov	x0, x8
	ret
	.cfi_endproc
                                        ; -- End function
.subsections_via_symbols

