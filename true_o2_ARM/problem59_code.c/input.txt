# problem59/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movq	%r8, -48(%rbp)                  ## 8-byte Spill
	movl	%ecx, %r15d
	movq	%rdx, %r14
	movl	%esi, %r13d
	movq	%rdi, %r12
	movslq	%esi, %rbx
	leaq	(,%rbx,4), %rdi
	callq	_malloc
	testl	%ebx, %ebx
	jle	LBB0_1
## %bb.2:
	movl	%r13d, %r8d
	movl	%r15d, %esi
	xorl	%edi, %edi
	xorl	%r9d, %r9d
	jmp	LBB0_3
	.p2align	4, 0x90
LBB0_16:                                ##   in Loop: Header=BB0_3 Depth=1
	movslq	%r9d, %rdx
	incl	%r9d
	movl	%ecx, (%rax,%rdx,4)
LBB0_17:                                ##   in Loop: Header=BB0_3 Depth=1
	incq	%rdi
	cmpq	%r8, %rdi
	je	LBB0_9
LBB0_3:                                 ## =>This Loop Header: Depth=1
                                        ##     Child Loop BB0_5 Depth 2
                                        ##     Child Loop BB0_15 Depth 2
	testl	%r9d, %r9d
	jle	LBB0_7
## %bb.4:                               ##   in Loop: Header=BB0_3 Depth=1
	movl	(%r12,%rdi,4), %ecx
	movl	%r9d, %edx
	xorl	%ebx, %ebx
	.p2align	4, 0x90
LBB0_5:                                 ##   Parent Loop BB0_3 Depth=1
                                        ## =>  This Inner Loop Header: Depth=2
	cmpl	%ecx, (%rax,%rbx,4)
	je	LBB0_17
## %bb.6:                               ##   in Loop: Header=BB0_5 Depth=2
	incq	%rbx
	cmpq	%rbx, %rdx
	jne	LBB0_5
LBB0_7:                                 ##   in Loop: Header=BB0_3 Depth=1
	testl	%r15d, %r15d
	jle	LBB0_17
## %bb.8:                               ##   in Loop: Header=BB0_3 Depth=1
	movl	(%r12,%rdi,4), %ecx
	xorl	%edx, %edx
	.p2align	4, 0x90
LBB0_15:                                ##   Parent Loop BB0_3 Depth=1
                                        ## =>  This Inner Loop Header: Depth=2
	cmpl	(%r14,%rdx,4), %ecx
	je	LBB0_16
## %bb.14:                              ##   in Loop: Header=BB0_15 Depth=2
	incq	%rdx
	cmpq	%rdx, %rsi
	jne	LBB0_15
	jmp	LBB0_17
LBB0_9:
	cmpl	$2, %r9d
	movq	-48(%rbp), %r15                 ## 8-byte Reload
	jl	LBB0_30
## %bb.10:
	leal	-1(%r9), %r8d
	xorl	%r14d, %r14d
	movl	%r8d, %r11d
	jmp	LBB0_11
	.p2align	4, 0x90
LBB0_29:                                ##   in Loop: Header=BB0_11 Depth=1
	incl	%r14d
	decl	%r11d
	cmpl	%r8d, %r14d
	je	LBB0_30
LBB0_11:                                ## =>This Loop Header: Depth=1
                                        ##     Child Loop BB0_19 Depth 2
	movl	%r14d, %ecx
	notl	%ecx
	addl	%r9d, %ecx
	testl	%ecx, %ecx
	jle	LBB0_29
## %bb.12:                              ##   in Loop: Header=BB0_11 Depth=1
	movl	%r8d, %r10d
	subl	%r14d, %r10d
	movl	(%rax), %esi
	cmpl	$1, %r10d
	jne	LBB0_18
## %bb.13:                              ##   in Loop: Header=BB0_11 Depth=1
	xorl	%ecx, %ecx
LBB0_26:                                ##   in Loop: Header=BB0_11 Depth=1
	testb	$1, %r10b
	je	LBB0_29
## %bb.27:                              ##   in Loop: Header=BB0_11 Depth=1
	movl	4(%rax,%rcx,4), %edx
	cmpl	%edx, %esi
	jle	LBB0_29
## %bb.28:                              ##   in Loop: Header=BB0_11 Depth=1
	movl	%edx, (%rax,%rcx,4)
	movl	%esi, 4(%rax,%rcx,4)
	jmp	LBB0_29
	.p2align	4, 0x90
LBB0_18:                                ##   in Loop: Header=BB0_11 Depth=1
	movl	%r11d, %edi
	andl	$-2, %edi
	xorl	%edx, %edx
	jmp	LBB0_19
	.p2align	4, 0x90
LBB0_24:                                ##   in Loop: Header=BB0_19 Depth=2
	movl	%ebx, 4(%rax,%rdx,4)
	movl	%esi, 8(%rax,%rdx,4)
LBB0_25:                                ##   in Loop: Header=BB0_19 Depth=2
	movq	%rcx, %rdx
	cmpq	%rcx, %rdi
	je	LBB0_26
LBB0_19:                                ##   Parent Loop BB0_11 Depth=1
                                        ## =>  This Inner Loop Header: Depth=2
	movl	4(%rax,%rdx,4), %ecx
	cmpl	%ecx, %esi
	jle	LBB0_20
## %bb.21:                              ##   in Loop: Header=BB0_19 Depth=2
	movl	%ecx, (%rax,%rdx,4)
	movl	%esi, 4(%rax,%rdx,4)
	jmp	LBB0_22
	.p2align	4, 0x90
LBB0_20:                                ##   in Loop: Header=BB0_19 Depth=2
	movl	%ecx, %esi
LBB0_22:                                ##   in Loop: Header=BB0_19 Depth=2
	leaq	2(%rdx), %rcx
	movl	8(%rax,%rdx,4), %ebx
	cmpl	%ebx, %esi
	jg	LBB0_24
## %bb.23:                              ##   in Loop: Header=BB0_19 Depth=2
	movl	%ebx, %esi
	jmp	LBB0_25
LBB0_1:
	xorl	%r9d, %r9d
	movq	-48(%rbp), %r15                 ## 8-byte Reload
LBB0_30:
	movl	%r9d, (%r15)
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
