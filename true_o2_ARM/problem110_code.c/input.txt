# problem110/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	testl	%esi, %esi
	je	LBB0_1
## %bb.2:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%rbx
	.cfi_offset %rbx, -24
	cmpl	$1, %esi
	jle	LBB0_3
## %bb.6:
	movl	%esi, %r10d
	movl	(%rdi), %r8d
	leaq	-1(%r10), %r9
	cmpq	$8, %r9
	jae	LBB0_8
## %bb.7:
	xorl	%r11d, %r11d
	movl	$1, %ebx
	movl	%r8d, %eax
	jmp	LBB0_12
LBB0_1:
	movb	$1, %al
	retq
LBB0_3:
	movl	(%rdi), %r8d
	xorl	%r11d, %r11d
	jmp	LBB0_4
LBB0_8:
	movq	%r9, %rcx
	andq	$-8, %rcx
	leaq	1(%rcx), %rbx
	movd	%r8d, %xmm0
	pshufd	$0, %xmm0, %xmm0                ## xmm0 = xmm0[0,0,0,0]
	pxor	%xmm1, %xmm1
	xorl	%eax, %eax
	pxor	%xmm2, %xmm2
	.p2align	4, 0x90
LBB0_9:                                 ## =>This Inner Loop Header: Depth=1
	movdqu	4(%rdi,%rax,4), %xmm3
	movdqa	%xmm3, %xmm4
	palignr	$12, %xmm0, %xmm4               ## xmm4 = xmm0[12,13,14,15],xmm4[0,1,2,3,4,5,6,7,8,9,10,11]
	movdqu	20(%rdi,%rax,4), %xmm0
	movdqa	%xmm0, %xmm5
	palignr	$12, %xmm3, %xmm5               ## xmm5 = xmm3[12,13,14,15],xmm5[0,1,2,3,4,5,6,7,8,9,10,11]
	pcmpgtd	%xmm3, %xmm4
	psubd	%xmm4, %xmm1
	pcmpgtd	%xmm0, %xmm5
	psubd	%xmm5, %xmm2
	addq	$8, %rax
	cmpq	%rax, %rcx
	jne	LBB0_9
## %bb.10:
	paddd	%xmm1, %xmm2
	pshufd	$238, %xmm2, %xmm1              ## xmm1 = xmm2[2,3,2,3]
	paddd	%xmm2, %xmm1
	pshufd	$85, %xmm1, %xmm2               ## xmm2 = xmm1[1,1,1,1]
	paddd	%xmm1, %xmm2
	movd	%xmm2, %r11d
	cmpq	%rcx, %r9
	je	LBB0_4
## %bb.11:
	pextrd	$3, %xmm0, %eax
	.p2align	4, 0x90
LBB0_12:                                ## =>This Inner Loop Header: Depth=1
	movl	(%rdi,%rbx,4), %ecx
	xorl	%edx, %edx
	cmpl	%eax, %ecx
	setl	%dl
	addl	%edx, %r11d
	incq	%rbx
	movl	%ecx, %eax
	cmpq	%rbx, %r10
	jne	LBB0_12
LBB0_4:
	movslq	%esi, %rcx
	xorl	%edx, %edx
	cmpl	%r8d, -4(%rdi,%rcx,4)
	setg	%dl
	addl	%r11d, %edx
	cmpl	$2, %edx
	setb	%al
	popq	%rbx
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
