# problem17/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$1032, %rsp                     ## imm = 0x408
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movq	%rdi, %rbx
	movq	___stack_chk_guard@GOTPCREL(%rip), %rax
	movq	(%rax), %rax
	movq	%rax, -48(%rbp)
	leaq	-1072(%rbp), %rdi
	movl	$1024, %esi                     ## imm = 0x400
	callq	___bzero
	movb	(%rbx), %al
	testb	%al, %al
	je	LBB0_1
## %bb.2:
	incq	%rbx
	xorl	%r14d, %r14d
	movq	__DefaultRuneLocale@GOTPCREL(%rip), %r15
	movl	$256, %r12d                     ## imm = 0x100
	jmp	LBB0_3
	.p2align	4, 0x90
LBB0_9:                                 ##   in Loop: Header=BB0_3 Depth=1
	movzbl	(%rbx), %eax
	incq	%rbx
	testb	%al, %al
	je	LBB0_10
LBB0_3:                                 ## =>This Inner Loop Header: Depth=1
	movzbl	%al, %edi
	callq	___tolower
                                        ## kill: def $eax killed $eax def $rax
	movsbq	%al, %r13
	cmpl	$0, -1072(%rbp,%r13,4)
	jne	LBB0_9
## %bb.4:                               ##   in Loop: Header=BB0_3 Depth=1
	movzbl	%al, %edi
	cmpl	$127, %edi
	ja	LBB0_6
## %bb.5:                               ##   in Loop: Header=BB0_3 Depth=1
	movl	%edi, %eax
	movl	60(%r15,%rax,4), %eax
	andl	%r12d, %eax
	testl	%eax, %eax
	jne	LBB0_8
	jmp	LBB0_9
LBB0_6:                                 ##   in Loop: Header=BB0_3 Depth=1
	movl	$256, %esi                      ## imm = 0x100
	callq	___maskrune
	testl	%eax, %eax
	je	LBB0_9
LBB0_8:                                 ##   in Loop: Header=BB0_3 Depth=1
	movl	$1, -1072(%rbp,%r13,4)
	incl	%r14d
	jmp	LBB0_9
LBB0_1:
	xorl	%r14d, %r14d
LBB0_10:
	movq	___stack_chk_guard@GOTPCREL(%rip), %rax
	movq	(%rax), %rax
	cmpq	-48(%rbp), %rax
	jne	LBB0_12
## %bb.11:
	movl	%r14d, %eax
	addq	$1032, %rsp                     ## imm = 0x408
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
LBB0_12:
	callq	___stack_chk_fail
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
