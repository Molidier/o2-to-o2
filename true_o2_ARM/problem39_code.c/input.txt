# problem39/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movl	%esi, -48(%rbp)                 ## 4-byte Spill
	movq	%rdi, %r13
	callq	_strlen
	movq	%rax, -56(%rbp)                 ## 8-byte Spill
	testl	%eax, %eax
	jle	LBB0_7
## %bb.1:
	movq	-56(%rbp), %rax                 ## 8-byte Reload
	addl	$2, %eax
	movl	$2863311531, %ecx               ## imm = 0xAAAAAAAB
	imulq	%rax, %rcx
	shrq	$33, %rcx
	movl	$3, %r12d
	xorl	%r15d, %r15d
	leaq	-44(%rbp), %r14
	jmp	LBB0_2
LBB0_5:                                 ##   in Loop: Header=BB0_2 Depth=1
	movzbl	-44(%rbp), %eax
	movzwl	-43(%rbp), %ecx
	movw	%cx, -44(%rbp)
	movb	%al, -42(%rbp)
	.p2align	4, 0x90
LBB0_6:                                 ##   in Loop: Header=BB0_2 Depth=1
	movq	%r13, %rdi
	movq	%r14, %rsi
	movq	%rbx, %rdx
	callq	_strncpy
	addl	$3, %r12d
	addl	$-3, %r15d
	addq	$3, %r13
	movq	-64(%rbp), %rcx                 ## 8-byte Reload
	decq	%rcx
	je	LBB0_7
LBB0_2:                                 ## =>This Inner Loop Header: Depth=1
	movq	%rcx, -64(%rbp)                 ## 8-byte Spill
	movq	-56(%rbp), %rax                 ## 8-byte Reload
	cmpl	%eax, %r12d
                                        ## kill: def $eax killed $eax killed $rax
	cmovll	%r12d, %eax
	addl	%r15d, %eax
	movslq	%eax, %rbx
	movl	$4, %ecx
	movq	%r14, %rdi
	movq	%r13, %rsi
	movq	%rbx, %rdx
	callq	___strncpy_chk
	movb	$0, -44(%rbp,%rbx)
	cmpl	$3, %ebx
	jne	LBB0_6
## %bb.3:                               ##   in Loop: Header=BB0_2 Depth=1
	cmpl	$0, -48(%rbp)                   ## 4-byte Folded Reload
	je	LBB0_5
## %bb.4:                               ##   in Loop: Header=BB0_2 Depth=1
	movzbl	-42(%rbp), %eax
	movzbl	-44(%rbp), %ecx
	movzbl	-43(%rbp), %edx
	movb	%dl, -42(%rbp)
	movb	%cl, -43(%rbp)
	movb	%al, -44(%rbp)
	jmp	LBB0_6
LBB0_7:
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
