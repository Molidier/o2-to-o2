# problem88/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movq	%r8, -64(%rbp)                  ## 8-byte Spill
	movl	%ecx, -44(%rbp)                 ## 4-byte Spill
	movq	%rdx, -88(%rbp)                 ## 8-byte Spill
	movl	%esi, %r14d
	movq	%rdi, -72(%rbp)                 ## 8-byte Spill
	movl	$800, %edi                      ## imm = 0x320
	callq	_malloc
	movq	%rax, -56(%rbp)                 ## 8-byte Spill
	testl	%r14d, %r14d
	jle	LBB0_1
## %bb.3:
	movl	%r14d, %eax
	movq	%rax, -80(%rbp)                 ## 8-byte Spill
	xorl	%r15d, %r15d
	xorl	%r13d, %r13d
	jmp	LBB0_4
	.p2align	4, 0x90
LBB0_9:                                 ##   in Loop: Header=BB0_4 Depth=1
	incq	%r15
	cmpq	-80(%rbp), %r15                 ## 8-byte Folded Reload
	je	LBB0_2
LBB0_4:                                 ## =>This Loop Header: Depth=1
                                        ##     Child Loop BB0_6 Depth 2
	movq	-88(%rbp), %rax                 ## 8-byte Reload
	movl	(%rax,%r15,4), %r12d
	testl	%r12d, %r12d
	jle	LBB0_9
## %bb.5:                               ##   in Loop: Header=BB0_4 Depth=1
	movq	-72(%rbp), %rax                 ## 8-byte Reload
	movq	(%rax,%r15,8), %r14
	jmp	LBB0_6
	.p2align	4, 0x90
LBB0_8:                                 ##   in Loop: Header=BB0_6 Depth=2
	leaq	1(%rbx), %rax
	movq	%rbx, %r12
	cmpq	$1, %rax
	jbe	LBB0_9
LBB0_6:                                 ##   Parent Loop BB0_4 Depth=1
                                        ## =>  This Inner Loop Header: Depth=2
	leaq	-1(%r12), %rbx
	movl	%ebx, %eax
	movl	-44(%rbp), %ecx                 ## 4-byte Reload
	cmpl	%ecx, (%r14,%rax,4)
	jne	LBB0_8
## %bb.7:                               ##   in Loop: Header=BB0_6 Depth=2
	decl	%r12d
	movl	$8, %edi
	callq	_malloc
	movslq	%r13d, %r13
	movq	-56(%rbp), %rcx                 ## 8-byte Reload
	movq	%rax, (%rcx,%r13,8)
	movl	%r15d, (%rax)
	movl	%r12d, 4(%rax)
	incl	%r13d
	jmp	LBB0_8
LBB0_1:
	xorl	%r13d, %r13d
LBB0_2:
	movq	-64(%rbp), %rax                 ## 8-byte Reload
	movl	%r13d, (%rax)
	movq	-56(%rbp), %rax                 ## 8-byte Reload
	addq	$56, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
