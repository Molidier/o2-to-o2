# problem155/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movq	%rdi, -72(%rbp)                 ## 8-byte Spill
	movq	%rsi, -80(%rbp)                 ## 8-byte Spill
	movq	%rsi, %rdi
	callq	_strlen
	movq	%rax, %rbx
	addl	%eax, %eax
	incl	%eax
	movslq	%eax, %rdi
	callq	_malloc
	movq	%rax, -48(%rbp)                 ## 8-byte Spill
	testl	%ebx, %ebx
	jle	LBB0_1
## %bb.2:
	movslq	%ebx, %r15
	movl	%r15d, %eax
	movq	%rax, -56(%rbp)                 ## 8-byte Spill
	movb	$1, %r12b
	xorl	%ebx, %ebx
	movq	%r15, %r14
	movq	%r15, -64(%rbp)                 ## 8-byte Spill
	movq	-48(%rbp), %r13                 ## 8-byte Reload
	.p2align	4, 0x90
LBB0_4:                                 ## =>This Inner Loop Header: Depth=1
	movq	-80(%rbp), %r15                 ## 8-byte Reload
	leaq	(%r15,%rbx), %rsi
	movq	%r13, %rdi
	movq	%r14, %rdx
	callq	_strncpy
	leaq	(%r14,%r13), %rdi
	movq	%r15, %rsi
	movq	-64(%rbp), %r15                 ## 8-byte Reload
	movq	%rbx, %rdx
	callq	_strncpy
	movb	$0, (%r13,%r15)
	movq	-72(%rbp), %rdi                 ## 8-byte Reload
	movq	%r13, %rsi
	callq	_strstr
	testq	%rax, %rax
	jne	LBB0_5
## %bb.3:                               ##   in Loop: Header=BB0_4 Depth=1
	incq	%rbx
	cmpq	%r15, %rbx
	setl	%r12b
	decq	%r14
	cmpq	%rbx, -56(%rbp)                 ## 8-byte Folded Reload
	jne	LBB0_4
	jmp	LBB0_5
LBB0_1:
	xorl	%r12d, %r12d
LBB0_5:
	movq	-48(%rbp), %rdi                 ## 8-byte Reload
	callq	_free
	andb	$1, %r12b
	movl	%r12d, %eax
	addq	$40, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
