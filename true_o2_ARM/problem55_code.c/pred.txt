# problem55/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ; -- Begin function func0
	.p2align	2
_func0:                                 ; @func0
	.cfi_startproc
; %bb.0:
	stp	x22, x21, [sp, #-48]!           ; 16-byte Folded Spill
	.cfi_def_cfa_offset 48
	stp	x20, x19, [sp, #16]             ; 16-byte Folded Spill
	stp	x29, x30, [sp, #32]             ; 16-byte Folded Spill
	add	x29, sp, #32
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	.cfi_offset w19, -24
	.cfi_offset w20, -32
	.cfi_offset w21, -40
	.cfi_offset w22, -48
	mov	x19, x1
	mov	x20, x0
	bl	_strlen
	mov	x21, x0
	mov	x0, x19
	bl	_strlen
                                        ; kill: def $w0 killed $w0 def $x0
	cmp	w21, #1
	b.lt	LBB0_9
; %bb.1:
	mov	x8, #0
	sxtw	x9, w21
	and	x10, x21, #0xffffffff
	and	x11, x0, #0xffffffff
	mov	w12, #1
LBB0_2:                                 ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_4 Depth 2
	cmp	w0, #1
	b.lt	LBB0_8
; %bb.3:                                ;   in Loop: Header=BB0_2 Depth=1
	ldrb	w13, [x20, x8]
	mov	x14, x11
	mov	x15, x19
LBB0_4:                                 ;   Parent Loop BB0_2 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldrb	w16, [x15]
	cmp	w13, w16
	b.eq	LBB0_6
; %bb.5:                                ;   in Loop: Header=BB0_4 Depth=2
	add	x15, x15, #1
	subs	x14, x14, #1
	b.ne	LBB0_4
	b	LBB0_7
LBB0_6:                                 ;   in Loop: Header=BB0_2 Depth=1
	add	x8, x8, #1
	cmp	x8, x9
	cset	w12, lt
	cmp	x8, x10
	b.ne	LBB0_2
	b	LBB0_9
LBB0_7:
	tbz	w12, #0, LBB0_9
LBB0_8:
	mov	w0, #0
	b	LBB0_18
LBB0_9:
	cmp	w0, #1
	b.lt	LBB0_16
; %bb.10:
	mov	x8, #0
	sxtw	x9, w0
	and	x10, x0, #0xffffffff
	and	x11, x21, #0xffffffff
	mov	w12, #1
LBB0_11:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_13 Depth 2
	cmp	w21, #1
	b.lt	LBB0_19
; %bb.12:                               ;   in Loop: Header=BB0_11 Depth=1
	ldrb	w13, [x19, x8]
	mov	x14, x11
	mov	x15, x20
LBB0_13:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldrb	w16, [x15]
	cmp	w13, w16
	b.eq	LBB0_15
; %bb.14:                               ;   in Loop: Header=BB0_13 Depth=2
	add	x15, x15, #1
	subs	x14, x14, #1
	b.ne	LBB0_13
	b	LBB0_17
LBB0_15:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x8, x8, #1
	cmp	x8, x9
	cset	w12, lt
	cmp	x8, x10
	b.ne	LBB0_11
	b	LBB0_17
LBB0_16:
	mov	w12, #0
LBB0_17:
	eor	w0, w12, #0x1
LBB0_18:
	and	w0, w0, #0x1
	ldp	x29, x30, [sp, #32]             ; 16-byte Folded Reload
	ldp	x20, x19, [sp, #16]             ; 16-byte Folded Reload
	ldp	x22, x21, [sp], #48             ; 16-byte Folded Reload
	ret
LBB0_19:
	mov	w12, #1
	b	LBB0_17
	.cfi_endproc
                                        ; -- End function
.subsections_via_symbols

