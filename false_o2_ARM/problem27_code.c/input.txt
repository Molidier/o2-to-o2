# problem27/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movq	%rdx, -56(%rbp)                 ## 8-byte Spill
	movq	%rdi, %r12
	movl	%esi, -44(%rbp)                 ## 4-byte Spill
	movslq	%esi, %r14
	leaq	(,%r14,4), %rdi
	callq	_malloc
	movq	%rax, %r15
	movl	$4, %esi
	movq	%r14, %rdi
	callq	_calloc
	movq	%rax, %r13
	movl	$4, %esi
	movq	%r14, %rdi
	callq	_calloc
	movq	%rax, %rbx
	testl	%r14d, %r14d
	jle	LBB0_1
## %bb.2:
	movl	-44(%rbp), %r8d                 ## 4-byte Reload
	xorl	%edx, %edx
	xorl	%esi, %esi
	xorl	%r9d, %r9d
	jmp	LBB0_3
	.p2align	4, 0x90
LBB0_12:                                ##   in Loop: Header=BB0_3 Depth=1
	movl	%esi, %eax
	incl	%esi
	movq	%r13, %rcx
                                        ## kill: def $esi killed $esi def $rsi
LBB0_13:                                ##   in Loop: Header=BB0_3 Depth=1
	cltq
	movl	%edi, (%rcx,%rax,4)
LBB0_14:                                ##   in Loop: Header=BB0_3 Depth=1
	incq	%rdx
	cmpq	%r8, %rdx
	je	LBB0_15
LBB0_3:                                 ## =>This Loop Header: Depth=1
                                        ##     Child Loop BB0_5 Depth 2
                                        ##     Child Loop BB0_10 Depth 2
	movl	(%r12,%rdx,4), %edi
	testl	%r9d, %r9d
	jle	LBB0_7
## %bb.4:                               ##   in Loop: Header=BB0_3 Depth=1
	movl	%r9d, %eax
	xorl	%ecx, %ecx
	.p2align	4, 0x90
LBB0_5:                                 ##   Parent Loop BB0_3 Depth=1
                                        ## =>  This Inner Loop Header: Depth=2
	cmpl	%edi, (%rbx,%rcx,4)
	je	LBB0_14
## %bb.6:                               ##   in Loop: Header=BB0_5 Depth=2
	incq	%rcx
	cmpq	%rcx, %rax
	jne	LBB0_5
LBB0_7:                                 ##   in Loop: Header=BB0_3 Depth=1
	testl	%esi, %esi
	jle	LBB0_12
## %bb.8:                               ##   in Loop: Header=BB0_3 Depth=1
	movl	%esi, %eax
	xorl	%ecx, %ecx
	.p2align	4, 0x90
LBB0_10:                                ##   Parent Loop BB0_3 Depth=1
                                        ## =>  This Inner Loop Header: Depth=2
	cmpl	%edi, (%r13,%rcx,4)
	je	LBB0_11
## %bb.9:                               ##   in Loop: Header=BB0_10 Depth=2
	incq	%rcx
	cmpq	%rcx, %rax
	jne	LBB0_10
	jmp	LBB0_12
	.p2align	4, 0x90
LBB0_11:                                ##   in Loop: Header=BB0_3 Depth=1
	movl	%r9d, %eax
	incl	%r9d
	movq	%rbx, %rcx
                                        ## kill: def $r9d killed $r9d def $r9
	jmp	LBB0_13
LBB0_15:
	movl	%r9d, %edx
	xorl	%edi, %edi
	xorl	%esi, %esi
	jmp	LBB0_16
	.p2align	4, 0x90
LBB0_20:                                ##   in Loop: Header=BB0_16 Depth=1
	movslq	%esi, %rcx
	incl	%esi
	movl	%eax, (%r15,%rcx,4)
LBB0_21:                                ##   in Loop: Header=BB0_16 Depth=1
	incq	%rdi
	cmpq	%r8, %rdi
	je	LBB0_22
LBB0_16:                                ## =>This Loop Header: Depth=1
                                        ##     Child Loop BB0_19 Depth 2
	movl	(%r12,%rdi,4), %eax
	testl	%r9d, %r9d
	jle	LBB0_20
## %bb.17:                              ##   in Loop: Header=BB0_16 Depth=1
	xorl	%ecx, %ecx
	.p2align	4, 0x90
LBB0_19:                                ##   Parent Loop BB0_16 Depth=1
                                        ## =>  This Inner Loop Header: Depth=2
	cmpl	%eax, (%rbx,%rcx,4)
	je	LBB0_21
## %bb.18:                              ##   in Loop: Header=BB0_19 Depth=2
	incq	%rcx
	cmpq	%rcx, %rdx
	jne	LBB0_19
	jmp	LBB0_20
LBB0_1:
	xorl	%esi, %esi
LBB0_22:
	movq	-56(%rbp), %rax                 ## 8-byte Reload
	movl	%esi, (%rax)
	movq	%r13, %rdi
	callq	_free
	movq	%rbx, %rdi
	callq	_free
	movq	%r15, %rax
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
