# problem120/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movq	%rsi, %r12
	movq	%rdi, %r15
	callq	_strlen
	movq	%rax, %r14
	movq	%r12, %rdi
	callq	_strlen
	testl	%r14d, %r14d
	jle	LBB0_3
## %bb.1:
	movl	%r14d, %r10d
	movl	%r14d, %r8d
	andl	$1, %r8d
	cmpq	$1, %r10
	jne	LBB0_4
## %bb.2:
	xorl	%esi, %esi
	movl	$1, %r13d
	xorl	%edi, %edi
	jmp	LBB0_6
LBB0_3:
	movl	$1, %r13d
	xorl	%edi, %edi
	jmp	LBB0_8
LBB0_4:
	subq	%r8, %r10
	xorl	%r9d, %r9d
	movl	$1, %r13d
	xorl	%esi, %esi
	xorl	%edi, %edi
	.p2align	4, 0x90
LBB0_5:                                 ## =>This Inner Loop Header: Depth=1
	movzbl	(%r15,%rsi), %edx
	movzbl	1(%r15,%rsi), %ecx
	xorl	%ebx, %ebx
	cmpb	$40, %dl
	sete	%bl
	addl	%edi, %ebx
	xorl	%edi, %edi
	cmpb	$41, %dl
	sete	%dil
	subl	%edi, %ebx
	xorl	%edi, %edi
	cmpb	$40, %cl
	sete	%dil
	addl	%ebx, %edi
	xorl	%edx, %edx
	cmpb	$41, %cl
	sete	%dl
	subl	%edx, %edi
	orl	%edi, %ebx
	cmovsl	%r9d, %r13d
	addq	$2, %rsi
	cmpq	%rsi, %r10
	jne	LBB0_5
LBB0_6:
	testq	%r8, %r8
	je	LBB0_8
## %bb.7:
	movb	(%r15,%rsi), %dl
	xorl	%esi, %esi
	cmpb	$40, %dl
	sete	%sil
	addl	%esi, %edi
	xorl	%esi, %esi
	cmpb	$41, %dl
	sete	%sil
	xorl	%edx, %edx
	subl	%esi, %edi
	cmovsl	%edx, %r13d
LBB0_8:
	testl	%eax, %eax
	jle	LBB0_17
## %bb.9:
	movq	%r14, -48(%rbp)                 ## 8-byte Spill
	movl	%eax, %r8d
	movl	%eax, %r10d
	andl	$1, %r10d
	xorl	%r11d, %r11d
	movq	%r8, %r9
	decq	%r9
	je	LBB0_28
## %bb.10:
	movq	%r8, %rsi
	subq	%r10, %rsi
	xorl	%edx, %edx
	.p2align	4, 0x90
LBB0_11:                                ## =>This Inner Loop Header: Depth=1
	movzbl	(%r12,%rdx), %ecx
	movzbl	1(%r12,%rdx), %r14d
	xorl	%ebx, %ebx
	cmpb	$40, %cl
	sete	%bl
	addl	%edi, %ebx
	xorl	%edi, %edi
	cmpb	$41, %cl
	sete	%dil
	subl	%edi, %ebx
	xorl	%edi, %edi
	cmpb	$40, %r14b
	sete	%dil
	addl	%ebx, %edi
	xorl	%ecx, %ecx
	cmpb	$41, %r14b
	sete	%cl
	subl	%ecx, %edi
	orl	%edi, %ebx
	cmovsl	%r11d, %r13d
	addq	$2, %rdx
	cmpq	%rdx, %rsi
	jne	LBB0_11
## %bb.12:
	testq	%r10, %r10
	je	LBB0_14
LBB0_13:
	movb	(%r12,%rdx), %cl
	xorl	%edx, %edx
	cmpb	$40, %cl
	sete	%dl
	addl	%edx, %edi
	xorl	%edx, %edx
	cmpb	$41, %cl
	sete	%dl
	xorl	%ecx, %ecx
	subl	%edx, %edi
	cmovsl	%ecx, %r13d
LBB0_14:
	testl	%edi, %edi
	movq	-48(%rbp), %r14                 ## 8-byte Reload
	jne	LBB0_20
## %bb.15:
	testl	%r13d, %r13d
	jne	LBB0_16
LBB0_20:
	andl	$1, %eax
	testq	%r9, %r9
	je	LBB0_35
## %bb.21:
	subq	%rax, %r8
	xorl	%edi, %edi
	movl	$1, %r9d
	xorl	%ecx, %ecx
	xorl	%esi, %esi
	.p2align	4, 0x90
LBB0_22:                                ## =>This Inner Loop Header: Depth=1
	movzbl	(%r12,%rcx), %edx
	movzbl	1(%r12,%rcx), %r10d
	xorl	%ebx, %ebx
	cmpb	$40, %dl
	sete	%bl
	addl	%esi, %ebx
	xorl	%esi, %esi
	cmpb	$41, %dl
	sete	%sil
	subl	%esi, %ebx
	xorl	%esi, %esi
	cmpb	$40, %r10b
	sete	%sil
	addl	%ebx, %esi
	xorl	%edx, %edx
	cmpb	$41, %r10b
	sete	%dl
	subl	%edx, %esi
	orl	%esi, %ebx
	cmovsl	%edi, %r9d
	addq	$2, %rcx
	cmpq	%rcx, %r8
	jne	LBB0_22
## %bb.23:
	testq	%rax, %rax
	je	LBB0_25
	jmp	LBB0_24
LBB0_17:
	xorl	%esi, %esi
	movl	$1, %r9d
	testl	%edi, %edi
	jne	LBB0_25
## %bb.18:
	testl	%r13d, %r13d
	je	LBB0_25
LBB0_16:
	leaq	L_.str(%rip), %rax
	jmp	LBB0_34
LBB0_28:
	xorl	%edx, %edx
	testq	%r10, %r10
	jne	LBB0_13
	jmp	LBB0_14
LBB0_35:
	xorl	%ecx, %ecx
	movl	$1, %r9d
	xorl	%esi, %esi
	testq	%rax, %rax
	je	LBB0_25
LBB0_24:
	movb	(%r12,%rcx), %al
	xorl	%ecx, %ecx
	cmpb	$40, %al
	sete	%cl
	addl	%ecx, %esi
	xorl	%ecx, %ecx
	cmpb	$41, %al
	sete	%cl
	xorl	%eax, %eax
	subl	%ecx, %esi
	cmovsl	%eax, %r9d
LBB0_25:
	testl	%r14d, %r14d
	jle	LBB0_33
## %bb.26:
	movl	%r14d, %edi
	andl	$1, %r14d
	xorl	%r8d, %r8d
	cmpq	$1, %rdi
	jne	LBB0_29
## %bb.27:
	xorl	%eax, %eax
	jmp	LBB0_31
LBB0_29:
	subq	%r14, %rdi
	xorl	%eax, %eax
	.p2align	4, 0x90
LBB0_30:                                ## =>This Inner Loop Header: Depth=1
	movzbl	(%r15,%rax), %edx
	movzbl	1(%r15,%rax), %ecx
	xorl	%ebx, %ebx
	cmpb	$40, %dl
	sete	%bl
	addl	%esi, %ebx
	xorl	%esi, %esi
	cmpb	$41, %dl
	sete	%sil
	subl	%esi, %ebx
	xorl	%esi, %esi
	cmpb	$40, %cl
	sete	%sil
	addl	%ebx, %esi
	xorl	%edx, %edx
	cmpb	$41, %cl
	sete	%dl
	subl	%edx, %esi
	orl	%esi, %ebx
	cmovsl	%r8d, %r9d
	addq	$2, %rax
	cmpq	%rax, %rdi
	jne	LBB0_30
LBB0_31:
	testq	%r14, %r14
	je	LBB0_33
## %bb.32:
	movb	(%r15,%rax), %al
	xorl	%ecx, %ecx
	cmpb	$40, %al
	sete	%cl
	addl	%ecx, %esi
	xorl	%ecx, %ecx
	cmpb	$41, %al
	sete	%cl
	xorl	%eax, %eax
	subl	%ecx, %esi
	cmovsl	%eax, %r9d
LBB0_33:
	testl	%r9d, %r9d
	leaq	L_.str(%rip), %rax
	leaq	L_.str.1(%rip), %rcx
	cmoveq	%rcx, %rax
	testl	%esi, %esi
	cmovneq	%rcx, %rax
LBB0_34:
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"Yes"

L_.str.1:                               ## @.str.1
	.asciz	"No"

.subsections_via_symbols
