# problem120/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ; -- Begin function func0
	.p2align	2
_func0:                                 ; @func0
	.cfi_startproc
; %bb.0:
	stp	x22, x21, [sp, #-48]!           ; 16-byte Folded Spill
	.cfi_def_cfa_offset 48
	stp	x20, x19, [sp, #16]             ; 16-byte Folded Spill
	stp	x29, x30, [sp, #32]             ; 16-byte Folded Spill
	add	x29, sp, #32
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	.cfi_offset w19, -24
	.cfi_offset w20, -32
	.cfi_offset w21, -40
	.cfi_offset w22, -48
	mov	x21, x1
	mov	x19, x0
	bl	_strlen
	mov	x20, x0
	mov	x0, x21
	bl	_strlen
	cmp	w20, #1
	b.lt	LBB0_3
; %bb.1:
	mov	w8, #0
	and	x9, x20, #0xffffffff
	mov	w10, #1
	mov	x11, x19
LBB0_2:                                 ; =>This Inner Loop Header: Depth=1
	ldrb	w12, [x11], #1
	cmp	w12, #40
	cinc	w8, w8, eq
	cmp	w12, #41
	cset	w12, eq
	sub	w8, w8, w12
	orr	w12, w8, w12
	cmp	w12, #0
	csel	w10, wzr, w10, lt
	subs	x9, x9, #1
	b.ne	LBB0_2
	b	LBB0_4
LBB0_3:
	mov	w8, #0
	mov	w10, #1
LBB0_4:
	cmp	w0, #1
	b.lt	LBB0_11
; %bb.5:
	and	x9, x0, #0xffffffff
	mov	w11, #1
	mov	x12, x21
LBB0_6:                                 ; =>This Inner Loop Header: Depth=1
	ldrb	w13, [x12], #1
	cmp	w13, #40
	cinc	w8, w8, eq
	cmp	w13, #41
	cset	w13, eq
	sub	w8, w8, w13
	orr	w13, w8, w13
	cmp	w13, #0
	csel	w11, wzr, w11, lt
	subs	x9, x9, #1
	b.ne	LBB0_6
; %bb.7:
	cbnz	w8, LBB0_9
; %bb.8:
	cbnz	w11, LBB0_16
LBB0_9:
	mov	w8, #0
	mov	w9, #1
	mov	x10, x21
LBB0_10:                                ; =>This Inner Loop Header: Depth=1
	ldrb	w11, [x10], #1
	cmp	w11, #40
	cinc	w8, w8, eq
	cmp	w11, #41
	cset	w11, eq
	sub	w8, w8, w11
	orr	w11, w8, w11
	cmp	w11, #0
	csel	w9, wzr, w9, lt
	subs	x0, x0, #1
	b.ne	LBB0_10
	b	LBB0_13
LBB0_11:
	mov	w8, #0
	mov	w9, #1
	cbnz	w8, LBB0_13
; %bb.12:
	cbz	w11, LBB0_13
LBB0_13:
Lloh0:
	adrp	x0, l_.str@PAGE
Lloh1:
	add	x0, x0, l_.str@PAGEOFF
LBB0_14:
	ldp	x29, x30, [sp, #32]             ; 16-byte Folded Reload
	ldp	x20, x19, [sp, #16]             ; 16-byte Folded Reload
	ldp	x22, x21, [sp], #48             ; 16-byte Folded Reload
	ret
LBB0_15:                                ;   in Loop: Header=BB0_16 Depth=1
	ldrb	w10, [x19], #1
	cmp	w10, #40
	cinc	w8, w8, eq
	cmp	w10, #41
	cset	w10, eq
	sub	w8, w8, w10
	orr	w10, w8, w10
	cmp	w10, #0
	csel	w9, wzr, w9, lt
	subs	x20, x20, #1
	b.eq	LBB0_13
LBB0_16:                                ; =>This Inner Loop Header: Depth=1
	ldrb	w10, [x21], #1
	cmp	w10, #40
	cinc	w8, w8, eq
	cmp	w10, #41
	cset	w10, eq
	sub	w8, w8, w10
	orr	w10, w8, w10
	cmp	w10, #0
	csel	w9, wzr, w9, lt
	subs	x0, x0, #1
	b.ne	LBB0_16
	b	LBB0_13
	.loh AdrpAdd	Lloh0, Lloh1
	.cfi_endproc
                                        ; -- End function
	.section	__TEXT,__cstring,cstring_literals
l_.str:                                 ; @.str
	.asciz	"Yes"

l_.str.1:                               ; @.str.1
	.asciz	"No"

.subsections_via_symbols

