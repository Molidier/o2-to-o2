# problem28/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.section	__TEXT,__literal16,16byte_literals
	.p2align	4                               ## -- Begin function func0
LCPI0_0:
	.space	16,133
LCPI0_1:
	.space	16,229
LCPI0_2:
	.space	16,191
LCPI0_3:
	.space	16,25
LCPI0_4:
	.space	16,32
LCPI0_5:
	.space	16,224
LCPI0_6:
	.byte	133                             ## 0x85
	.byte	133                             ## 0x85
	.byte	133                             ## 0x85
	.byte	133                             ## 0x85
	.byte	133                             ## 0x85
	.byte	133                             ## 0x85
	.byte	133                             ## 0x85
	.byte	133                             ## 0x85
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
LCPI0_7:
	.byte	230                             ## 0xe6
	.byte	230                             ## 0xe6
	.byte	230                             ## 0xe6
	.byte	230                             ## 0xe6
	.byte	230                             ## 0xe6
	.byte	230                             ## 0xe6
	.byte	230                             ## 0xe6
	.byte	230                             ## 0xe6
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
LCPI0_8:
	.byte	191                             ## 0xbf
	.byte	191                             ## 0xbf
	.byte	191                             ## 0xbf
	.byte	191                             ## 0xbf
	.byte	191                             ## 0xbf
	.byte	191                             ## 0xbf
	.byte	191                             ## 0xbf
	.byte	191                             ## 0xbf
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
LCPI0_9:
	.byte	26                              ## 0x1a
	.byte	26                              ## 0x1a
	.byte	26                              ## 0x1a
	.byte	26                              ## 0x1a
	.byte	26                              ## 0x1a
	.byte	26                              ## 0x1a
	.byte	26                              ## 0x1a
	.byte	26                              ## 0x1a
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
LCPI0_10:
	.byte	32                              ## 0x20
	.byte	32                              ## 0x20
	.byte	32                              ## 0x20
	.byte	32                              ## 0x20
	.byte	32                              ## 0x20
	.byte	32                              ## 0x20
	.byte	32                              ## 0x20
	.byte	32                              ## 0x20
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
LCPI0_11:
	.byte	224                             ## 0xe0
	.byte	224                             ## 0xe0
	.byte	224                             ## 0xe0
	.byte	224                             ## 0xe0
	.byte	224                             ## 0xe0
	.byte	224                             ## 0xe0
	.byte	224                             ## 0xe0
	.byte	224                             ## 0xe0
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.section	__TEXT,__text,regular,pure_instructions
	.globl	_func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r14
	pushq	%rbx
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	movq	%rsi, %r14
	movq	%rdi, %rbx
	callq	_strlen
	testl	%eax, %eax
	jle	LBB0_16
## %bb.1:
	movl	%eax, %r8d
	xorl	%edx, %edx
	cmpq	$8, %r8
	jb	LBB0_12
## %bb.2:
	movq	%r14, %rsi
	subq	%rbx, %rsi
	cmpq	$32, %rsi
	jb	LBB0_12
## %bb.3:
	cmpl	$32, %r8d
	jae	LBB0_5
## %bb.4:
	xorl	%edx, %edx
	jmp	LBB0_9
LBB0_5:
	movl	%eax, %esi
	andl	$31, %esi
	movq	%r8, %rdx
	subq	%rsi, %rdx
	xorl	%edi, %edi
	movdqa	LCPI0_0(%rip), %xmm8            ## xmm8 = [133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133]
	movdqa	LCPI0_1(%rip), %xmm9            ## xmm9 = [229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229]
	movdqa	LCPI0_2(%rip), %xmm10           ## xmm10 = [191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191]
	movdqa	LCPI0_3(%rip), %xmm11           ## xmm11 = [25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25]
	movdqa	LCPI0_4(%rip), %xmm12           ## xmm12 = [32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32]
	movdqa	LCPI0_5(%rip), %xmm13           ## xmm13 = [224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224]
	.p2align	4, 0x90
LBB0_6:                                 ## =>This Inner Loop Header: Depth=1
	movdqu	(%rbx,%rdi), %xmm6
	movdqu	16(%rbx,%rdi), %xmm4
	movdqa	%xmm6, %xmm0
	paddb	%xmm8, %xmm0
	movdqa	%xmm0, %xmm14
	pminub	%xmm9, %xmm14
	pcmpeqb	%xmm0, %xmm14
	movdqa	%xmm4, %xmm0
	paddb	%xmm8, %xmm0
	movdqa	%xmm0, %xmm2
	pminub	%xmm9, %xmm2
	pcmpeqb	%xmm0, %xmm2
	movdqa	%xmm6, %xmm3
	paddb	%xmm10, %xmm3
	movdqa	%xmm4, %xmm7
	paddb	%xmm10, %xmm7
	movdqa	%xmm3, %xmm0
	pminub	%xmm11, %xmm0
	pcmpeqb	%xmm3, %xmm0
	movdqa	%xmm7, %xmm3
	pminub	%xmm11, %xmm3
	pcmpeqb	%xmm7, %xmm3
	movdqa	%xmm6, %xmm7
	paddb	%xmm12, %xmm7
	movdqa	%xmm4, %xmm5
	paddb	%xmm12, %xmm5
	movdqa	%xmm6, %xmm1
	pblendvb	%xmm0, %xmm7, %xmm1
	movdqa	%xmm4, %xmm7
	movdqa	%xmm3, %xmm0
	pblendvb	%xmm0, %xmm5, %xmm7
	paddb	%xmm13, %xmm6
	paddb	%xmm13, %xmm4
	movdqa	%xmm14, %xmm0
	pblendvb	%xmm0, %xmm1, %xmm6
	movdqa	%xmm2, %xmm0
	pblendvb	%xmm0, %xmm7, %xmm4
	movdqu	%xmm6, (%r14,%rdi)
	movdqu	%xmm4, 16(%r14,%rdi)
	addq	$32, %rdi
	cmpq	%rdi, %rdx
	jne	LBB0_6
## %bb.7:
	testq	%rsi, %rsi
	je	LBB0_16
## %bb.8:
	cmpl	$8, %esi
	jb	LBB0_12
LBB0_9:
	movq	%rdx, %rsi
	movl	%eax, %edi
	andl	$7, %edi
	movq	%r8, %rdx
	subq	%rdi, %rdx
	movdqa	LCPI0_6(%rip), %xmm8            ## xmm8 = <133,133,133,133,133,133,133,133,u,u,u,u,u,u,u,u>
	movdqa	LCPI0_7(%rip), %xmm9            ## xmm9 = <230,230,230,230,230,230,230,230,u,u,u,u,u,u,u,u>
	movdqa	LCPI0_8(%rip), %xmm3            ## xmm3 = <191,191,191,191,191,191,191,191,u,u,u,u,u,u,u,u>
	movdqa	LCPI0_9(%rip), %xmm4            ## xmm4 = <26,26,26,26,26,26,26,26,u,u,u,u,u,u,u,u>
	movdqa	LCPI0_10(%rip), %xmm5           ## xmm5 = <32,32,32,32,32,32,32,32,u,u,u,u,u,u,u,u>
	movdqa	LCPI0_11(%rip), %xmm6           ## xmm6 = <224,224,224,224,224,224,224,224,u,u,u,u,u,u,u,u>
	.p2align	4, 0x90
LBB0_10:                                ## =>This Inner Loop Header: Depth=1
	movq	(%rbx,%rsi), %xmm7              ## xmm7 = mem[0],zero
	movdqa	%xmm7, %xmm1
	paddb	%xmm8, %xmm1
	movdqa	%xmm7, %xmm2
	paddb	%xmm3, %xmm2
	movdqa	%xmm2, %xmm0
	pmaxub	%xmm4, %xmm0
	pcmpeqb	%xmm2, %xmm0
	movdqa	%xmm7, %xmm2
	paddb	%xmm5, %xmm2
	pblendvb	%xmm0, %xmm7, %xmm2
	movdqa	%xmm1, %xmm0
	pmaxub	%xmm9, %xmm0
	pcmpeqb	%xmm1, %xmm0
	paddb	%xmm6, %xmm7
	pblendvb	%xmm0, %xmm7, %xmm2
	movq	%xmm2, (%r14,%rsi)
	addq	$8, %rsi
	cmpq	%rsi, %rdx
	jne	LBB0_10
## %bb.11:
	testq	%rdi, %rdi
	jne	LBB0_12
LBB0_16:
	cltq
	movb	$0, (%r14,%rax)
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	.p2align	4, 0x90
LBB0_14:                                ##   in Loop: Header=BB0_12 Depth=1
	leal	-65(%rsi), %edi
	leal	32(%rsi), %ecx
	cmpb	$26, %dil
	movzbl	%sil, %edi
	movzbl	%cl, %esi
	cmovael	%edi, %esi
LBB0_15:                                ##   in Loop: Header=BB0_12 Depth=1
	movb	%sil, (%r14,%rdx)
	incq	%rdx
	cmpq	%rdx, %r8
	je	LBB0_16
LBB0_12:                                ## =>This Inner Loop Header: Depth=1
	movzbl	(%rbx,%rdx), %esi
	leal	-97(%rsi), %edi
	cmpb	$25, %dil
	ja	LBB0_14
## %bb.13:                              ##   in Loop: Header=BB0_12 Depth=1
	addb	$-32, %sil
	jmp	LBB0_15
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
