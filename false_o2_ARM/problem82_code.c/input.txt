# problem82/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.section	__TEXT,__literal8,8byte_literals
	.p2align	3                               ## -- Begin function func0
LCPI0_0:
	.quad	0x400fffcb923a29c7              ## double 3.9998999999999998
LCPI0_1:
	.quad	0x400d99ce075f6fd2              ## double 3.7000999999999999
LCPI0_2:
	.quad	0x400a669ad42c3c9f              ## double 3.3001
LCPI0_3:
	.quad	0x400800346dc5d639              ## double 3.0001000000000002
LCPI0_4:
	.quad	0x400599ce075f6fd2              ## double 2.7000999999999999
LCPI0_5:
	.quad	0x4002669ad42c3c9f              ## double 2.3001
LCPI0_6:
	.quad	0x400000346dc5d639              ## double 2.0001000000000002
LCPI0_7:
	.quad	0x3ffb339c0ebedfa4              ## double 1.7000999999999999
LCPI0_8:
	.quad	0x3ff4cd35a858793e              ## double 1.3001
LCPI0_9:
	.quad	0x3ff00068db8bac71              ## double 1.0001
LCPI0_10:
	.quad	0x3fe667381d7dbf48              ## double 0.70009999999999994
LCPI0_11:
	.quad	0x3f1a36e2eb1c432d              ## double 1.0E-4
	.section	__TEXT,__text,regular,pure_instructions
	.globl	_func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movl	%esi, %r14d
	movq	%rdi, %rbx
	movslq	%esi, %r15
	leaq	(,%r15,8), %rdi
	callq	_malloc
	testl	%r15d, %r15d
	jle	LBB0_28
## %bb.1:
	movl	%r14d, %ecx
	xorl	%edx, %edx
	movsd	LCPI0_0(%rip), %xmm0            ## xmm0 = mem[0],zero
	movsd	LCPI0_1(%rip), %xmm1            ## xmm1 = mem[0],zero
	leaq	L_.str.1(%rip), %rsi
	movsd	LCPI0_2(%rip), %xmm2            ## xmm2 = mem[0],zero
	leaq	L_.str.2(%rip), %rdi
	movsd	LCPI0_3(%rip), %xmm3            ## xmm3 = mem[0],zero
	leaq	L_.str.3(%rip), %r8
	movsd	LCPI0_4(%rip), %xmm4            ## xmm4 = mem[0],zero
	leaq	L_.str.4(%rip), %r9
	movsd	LCPI0_5(%rip), %xmm5            ## xmm5 = mem[0],zero
	leaq	L_.str.5(%rip), %r10
	movsd	LCPI0_6(%rip), %xmm6            ## xmm6 = mem[0],zero
	leaq	L_.str.6(%rip), %r11
	movsd	LCPI0_7(%rip), %xmm12           ## xmm12 = mem[0],zero
	leaq	L_.str.7(%rip), %r14
	movsd	LCPI0_8(%rip), %xmm8            ## xmm8 = mem[0],zero
	leaq	L_.str.8(%rip), %r15
	movsd	LCPI0_9(%rip), %xmm9            ## xmm9 = mem[0],zero
	movsd	LCPI0_10(%rip), %xmm10          ## xmm10 = mem[0],zero
	movsd	LCPI0_11(%rip), %xmm11          ## xmm11 = mem[0],zero
	leaq	L_.str.11(%rip), %r13
	leaq	L_.str(%rip), %r12
	jmp	LBB0_2
	.p2align	4, 0x90
LBB0_3:                                 ##   in Loop: Header=BB0_2 Depth=1
	movq	%r12, (%rax,%rdx,8)
LBB0_27:                                ##   in Loop: Header=BB0_2 Depth=1
	incq	%rdx
	cmpq	%rdx, %rcx
	je	LBB0_28
LBB0_2:                                 ## =>This Inner Loop Header: Depth=1
	movss	(%rbx,%rdx,4), %xmm7            ## xmm7 = mem[0],zero,zero,zero
	cvtss2sd	%xmm7, %xmm7
	ucomisd	%xmm0, %xmm7
	jae	LBB0_3
## %bb.4:                               ##   in Loop: Header=BB0_2 Depth=1
	ucomisd	%xmm1, %xmm7
	jbe	LBB0_6
## %bb.5:                               ##   in Loop: Header=BB0_2 Depth=1
	movq	%rsi, (%rax,%rdx,8)
	jmp	LBB0_27
	.p2align	4, 0x90
LBB0_6:                                 ##   in Loop: Header=BB0_2 Depth=1
	ucomisd	%xmm2, %xmm7
	jbe	LBB0_8
## %bb.7:                               ##   in Loop: Header=BB0_2 Depth=1
	movq	%rdi, (%rax,%rdx,8)
	jmp	LBB0_27
LBB0_8:                                 ##   in Loop: Header=BB0_2 Depth=1
	ucomisd	%xmm3, %xmm7
	jbe	LBB0_10
## %bb.9:                               ##   in Loop: Header=BB0_2 Depth=1
	movq	%r8, (%rax,%rdx,8)
	jmp	LBB0_27
LBB0_10:                                ##   in Loop: Header=BB0_2 Depth=1
	ucomisd	%xmm4, %xmm7
	jbe	LBB0_12
## %bb.11:                              ##   in Loop: Header=BB0_2 Depth=1
	movq	%r9, (%rax,%rdx,8)
	jmp	LBB0_27
LBB0_12:                                ##   in Loop: Header=BB0_2 Depth=1
	ucomisd	%xmm5, %xmm7
	jbe	LBB0_14
## %bb.13:                              ##   in Loop: Header=BB0_2 Depth=1
	movq	%r10, (%rax,%rdx,8)
	jmp	LBB0_27
LBB0_14:                                ##   in Loop: Header=BB0_2 Depth=1
	ucomisd	%xmm6, %xmm7
	jbe	LBB0_16
## %bb.15:                              ##   in Loop: Header=BB0_2 Depth=1
	movq	%r11, (%rax,%rdx,8)
	jmp	LBB0_27
LBB0_16:                                ##   in Loop: Header=BB0_2 Depth=1
	ucomisd	%xmm12, %xmm7
	jbe	LBB0_18
## %bb.17:                              ##   in Loop: Header=BB0_2 Depth=1
	movq	%r14, (%rax,%rdx,8)
	jmp	LBB0_27
LBB0_18:                                ##   in Loop: Header=BB0_2 Depth=1
	ucomisd	%xmm8, %xmm7
	jbe	LBB0_20
## %bb.19:                              ##   in Loop: Header=BB0_2 Depth=1
	movq	%r15, (%rax,%rdx,8)
	jmp	LBB0_27
LBB0_20:                                ##   in Loop: Header=BB0_2 Depth=1
	ucomisd	%xmm9, %xmm7
	jbe	LBB0_22
## %bb.21:                              ##   in Loop: Header=BB0_2 Depth=1
	leaq	L_.str.9(%rip), %r15
	movq	%r15, (%rax,%rdx,8)
	leaq	L_.str.8(%rip), %r15
	jmp	LBB0_27
LBB0_22:                                ##   in Loop: Header=BB0_2 Depth=1
	ucomisd	%xmm10, %xmm7
	jbe	LBB0_24
## %bb.23:                              ##   in Loop: Header=BB0_2 Depth=1
	leaq	L_.str.10(%rip), %r13
	movq	%r13, (%rax,%rdx,8)
	leaq	L_.str.11(%rip), %r13
	jmp	LBB0_27
LBB0_24:                                ##   in Loop: Header=BB0_2 Depth=1
	ucomisd	%xmm11, %xmm7
	jbe	LBB0_26
## %bb.25:                              ##   in Loop: Header=BB0_2 Depth=1
	movq	%r13, (%rax,%rdx,8)
	jmp	LBB0_27
LBB0_26:                                ##   in Loop: Header=BB0_2 Depth=1
	leaq	L_.str.12(%rip), %r14
	movq	%r14, (%rax,%rdx,8)
	leaq	L_.str.7(%rip), %r14
	jmp	LBB0_27
LBB0_28:
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"A+"

L_.str.1:                               ## @.str.1
	.asciz	"A"

L_.str.2:                               ## @.str.2
	.asciz	"A-"

L_.str.3:                               ## @.str.3
	.asciz	"B+"

L_.str.4:                               ## @.str.4
	.asciz	"B"

L_.str.5:                               ## @.str.5
	.asciz	"B-"

L_.str.6:                               ## @.str.6
	.asciz	"C+"

L_.str.7:                               ## @.str.7
	.asciz	"C"

L_.str.8:                               ## @.str.8
	.asciz	"C-"

L_.str.9:                               ## @.str.9
	.asciz	"D+"

L_.str.10:                              ## @.str.10
	.asciz	"D"

L_.str.11:                              ## @.str.11
	.asciz	"D-"

L_.str.12:                              ## @.str.12
	.asciz	"E"

.subsections_via_symbols
