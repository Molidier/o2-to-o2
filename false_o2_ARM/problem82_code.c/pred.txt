# problem82/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ; -- Begin function func0
	.p2align	2
_func0:                                 ; @func0
	.cfi_startproc
; %bb.0:
	stp	x24, x23, [sp, #-64]!           ; 16-byte Folded Spill
	.cfi_def_cfa_offset 64
	stp	x22, x21, [sp, #16]             ; 16-byte Folded Spill
	stp	x20, x19, [sp, #32]             ; 16-byte Folded Spill
	stp	x29, x30, [sp, #48]             ; 16-byte Folded Spill
	add	x29, sp, #48
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	.cfi_offset w19, -24
	.cfi_offset w20, -32
	.cfi_offset w21, -40
	.cfi_offset w22, -48
	.cfi_offset w23, -56
	.cfi_offset w24, -64
	mov	x20, x1
	mov	x19, x0
	sbfiz	x0, x20, #3, #32
	bl	_malloc
	cmp	w20, #1
	b.lt	LBB0_28
; %bb.1:
	mov	w8, w20
Lloh0:
	adrp	x9, l_.str.1@PAGE
Lloh1:
	add	x9, x9, l_.str.1@PAGEOFF
Lloh2:
	adrp	x10, l_.str.2@PAGE
Lloh3:
	add	x10, x10, l_.str.2@PAGEOFF
Lloh4:
	adrp	x11, l_.str.3@PAGE
Lloh5:
	add	x11, x11, l_.str.3@PAGEOFF
Lloh6:
	adrp	x12, l_.str.4@PAGE
Lloh7:
	add	x12, x12, l_.str.4@PAGEOFF
Lloh8:
	adrp	x13, l_.str.5@PAGE
Lloh9:
	add	x13, x13, l_.str.5@PAGEOFF
Lloh10:
	adrp	x14, l_.str.6@PAGE
Lloh11:
	add	x14, x14, l_.str.6@PAGEOFF
Lloh12:
	adrp	x15, l_.str.7@PAGE
Lloh13:
	add	x15, x15, l_.str.7@PAGEOFF
Lloh14:
	adrp	x16, l_.str.8@PAGE
Lloh15:
	add	x16, x16, l_.str.8@PAGEOFF
Lloh16:
	adrp	x17, l_.str.9@PAGE
Lloh17:
	add	x17, x17, l_.str.9@PAGEOFF
Lloh18:
	adrp	x0, l_.str.10@PAGE
Lloh19:
	add	x0, x0, l_.str.10@PAGEOFF
Lloh20:
	adrp	x1, l_.str.11@PAGE
Lloh21:
	add	x1, x1, l_.str.11@PAGEOFF
Lloh22:
	adrp	x2, l_.str.12@PAGE
Lloh23:
	add	x2, x2, l_.str.12@PAGEOFF
Lloh24:
	adrp	x3, l_.str@PAGE
Lloh25:
	add	x3, x3, l_.str@PAGEOFF
	mov	x4, #10663
	movk	x4, #37440, lsl #16
	movk	x4, #65484, lsl #32
	movk	x4, #16399, lsl #48
	mov	x5, #28658
	movk	x5, #1906, lsl #16
	movk	x5, #39326, lsl #32
	movk	x5, #16397, lsl #48
	mov	x6, #50841
	movk	x6, #27965, lsl #16
	movk	x6, #100, lsl #32
	movk	x6, #16392, lsl #48
	mov	x7, #50841
	movk	x7, #27965, lsl #16
	movk	x7, #100, lsl #32
	movk	x7, #16389, lsl #48
	mov	x19, #17197
	movk	x19, #3767, lsl #16
	movk	x19, #13244, lsl #32
	movk	x19, #16387, lsl #48
	mov	x20, #32582
	movk	x20, #43048, lsl #16
	movk	x20, #52501, lsl #32
	movk	x20, #16372, lsl #48
	mov	x21, #17197
	movk	x21, #3767, lsl #16
	movk	x21, #13244, lsl #32
	movk	x21, #16154, lsl #48
	b	LBB0_4
LBB0_2:                                 ;   in Loop: Header=BB0_4 Depth=1
	str	x3, [x0]
LBB0_3:                                 ;   in Loop: Header=BB0_4 Depth=1
	add	x0, x0, #8
	add	x19, x19, #4
	subs	x8, x8, #1
	b.eq	LBB0_28
LBB0_4:                                 ; =>This Inner Loop Header: Depth=1
	ldr	s0, [x19]
	fcvt	d0, s0
	fmov	d1, x4
	fcmp	d0, d1
	b.ge	LBB0_2
; %bb.5:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x5
	fcmp	d0, d1
	b.le	LBB0_7
; %bb.6:                                ;   in Loop: Header=BB0_4 Depth=1
	str	x9, [x0]
	b	LBB0_3
LBB0_7:                                 ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x6
	fcmp	d0, d1
	b.le	LBB0_9
; %bb.8:                                ;   in Loop: Header=BB0_4 Depth=1
	str	x10, [x0]
	b	LBB0_3
LBB0_9:                                 ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x7
	fcmp	d0, d1
	b.le	LBB0_11
; %bb.10:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x11, [x0]
	b	LBB0_3
LBB0_11:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x19
	fcmp	d0, d1
	b.le	LBB0_13
; %bb.12:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x12, [x0]
	b	LBB0_3
LBB0_13:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x20
	fcmp	d0, d1
	b.le	LBB0_15
; %bb.14:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x13, [x0]
	b	LBB0_3
LBB0_15:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x21
	fcmp	d0, d1
	b.le	LBB0_17
; %bb.16:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x14, [x0]
	b	LBB0_3
LBB0_17:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x16
	fcmp	d0, d1
	b.le	LBB0_19
; %bb.18:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x15, [x0]
	b	LBB0_3
LBB0_19:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x2
	fcmp	d0, d1
	b.le	LBB0_21
; %bb.20:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x0, [x0]
	b	LBB0_3
LBB0_21:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x17
	fcmp	d0, d1
	b.le	LBB0_23
; %bb.22:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x1, [x0]
	b	LBB0_3
LBB0_23:                                ;   in Loop: Header=BB0_4 Depth=1
	fmov	d1, x2
	fcmp	d0, d1
	b.le	LBB0_25
; %bb.24:                               ;   in Loop: Header=BB0_4 Depth=1
	str	x1, [x0]
	b	LBB0_3
LBB0_25:                                ;   in Loop: Header=BB0_4 Depth=1
	str	x2, [x0]
	b	LBB0_3
LBB0_26:                                ;   in Loop: Header=BB0_4 Depth=1
	str	x9, [x0]
LBB0_27:                                ;   in Loop: Header=BB0_4 Depth=1
	add	x19, x19, #4
	subs	x8, x8, #1
	b.eq	LBB0_28
LBB0_28:
	ldp	x29, x30, [sp, #48]             ; 16-byte Folded Reload
	ldp	x20, x19, [sp, #32]             ; 16-byte Folded Reload
	ldp	x22, x21, [sp, #16]             ; 16-byte Folded Reload
	ldp	x24, x23, [sp], #64             ; 16-byte Folded Reload
	ret
	.loh AdrpAdd	Lloh24, Lloh25
	.loh AdrpAdd	Lloh22, Lloh23
	.loh AdrpAdd	Lloh20, Lloh21
	.loh AdrpAdd	Lloh18, Lloh19
	.loh AdrpAdd	Lloh16, Lloh17
	.loh AdrpAdd	Lloh14, Lloh15
	.loh AdrpAdd	Lloh12, Lloh13
	.loh AdrpAdd	Lloh10, Lloh11
	.loh AdrpAdd	Lloh8, Lloh9
	.loh AdrpAdd	Lloh6, Lloh7
	.loh AdrpAdd	Lloh4, Lloh5
	.loh AdrpAdd	Lloh2, Lloh3
	.loh AdrpAdd	Lloh0, Lloh1
	.cfi_endproc
                                        ; -- End function
	.section	__TEXT,__cstring,cstring_literals
l_.str:                                 ; @.str
	.asciz	"A+"

l_.str.1:                               ; @.str.1
	.asciz	"A"

l_.str.2:                               ; @.str.2
	.asciz	"A-"

l_.str.3:                               ; @.str.3
	.asciz	"B+"

l_.str.4:                               ; @.str.4
	.asciz	"B"

l_.str.5:                               ; @.str.5
	.asciz	"B-"

l_.str.6:                               ; @.str.6
	.asciz	"C+"

l_.str.7:                               ; @.str.7
	.asciz	"C"

l_.str.8:                               ; @.str.8
	.asciz	"C-"

l_.str.9:                               ; @.str.9
	.asciz	"D+"

l_.str.10:                              ; @.str.10
	.asciz	"D"

l_.str.11:                              ; @.str.11
	.asciz	"D-"

l_.str.12:                              ; @.str.12
	.asciz	"E"

.subsections_via_symbols

