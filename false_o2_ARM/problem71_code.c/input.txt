# problem71/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
                                        ## kill: def $esi killed $esi def $rsi
	leal	-1(%rsi), %r10d
	cmpl	$2, %esi
	jl	LBB0_4
## %bb.1:
	movl	%esi, %r9d
	movl	%r10d, %r8d
	xorl	%r11d, %r11d
	movq	%r9, %r14
	movq	%rdi, %r15
	jmp	LBB0_2
	.p2align	4, 0x90
LBB0_3:                                 ##   in Loop: Header=BB0_2 Depth=1
	addq	$4, %r15
	decq	%r14
	cmpq	%r8, %r11
	je	LBB0_4
LBB0_2:                                 ## =>This Loop Header: Depth=1
                                        ##     Child Loop BB0_11 Depth 2
	movq	%r11, %r12
	incq	%r11
	cmpq	%r9, %r11
	jae	LBB0_3
## %bb.10:                              ##   in Loop: Header=BB0_2 Depth=1
	movl	$1, %ecx
	jmp	LBB0_11
	.p2align	4, 0x90
LBB0_13:                                ##   in Loop: Header=BB0_11 Depth=2
	incq	%rcx
	cmpq	%rcx, %r14
	je	LBB0_3
LBB0_11:                                ##   Parent Loop BB0_2 Depth=1
                                        ## =>  This Inner Loop Header: Depth=2
	movl	(%rdi,%r12,4), %eax
	movl	(%r15,%rcx,4), %ebx
	cmpl	%ebx, %eax
	jle	LBB0_13
## %bb.12:                              ##   in Loop: Header=BB0_11 Depth=2
	movl	%ebx, (%rdi,%r12,4)
	movl	%eax, (%r15,%rcx,4)
	jmp	LBB0_13
LBB0_4:
	testl	%esi, %esi
	jle	LBB0_9
## %bb.5:
	xorl	%ecx, %ecx
	xorl	%eax, %eax
	jmp	LBB0_6
	.p2align	4, 0x90
LBB0_8:                                 ##   in Loop: Header=BB0_6 Depth=1
	leaq	1(%rcx), %rsi
	movslq	%r10d, %rbx
	movl	%r8d, %eax
	cmpq	%rbx, %rcx
	movq	%rsi, %rcx
	jge	LBB0_9
LBB0_6:                                 ## =>This Inner Loop Header: Depth=1
	movl	%r10d, %r9d
	leal	1(%rax), %r8d
	movl	(%rdi,%rcx,4), %esi
	movslq	%eax, %rbx
	movl	%esi, (%rdx,%rbx,4)
	cmpq	%r9, %rcx
	je	LBB0_8
## %bb.7:                               ##   in Loop: Header=BB0_6 Depth=1
	movslq	%r10d, %rsi
	decl	%r10d
	movl	(%rdi,%rsi,4), %esi
	addl	$2, %eax
	movslq	%r8d, %rbx
	movl	%esi, (%rdx,%rbx,4)
	movl	%eax, %r8d
	jmp	LBB0_8
LBB0_9:
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
