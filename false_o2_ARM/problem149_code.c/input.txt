# problem149/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movq	%rdx, -48(%rbp)                 ## 8-byte Spill
	movq	%rsi, %r15
	movq	%rdi, %r13
	leaq	L_.str(%rip), %rbx
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_strcmp
	xorl	%r12d, %r12d
	negl	%eax
	movl	$0, %r14d
	sbbl	%r14d, %r14d
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	_strcmp
	negl	%eax
	sbbl	%r12d, %r12d
	leaq	L_.str.1(%rip), %rbx
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_strcmp
	testl	%eax, %eax
	movl	$1, %eax
	cmovel	%eax, %r14d
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	_strcmp
	testl	%eax, %eax
	movl	$1, %eax
	cmovel	%eax, %r12d
	leaq	L_.str.2(%rip), %rbx
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_strcmp
	testl	%eax, %eax
	movl	$2, %eax
	cmovel	%eax, %r14d
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	_strcmp
	testl	%eax, %eax
	movl	$2, %eax
	cmovel	%eax, %r12d
	leaq	L_.str.3(%rip), %rbx
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_strcmp
	testl	%eax, %eax
	movl	$3, %eax
	cmovel	%eax, %r14d
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	_strcmp
	testl	%eax, %eax
	movl	$3, %eax
	cmovel	%eax, %r12d
	leaq	L_.str.4(%rip), %rbx
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_strcmp
	testl	%eax, %eax
	movl	$4, %eax
	cmovel	%eax, %r14d
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	_strcmp
	testl	%eax, %eax
	movl	$4, %eax
	cmovel	%eax, %r12d
	leaq	L_.str.5(%rip), %rbx
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_strcmp
	testl	%eax, %eax
	movl	$5, %eax
	cmovel	%eax, %r14d
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	_strcmp
	testl	%eax, %eax
	movl	$5, %eax
	cmovel	%eax, %r12d
	leaq	L_.str.6(%rip), %rbx
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_strcmp
	testl	%eax, %eax
	movl	$6, %eax
	cmovel	%eax, %r14d
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	_strcmp
	testl	%eax, %eax
	movl	$6, %eax
	cmovel	%eax, %r12d
	leaq	L_.str.7(%rip), %rbx
	movq	%rbx, %rdi
	movq	%r13, %rsi
	callq	_strcmp
	testl	%eax, %eax
	movl	$7, %r13d
	cmovel	%r13d, %r14d
	movq	%rbx, %rdi
	movq	%r15, %rsi
	callq	_strcmp
	movq	-48(%rbp), %rcx                 ## 8-byte Reload
	testl	%eax, %eax
	cmovel	%r13d, %r12d
	cmpl	$-1, %r14d
	je	LBB0_7
## %bb.1:
	cmpl	$-1, %r12d
	je	LBB0_7
## %bb.2:
	cmpl	%r12d, %r14d
	je	LBB0_7
## %bb.3:
	movl	%r12d, %r15d
	cmovgl	%r14d, %r15d
	cmovll	%r14d, %r12d
	movl	%r12d, %eax
	notl	%eax
	addl	%r15d, %eax
	movl	%eax, (%rcx)
	testl	%eax, %eax
	jle	LBB0_7
## %bb.4:
	movl	%eax, %edi
	shlq	$3, %rdi
	callq	_malloc
	leal	1(%r12), %ecx
	cmpl	%r15d, %ecx
	jae	LBB0_8
## %bb.5:
	movl	%ecx, %r13d
	movl	%r15d, %ecx
	subl	%r12d, %ecx
	leal	-2(%rcx), %r10d
	cmpl	$3, %r10d
	jb	LBB0_17
## %bb.9:
	addl	$-2, %ecx
	js	LBB0_17
## %bb.10:
	incq	%r10
	movq	%r10, %r8
	andq	$-4, %r8
	leaq	-4(%r8), %rcx
	movq	%rcx, %r9
	shrq	$2, %r9
	incq	%r9
	testq	%rcx, %rcx
	je	LBB0_23
## %bb.11:
	movq	%r9, %rdi
	andq	$-2, %rdi
	leaq	l___const.func0.planets(%rip), %rcx
	leaq	(%rcx,%r13,8), %rdx
	addq	$48, %rdx
	xorl	%ebx, %ebx
	movabsq	$17179869184, %r11              ## imm = 0x400000000
	movabsq	$34359738368, %r14              ## imm = 0x800000000
	xorl	%esi, %esi
	.p2align	4, 0x90
LBB0_12:                                ## =>This Inner Loop Header: Depth=1
	movq	%rbx, %rcx
	sarq	$29, %rcx
	movups	-48(%rdx,%rsi,8), %xmm0
	movups	-32(%rdx,%rsi,8), %xmm1
	movups	-16(%rdx,%rsi,8), %xmm2
	movups	(%rdx,%rsi,8), %xmm3
	movups	%xmm0, (%rax,%rcx)
	movups	%xmm1, 16(%rax,%rcx)
	leaq	(%rbx,%r11), %rcx
	sarq	$29, %rcx
	movups	%xmm2, (%rax,%rcx)
	movups	%xmm3, 16(%rax,%rcx)
	addq	$8, %rsi
	addq	%r14, %rbx
	addq	$-2, %rdi
	jne	LBB0_12
## %bb.13:
	testb	$1, %r9b
	je	LBB0_15
LBB0_14:
	leaq	(%rsi,%r13), %rcx
	leaq	l___const.func0.planets(%rip), %rdx
	movups	(%rdx,%rcx,8), %xmm0
	movups	16(%rdx,%rcx,8), %xmm1
	movslq	%esi, %rcx
	movups	%xmm0, (%rax,%rcx,8)
	movups	%xmm1, 16(%rax,%rcx,8)
LBB0_15:
	cmpq	%r8, %r10
	je	LBB0_8
## %bb.16:
	addq	%r8, %r13
	leal	(%r12,%r8), %edx
	jmp	LBB0_18
LBB0_7:
	movl	$0, (%rcx)
	xorl	%eax, %eax
LBB0_8:
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
LBB0_17:
	movl	%r12d, %edx
LBB0_18:
	movl	%r15d, %esi
	subl	%r13d, %esi
	leal	1(%r13), %ecx
	testb	$1, %sil
	je	LBB0_20
## %bb.19:
	leaq	l___const.func0.planets(%rip), %rsi
	movq	(%rsi,%r13,8), %rsi
	subl	%r12d, %edx
	movslq	%edx, %rdx
	movq	%rsi, (%rax,%rdx,8)
	movl	%r13d, %edx
	incq	%r13
LBB0_20:
	cmpl	%ecx, %r15d
	je	LBB0_8
## %bb.21:
	movl	%r12d, %esi
	negl	%esi
	leaq	l___const.func0.planets(%rip), %r8
	movq	%r13, %rcx
	.p2align	4, 0x90
LBB0_22:                                ## =>This Inner Loop Header: Depth=1
	subl	%r12d, %edx
	movslq	%edx, %rdx
	movq	(%r8,%r13,8), %rbx
	movq	8(%r8,%r13,8), %rdi
	movq	%rbx, (%rax,%rdx,8)
	leal	(%rsi,%r13), %edx
	movslq	%edx, %rdx
	movq	%rdi, (%rax,%rdx,8)
	addq	$2, %rcx
	leal	1(%r13), %edx
	movq	%rcx, %r13
	cmpl	%ecx, %r15d
	jne	LBB0_22
	jmp	LBB0_8
LBB0_23:
	xorl	%esi, %esi
	testb	$1, %r9b
	jne	LBB0_14
	jmp	LBB0_15
	.cfi_endproc
                                        ## -- End function
	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"Mercury"

L_.str.1:                               ## @.str.1
	.asciz	"Venus"

L_.str.2:                               ## @.str.2
	.asciz	"Earth"

L_.str.3:                               ## @.str.3
	.asciz	"Mars"

L_.str.4:                               ## @.str.4
	.asciz	"Jupiter"

L_.str.5:                               ## @.str.5
	.asciz	"Saturn"

L_.str.6:                               ## @.str.6
	.asciz	"Uranus"

L_.str.7:                               ## @.str.7
	.asciz	"Neptune"

	.section	__DATA,__const
	.p2align	4                               ## @__const.func0.planets
l___const.func0.planets:
	.quad	L_.str
	.quad	L_.str.1
	.quad	L_.str.2
	.quad	L_.str.3
	.quad	L_.str.4
	.quad	L_.str.5
	.quad	L_.str.6
	.quad	L_.str.7

.subsections_via_symbols
