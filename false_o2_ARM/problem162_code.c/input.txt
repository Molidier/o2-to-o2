# problem162/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movq	%rdi, %r15
	callq	_strlen
	testl	%eax, %eax
	movq	%rax, -48(%rbp)                 ## 8-byte Spill
	jle	LBB0_1
## %bb.6:
	movl	%eax, %r12d
	xorl	%ebx, %ebx
	xorl	%r14d, %r14d
	jmp	LBB0_7
	.p2align	4, 0x90
LBB0_17:                                ##   in Loop: Header=BB0_7 Depth=1
	incl	%r14d
LBB0_18:                                ##   in Loop: Header=BB0_7 Depth=1
	incq	%rbx
	cmpq	%rbx, %r12
	je	LBB0_2
LBB0_7:                                 ## =>This Inner Loop Header: Depth=1
	movzbl	(%r15,%rbx), %r13d
	testb	%r13b, %r13b
	js	LBB0_16
## %bb.8:                               ##   in Loop: Header=BB0_7 Depth=1
	movl	%r13d, %eax
	movq	__DefaultRuneLocale@GOTPCREL(%rip), %rcx
	movl	60(%rcx,%rax,4), %eax
	testl	$256, %eax                      ## imm = 0x100
	je	LBB0_17
## %bb.9:                               ##   in Loop: Header=BB0_7 Depth=1
	testl	$32768, %eax                    ## imm = 0x8000
	jne	LBB0_12
## %bb.10:                              ##   in Loop: Header=BB0_7 Depth=1
	andl	$4096, %eax                     ## imm = 0x1000
	testl	%eax, %eax
	jne	LBB0_15
	jmp	LBB0_18
	.p2align	4, 0x90
LBB0_16:                                ##   in Loop: Header=BB0_7 Depth=1
	movl	$256, %esi                      ## imm = 0x100
	movl	%r13d, %edi
	callq	___maskrune
	testl	%eax, %eax
	je	LBB0_17
## %bb.11:                              ##   in Loop: Header=BB0_7 Depth=1
	movl	$32768, %esi                    ## imm = 0x8000
	movl	%r13d, %edi
	callq	___maskrune
	testl	%eax, %eax
	je	LBB0_13
LBB0_12:                                ##   in Loop: Header=BB0_7 Depth=1
	movl	%r13d, %edi
	callq	___tolower
	movb	%al, (%r15,%rbx)
	jmp	LBB0_18
LBB0_13:                                ##   in Loop: Header=BB0_7 Depth=1
	movl	$4096, %esi                     ## imm = 0x1000
	movl	%r13d, %edi
	callq	___maskrune
	testl	%eax, %eax
	je	LBB0_18
LBB0_15:                                ##   in Loop: Header=BB0_7 Depth=1
	movl	%r13d, %edi
	callq	___toupper
	movb	%al, (%r15,%rbx)
	jmp	LBB0_18
LBB0_1:
	xorl	%r14d, %r14d
LBB0_2:
	movq	-48(%rbp), %r11                 ## 8-byte Reload
	cmpl	%r11d, %r14d
	jne	LBB0_23
## %bb.3:
	cmpl	$2, %r11d
	jl	LBB0_23
## %bb.4:
	movq	%r11, %r8
	shrq	%r8
	movl	%r8d, %r10d
	andl	$2147483647, %r10d              ## imm = 0x7FFFFFFF
	andl	$1, %r8d
	cmpq	$1, %r10
	jne	LBB0_19
## %bb.5:
	xorl	%ecx, %ecx
	jmp	LBB0_21
LBB0_19:
	movabsq	$-8589934592, %r9               ## imm = 0xFFFFFFFE00000000
	subq	%r8, %r10
	movq	%r11, %rcx
	shlq	$32, %rcx
	leaq	(%rcx,%r9), %rdi
	movabsq	$-4294967296, %rsi              ## imm = 0xFFFFFFFF00000000
	addq	%rcx, %rsi
	xorl	%ecx, %ecx
	.p2align	4, 0x90
LBB0_20:                                ## =>This Inner Loop Header: Depth=1
	movzbl	(%r15,%rcx), %eax
	movq	%rsi, %rbx
	sarq	$32, %rbx
	movzbl	(%r15,%rbx), %edx
	movb	%dl, (%r15,%rcx)
	movb	%al, (%r15,%rbx)
	movzbl	1(%r15,%rcx), %eax
	movq	%rdi, %rdx
	sarq	$32, %rdx
	movzbl	(%r15,%rdx), %ebx
	movb	%bl, 1(%r15,%rcx)
	movb	%al, (%r15,%rdx)
	addq	$2, %rcx
	addq	%r9, %rdi
	addq	%r9, %rsi
	cmpq	%rcx, %r10
	jne	LBB0_20
LBB0_21:
	testq	%r8, %r8
	je	LBB0_23
## %bb.22:
	movb	(%r15,%rcx), %al
	movl	%ecx, %edx
	notl	%edx
	addl	%r11d, %edx
	movslq	%edx, %rdx
	movb	(%r15,%rdx), %bl
	movb	%bl, (%r15,%rcx)
	movb	%al, (%r15,%rdx)
LBB0_23:
	movq	%r15, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
