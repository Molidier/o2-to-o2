# problem161/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.section	__TEXT,__literal16,16byte_literals
	.p2align	4                               ; -- Begin function func0
lCPI0_0:
	.long	0                               ; 0x0
	.long	1                               ; 0x1
	.long	2                               ; 0x2
	.long	3                               ; 0x3
	.section	__TEXT,__text,regular,pure_instructions
	.globl	_func0
	.p2align	2
_func0:                                 ; @func0
	.cfi_startproc
; %bb.0:
	stp	x28, x27, [sp, #-96]!           ; 16-byte Folded Spill
	.cfi_def_cfa_offset 96
	stp	x26, x25, [sp, #16]             ; 16-byte Folded Spill
	stp	x24, x23, [sp, #32]             ; 16-byte Folded Spill
	stp	x22, x21, [sp, #48]             ; 16-byte Folded Spill
	stp	x20, x19, [sp, #64]             ; 16-byte Folded Spill
	stp	x29, x30, [sp, #80]             ; 16-byte Folded Spill
	add	x29, sp, #80
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	.cfi_offset w19, -24
	.cfi_offset w20, -32
	.cfi_offset w21, -40
	.cfi_offset w22, -48
	.cfi_offset w23, -56
	.cfi_offset w24, -64
	.cfi_offset w25, -72
	.cfi_offset w26, -80
	.cfi_offset w27, -88
	.cfi_offset w28, -96
	mov	x23, x3
	mov	x22, x2
	mov	x24, x1
	mov	x21, x0
	sbfiz	x20, x23, #2, #32
	mov	x0, x20
	bl	_malloc
	mov	x19, x0
	mov	x0, x20
	bl	_malloc
	mov	x20, x0
	cmp	w23, #1
	b.lt	LBB0_8
; %bb.1:
	mov	w25, w23
	lsl	x2, x25, #2
	mov	x0, x19
	mov	x1, x24
	bl	_memcpy
	cmp	w23, #16
	b.hs	LBB0_3
; %bb.2:
	mov	x8, #0
	b	LBB0_6
LBB0_3:
	and	x8, x25, #0xfffffff0
Lloh0:
	adrp	x9, lCPI0_0@PAGE
Lloh1:
	ldr	q0, [x9, lCPI0_0@PAGEOFF]
	add	x9, x20, #32
	movi.4s	v1, #4
	movi.4s	v2, #8
	movi.4s	v3, #12
	movi.4s	v4, #16
	mov	x10, x8
LBB0_4:                                 ; =>This Inner Loop Header: Depth=1
	add.4s	v5, v0, v1
	add.4s	v6, v0, v2
	add.4s	v7, v0, v3
	stp	q0, q5, [x9, #-32]
	stp	q6, q7, [x9], #64
	add.4s	v0, v0, v4
	subs	x10, x10, #16
	b.ne	LBB0_4
; %bb.5:
	cmp	x8, x25
	b.eq	LBB0_8
LBB0_6:
	add	x9, x20, x8, lsl #2
	sub	x8, x25, x8
LBB0_7:                                 ; =>This Inner Loop Header: Depth=1
	str	w8, [x9], #4
	subs	x8, x8, #1
	b.ne	LBB0_7
LBB0_8:
	cmp	w22, #1
	b.lt	LBB0_37
; %bb.9:
	mov	x26, #0
	mov	w27, w22
Lloh2:
	adrp	x22, l_.str@PAGE
Lloh3:
	add	x22, x22, l_.str@PAGEOFF
Lloh4:
	adrp	x23, l_.str.1@PAGE
Lloh5:
	add	x23, x23, l_.str.1@PAGEOFF
Lloh6:
	adrp	x24, l_.str.2@PAGE
Lloh7:
	add	x24, x24, l_.str.2@PAGEOFF
	b	LBB0_11
LBB0_10:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x28, x26, #1
	sbfiz	x25, x25, #2, #32
	ldr	s0, [x19, x25]
	sshll.2d	v0, v0, #0
	scvtf	d0, d0
	ldr	s1, [x19, x8, lsl #2]
	sshll.2d	v1, v1, #0
	scvtf	d1, d1
	bl	_pow
	fcvtzs	w8, d0
	str	w8, [x19, x25]
	str	w25, [x20, x28, lsl #2]
	mov	x26, x28
	cmp	x26, x27
	b.eq	LBB0_19
LBB0_11:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_14 Depth 2
                                        ;     Child Loop BB0_17 Depth 2
	ldr	x0, [x21, x26, lsl #3]
	mov	x1, x22
	bl	_strcmp
	cbz	w0, LBB0_13
; %bb.12:                               ;   in Loop: Header=BB0_11 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_11
	b	LBB0_19
LBB0_13:                                ;   in Loop: Header=BB0_11 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_16
LBB0_14:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_14
; %bb.15:                               ;   in Loop: Header=BB0_11 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_16:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_17:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_10
; %bb.18:                               ;   in Loop: Header=BB0_17 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_17
LBB0_19:
	mov	x26, #0
Lloh8:
	adrp	x22, l_.str.1@PAGE
Lloh9:
	add	x22, x22, l_.str.1@PAGEOFF
Lloh10:
	adrp	x23, l_.str.2@PAGE
Lloh11:
	add	x23, x23, l_.str.2@PAGEOFF
Lloh12:
	adrp	x24, l_.str.3@PAGE
Lloh13:
	add	x24, x24, l_.str.3@PAGEOFF
Lloh14:
	adrp	x25, l_.str.4@PAGE
Lloh15:
	add	x25, x25, l_.str.4@PAGEOFF
	b	LBB0_21
LBB0_20:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.eq	LBB0_37
LBB0_21:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_26 Depth 2
                                        ;     Child Loop BB0_28 Depth 2
	ldr	x28, [x21, x26, lsl #3]
	mov	x0, x28
	mov	x1, x22
	bl	_strcmp
	mov	x27, x0
	cbz	w0, LBB0_24
; %bb.22:                               ;   in Loop: Header=BB0_21 Depth=1
	mov	x0, x28
	mov	x1, x23
	bl	_strcmp
	cbz	w0, LBB0_24
; %bb.23:                               ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_21
	b	LBB0_37
LBB0_24:                                ;   in Loop: Header=BB0_21 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_27
LBB0_25:                                ;   in Loop: Header=BB0_21 Depth=1
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_25
; %bb.26:                               ;   in Loop: Header=BB0_21 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_27:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_28:                                ;   Parent Loop BB0_21 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_20
; %bb.29:                               ;   in Loop: Header=BB0_28 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_28
	.loh AdrpLdr	Lloh0, Lloh1
	.loh AdrpAdd	Lloh6, Lloh7
	.loh AdrpAdd	Lloh4, Lloh5
	.loh AdrpAdd	Lloh2, Lloh3
	.loh AdrpAdd	Lloh14, Lloh15
	.loh AdrpAdd	Lloh12, Lloh13
	.loh AdrpAdd	Lloh10, Lloh11
	.loh AdrpAdd	Lloh8, Lloh9
	.cfi_endproc
                                        ; -- End function
	.section	__TEXT,__cstring,cstring_literals
l_.str:                                 ; @.str
	.asciz	"**"

l_.str.1:                               ; @.str.1
	.asciz	"*"

l_.str.2:                               ; @.str.2
	.asciz	"//"

l_.str.3:                               ; @.str.3
	.asciz	"+"

l_.str.4:                               ; @.str.4
	.asciz	"-"

lCPI0_0:
	.long	0                               ; 0x0
	.long	1                               ; 0x1
	.long	2                               ; 0x2
	.long	3                               ; 0x3
	.section	__TEXT,__text,regular,pure_instructions
	.globl	_func0
	.p2align	2
_func0:                                 ; @func0
	.cfi_startproc
; %bb.0:
	stp	x28, x27, [sp, #-96]!           ; 16-byte Folded Spill
	.cfi_def_cfa_offset 96
	stp	x26, x25, [sp, #16]             ; 16-byte Folded Spill
	stp	x24, x23, [sp, #32]             ; 16-byte Folded Spill
	stp	x22, x21, [sp, #48]             ; 16-byte Folded Spill
	stp	x20, x19, [sp, #64]             ; 16-byte Folded Spill
	stp	x29, x30, [sp, #80]             ; 16-byte Folded Spill
	add	x29, sp, #80
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	.cfi_offset w19, -24
	.cfi_offset w20, -32
	.cfi_offset w21, -40
	.cfi_offset w22, -48
	.cfi_offset w23, -56
	.cfi_offset w24, -64
	.cfi_offset w25, -72
	.cfi_offset w26, -80
	.cfi_offset w27, -88
	.cfi_offset w28, -96
	mov	x23, x3
	mov	x22, x2
	mov	x24, x1
	mov	x21, x0
	sbfiz	x20, x23, #2, #32
	mov	x0, x20
	bl	_malloc
	mov	x19, x0
	mov	x0, x20
	bl	_malloc
	mov	x20, x0
	cmp	w23, #1
	b.lt	LBB0_8
; %bb.1:
	mov	w25, w23
	lsl	x2, x25, #2
	mov	x0, x19
	mov	x1, x24
	bl	_memcpy
	cmp	w23, #16
	b.hs	LBB0_3
; %bb.2:
	mov	x8, #0
	b	LBB0_6
LBB0_3:
	and	x8, x25, #0xfffffff0
Lloh16:
	adrp	x9, lCPI0_0@PAGE
Lloh17:
	ldr	q0, [x9, lCPI0_0@PAGEOFF]
	add	x9, x20, #32
	movi.4s	v1, #4
	movi.4s	v2, #8
	movi.4s	v3, #12
	movi.4s	v4, #16
	mov	x10, x8
LBB0_4:                                 ; =>This Inner Loop Header: Depth=1
	add.4s	v5, v0, v1
	add.4s	v6, v0, v2
	add.4s	v7, v0, v3
	stp	q0, q5, [x9, #-32]
	stp	q6, q7, [x9], #64
	add.4s	v0, v0, v4
	subs	x10, x10, #16
	b.ne	LBB0_4
; %bb.5:
	cmp	x8, x25
	b.eq	LBB0_8
LBB0_6:
	add	x9, x20, x8, lsl #2
	sub	x8, x25, x8
LBB0_7:                                 ; =>This Inner Loop Header: Depth=1
	str	w8, [x9], #4
	subs	x8, x8, #1
	b.ne	LBB0_7
LBB0_8:
	cmp	w22, #1
	b.lt	LBB0_37
; %bb.9:
	mov	x26, #0
	mov	w27, w22
Lloh18:
	adrp	x22, l_.str@PAGE
Lloh19:
	add	x22, x22, l_.str@PAGEOFF
Lloh20:
	adrp	x23, l_.str.1@PAGE
Lloh21:
	add	x23, x23, l_.str.1@PAGEOFF
Lloh22:
	adrp	x24, l_.str.2@PAGE
Lloh23:
	add	x24, x24, l_.str.2@PAGEOFF
	b	LBB0_11
LBB0_10:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x28, x26, #1
	sbfiz	x25, x25, #2, #32
	ldr	s0, [x19, x25]
	sshll.2d	v0, v0, #0
	scvtf	d0, d0
	ldr	s1, [x19, x8, lsl #2]
	sshll.2d	v1, v1, #0
	scvtf	d1, d1
	bl	_pow
	fcvtzs	w8, d0
	str	w8, [x19, x25]
	str	w25, [x20, x28, lsl #2]
	mov	x26, x28
	cmp	x26, x27
	b.eq	LBB0_19
LBB0_11:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_14 Depth 2
                                        ;     Child Loop BB0_17 Depth 2
	ldr	x0, [x21, x26, lsl #3]
	mov	x1, x22
	bl	_strcmp
	cbz	w0, LBB0_13
; %bb.12:                               ;   in Loop: Header=BB0_11 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_11
	b	LBB0_19
LBB0_13:                                ;   in Loop: Header=BB0_11 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_16
LBB0_14:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_14
; %bb.15:                               ;   in Loop: Header=BB0_11 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_16:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_17:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_10
; %bb.18:                               ;   in Loop: Header=BB0_17 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_17
LBB0_19:
	mov	x26, #0
Lloh24:
	adrp	x22, l_.str.1@PAGE
Lloh25:
	add	x22, x22, l_.str.1@PAGEOFF
Lloh26:
	adrp	x23, l_.str.2@PAGE
Lloh27:
	add	x23, x23, l_.str.2@PAGEOFF
Lloh28:
	adrp	x24, l_.str.3@PAGE
Lloh29:
	add	x24, x24, l_.str.3@PAGEOFF
Lloh30:
	adrp	x25, l_.str.4@PAGE
Lloh31:
	add	x25, x25, l_.str.4@PAGEOFF
	b	LBB0_21
LBB0_20:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.eq	LBB0_37
LBB0_21:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_26 Depth 2
                                        ;     Child Loop BB0_28 Depth 2
	ldr	x28, [x21, x26, lsl #3]
	mov	x0, x28
	mov	x1, x22
	bl	_strcmp
	mov	x27, x0
	cbz	w0, LBB0_24
; %bb.22:                               ;   in Loop: Header=BB0_21 Depth=1
	mov	x0, x28
	mov	x1, x23
	bl	_strcmp
	cbz	w0, LBB0_24
; %bb.23:                               ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_21
	b	LBB0_37
LBB0_24:                                ;   in Loop: Header=BB0_21 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_27
LBB0_25:                                ;   in Loop: Header=BB0_21 Depth=1
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_25
; %bb.26:                               ;   in Loop: Header=BB0_21 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_27:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_28:                                ;   Parent Loop BB0_21 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_20
; %bb.29:                               ;   in Loop: Header=BB0_28 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_28
	.loh AdrpLdr	Lloh16, Lloh17
	.loh AdrpAdd	Lloh22, Lloh23
	.loh AdrpAdd	Lloh20, Lloh21
	.loh AdrpAdd	Lloh18, Lloh19
	.loh AdrpAdd	Lloh30, Lloh31
	.loh AdrpAdd	Lloh28, Lloh29
	.loh AdrpAdd	Lloh26, Lloh27
	.loh AdrpAdd	Lloh24, Lloh25
	.cfi_endproc
                                        ; -- End function
	.section	__TEXT,__cstring,cstring_literals
l_.str:                                 ; @.str
	.asciz	"**"

l_.str.1:                               ; @.str.1
	.asciz	"*"

l_.str.2:                               ; @.str.2
	.asciz	"//"

l_.str.3:                               ; @.str.3
	.asciz	"+"

l_.str.4:                               ; @.str.4
	.asciz	"-"

lCPI0_0:
	.long	0                               ; 0x0
	.long	1                               ; 0x1
	.long	2                               ; 0x2
	.long	3                               ; 0x3
	.section	__TEXT,__text,regular,pure_instructions
	.globl	_func0
	.p2align	2
_func0:                                 ; @func0
	.cfi_startproc
; %bb.0:
	stp	x28, x27, [sp, #-96]!           ; 16-byte Folded Spill
	.cfi_def_cfa_offset 96
	stp	x26, x25, [sp, #16]             ; 16-byte Folded Spill
	stp	x24, x23, [sp, #32]             ; 16-byte Folded Spill
	stp	x22, x21, [sp, #48]             ; 16-byte Folded Spill
	stp	x20, x19, [sp, #64]             ; 16-byte Folded Spill
	stp	x29, x30, [sp, #80]             ; 16-byte Folded Spill
	add	x29, sp, #80
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	.cfi_offset w19, -24
	.cfi_offset w20, -32
	.cfi_offset w21, -40
	.cfi_offset w22, -48
	.cfi_offset w23, -56
	.cfi_offset w24, -64
	.cfi_offset w25, -72
	.cfi_offset w26, -80
	.cfi_offset w27, -88
	.cfi_offset w28, -96
	mov	x23, x3
	mov	x22, x2
	mov	x24, x1
	mov	x21, x0
	sbfiz	x20, x23, #2, #32
	mov	x0, x20
	bl	_malloc
	mov	x19, x0
	mov	x0, x20
	bl	_malloc
	mov	x20, x0
	cmp	w23, #1
	b.lt	LBB0_8
; %bb.1:
	mov	w25, w23
	lsl	x2, x25, #2
	mov	x0, x19
	mov	x1, x24
	bl	_memcpy
	cmp	w23, #16
	b.hs	LBB0_3
; %bb.2:
	mov	x8, #0
	b	LBB0_6
LBB0_3:
	and	x8, x25, #0xfffffff0
Lloh32:
	adrp	x9, lCPI0_0@PAGE
Lloh33:
	ldr	q0, [x9, lCPI0_0@PAGEOFF]
	add	x9, x20, #32
	movi.4s	v1, #4
	movi.4s	v2, #8
	movi.4s	v3, #12
	movi.4s	v4, #16
	mov	x10, x8
LBB0_4:                                 ; =>This Inner Loop Header: Depth=1
	add.4s	v5, v0, v1
	add.4s	v6, v0, v2
	add.4s	v7, v0, v3
	stp	q0, q5, [x9, #-32]
	stp	q6, q7, [x9], #64
	add.4s	v0, v0, v4
	subs	x10, x10, #16
	b.ne	LBB0_4
; %bb.5:
	cmp	x8, x25
	b.eq	LBB0_8
LBB0_6:
	add	x9, x20, x8, lsl #2
	sub	x8, x25, x8
LBB0_7:                                 ; =>This Inner Loop Header: Depth=1
	str	w8, [x9], #4
	subs	x8, x8, #1
	b.ne	LBB0_7
LBB0_8:
	cmp	w22, #1
	b.lt	LBB0_37
; %bb.9:
	mov	x26, #0
	mov	w27, w22
Lloh34:
	adrp	x22, l_.str@PAGE
Lloh35:
	add	x22, x22, l_.str@PAGEOFF
Lloh36:
	adrp	x23, l_.str.1@PAGE
Lloh37:
	add	x23, x23, l_.str.1@PAGEOFF
Lloh38:
	adrp	x24, l_.str.2@PAGE
Lloh39:
	add	x24, x24, l_.str.2@PAGEOFF
	b	LBB0_11
LBB0_10:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x28, x26, #1
	sbfiz	x25, x25, #2, #32
	ldr	s0, [x19, x25]
	sshll.2d	v0, v0, #0
	scvtf	d0, d0
	ldr	s1, [x19, x8, lsl #2]
	sshll.2d	v1, v1, #0
	scvtf	d1, d1
	bl	_pow
	fcvtzs	w8, d0
	str	w8, [x19, x25]
	str	w25, [x20, x28, lsl #2]
	mov	x26, x28
	cmp	x26, x27
	b.eq	LBB0_19
LBB0_11:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_14 Depth 2
                                        ;     Child Loop BB0_17 Depth 2
	ldr	x0, [x21, x26, lsl #3]
	mov	x1, x22
	bl	_strcmp
	cbz	w0, LBB0_13
; %bb.12:                               ;   in Loop: Header=BB0_11 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_11
	b	LBB0_19
LBB0_13:                                ;   in Loop: Header=BB0_11 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_16
LBB0_14:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_14
; %bb.15:                               ;   in Loop: Header=BB0_11 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_16:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_17:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_10
; %bb.18:                               ;   in Loop: Header=BB0_17 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_17
LBB0_19:
	mov	x26, #0
Lloh40:
	adrp	x22, l_.str.1@PAGE
Lloh41:
	add	x22, x22, l_.str.1@PAGEOFF
Lloh42:
	adrp	x23, l_.str.2@PAGE
Lloh43:
	add	x23, x23, l_.str.2@PAGEOFF
Lloh44:
	adrp	x24, l_.str.3@PAGE
Lloh45:
	add	x24, x24, l_.str.3@PAGEOFF
Lloh46:
	adrp	x25, l_.str.4@PAGE
Lloh47:
	add	x25, x25, l_.str.4@PAGEOFF
	b	LBB0_21
LBB0_20:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.eq	LBB0_37
LBB0_21:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_26 Depth 2
                                        ;     Child Loop BB0_28 Depth 2
	ldr	x28, [x21, x26, lsl #3]
	mov	x0, x28
	mov	x1, x22
	bl	_strcmp
	mov	x27, x0
	cbz	w0, LBB0_24
; %bb.22:                               ;   in Loop: Header=BB0_21 Depth=1
	mov	x0, x28
	mov	x1, x23
	bl	_strcmp
	cbz	w0, LBB0_24
; %bb.23:                               ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_21
	b	LBB0_37
LBB0_24:                                ;   in Loop: Header=BB0_21 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_27
LBB0_25:                                ;   in Loop: Header=BB0_21 Depth=1
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_25
; %bb.26:                               ;   in Loop: Header=BB0_21 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_27:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_28:                                ;   Parent Loop BB0_21 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_20
; %bb.29:                               ;   in Loop: Header=BB0_28 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_28
	.loh AdrpLdr	Lloh32, Lloh33
	.loh AdrpAdd	Lloh38, Lloh39
	.loh AdrpAdd	Lloh36, Lloh37
	.loh AdrpAdd	Lloh34, Lloh35
	.loh AdrpAdd	Lloh46, Lloh47
	.loh AdrpAdd	Lloh44, Lloh45
	.loh AdrpAdd	Lloh42, Lloh43
	.loh AdrpAdd	Lloh40, Lloh41
	.cfi_endproc
                                        ; -- End function
	.section	__TEXT,__cstring,cstring_literals
l_.str:                                 ; @.str
	.asciz	"**"

l_.str.1:                               ; @.str.1
	.asciz	"*"

l_.str.2:                               ; @.str.2
	.asciz	"//"

l_.str.3:                               ; @.str.3
	.asciz	"+"

l_.str.4:                               ; @.str.4
	.asciz	"-"

lCPI0_0:
	.long	0                               ; 0x0
	.long	1                               ; 0x1
	.long	2                               ; 0x2
	.long	3                               ; 0x3
	.section	__TEXT,__text,regular,pure_instructions
	.globl	_func0
	.p2align	2
_func0:                                 ; @func0
	.cfi_startproc
; %bb.0:
	stp	x28, x27, [sp, #-96]!           ; 16-byte Folded Spill
	.cfi_def_cfa_offset 96
	stp	x26, x25, [sp, #16]             ; 16-byte Folded Spill
	stp	x24, x23, [sp, #32]             ; 16-byte Folded Spill
	stp	x22, x21, [sp, #48]             ; 16-byte Folded Spill
	stp	x20, x19, [sp, #64]             ; 16-byte Folded Spill
	stp	x29, x30, [sp, #80]             ; 16-byte Folded Spill
	add	x29, sp, #80
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	.cfi_offset w19, -24
	.cfi_offset w20, -32
	.cfi_offset w21, -40
	.cfi_offset w22, -48
	.cfi_offset w23, -56
	.cfi_offset w24, -64
	.cfi_offset w25, -72
	.cfi_offset w26, -80
	.cfi_offset w27, -88
	.cfi_offset w28, -96
	mov	x23, x3
	mov	x22, x2
	mov	x24, x1
	mov	x21, x0
	sbfiz	x20, x23, #2, #32
	mov	x0, x20
	bl	_malloc
	mov	x19, x0
	mov	x0, x20
	bl	_malloc
	mov	x20, x0
	cmp	w23, #1
	b.lt	LBB0_8
; %bb.1:
	mov	w25, w23
	lsl	x2, x25, #2
	mov	x0, x19
	mov	x1, x24
	bl	_memcpy
	cmp	w23, #16
	b.hs	LBB0_3
; %bb.2:
	mov	x8, #0
	b	LBB0_6
LBB0_3:
	and	x8, x25, #0xfffffff0
Lloh48:
	adrp	x9, lCPI0_0@PAGE
Lloh49:
	ldr	q0, [x9, lCPI0_0@PAGEOFF]
	add	x9, x20, #32
	movi.4s	v1, #4
	movi.4s	v2, #8
	movi.4s	v3, #12
	movi.4s	v4, #16
	mov	x10, x8
LBB0_4:                                 ; =>This Inner Loop Header: Depth=1
	add.4s	v5, v0, v1
	add.4s	v6, v0, v2
	add.4s	v7, v0, v3
	stp	q0, q5, [x9, #-32]
	stp	q6, q7, [x9], #64
	add.4s	v0, v0, v4
	subs	x10, x10, #16
	b.ne	LBB0_4
; %bb.5:
	cmp	x8, x25
	b.eq	LBB0_8
LBB0_6:
	add	x9, x20, x8, lsl #2
	sub	x8, x25, x8
LBB0_7:                                 ; =>This Inner Loop Header: Depth=1
	str	w8, [x9], #4
	subs	x8, x8, #1
	b.ne	LBB0_7
LBB0_8:
	cmp	w22, #1
	b.lt	LBB0_37
; %bb.9:
	mov	x26, #0
	mov	w27, w22
Lloh50:
	adrp	x22, l_.str@PAGE
Lloh51:
	add	x22, x22, l_.str@PAGEOFF
Lloh52:
	adrp	x23, l_.str.1@PAGE
Lloh53:
	add	x23, x23, l_.str.1@PAGEOFF
Lloh54:
	adrp	x24, l_.str.2@PAGE
Lloh55:
	add	x24, x24, l_.str.2@PAGEOFF
	b	LBB0_11
LBB0_10:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x28, x26, #1
	sbfiz	x25, x25, #2, #32
	ldr	s0, [x19, x25]
	sshll.2d	v0, v0, #0
	scvtf	d0, d0
	ldr	s1, [x19, x8, lsl #2]
	sshll.2d	v1, v1, #0
	scvtf	d1, d1
	bl	_pow
	fcvtzs	w8, d0
	str	w8, [x19, x25]
	str	w25, [x20, x28, lsl #2]
	mov	x26, x28
	cmp	x26, x27
	b.eq	LBB0_19
LBB0_11:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_14 Depth 2
                                        ;     Child Loop BB0_17 Depth 2
	ldr	x0, [x21, x26, lsl #3]
	mov	x1, x22
	bl	_strcmp
	cbz	w0, LBB0_13
; %bb.12:                               ;   in Loop: Header=BB0_11 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_11
	b	LBB0_19
LBB0_13:                                ;   in Loop: Header=BB0_11 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_16
LBB0_14:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_14
; %bb.15:                               ;   in Loop: Header=BB0_11 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_16:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_17:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_10
; %bb.18:                               ;   in Loop: Header=BB0_17 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_17
LBB0_19:
	mov	x26, #0
Lloh56:
	adrp	x22, l_.str.1@PAGE
Lloh57:
	add	x22, x22, l_.str.1@PAGEOFF
Lloh58:
	adrp	x23, l_.str.2@PAGE
Lloh59:
	add	x23, x23, l_.str.2@PAGEOFF
Lloh60:
	adrp	x24, l_.str.3@PAGE
Lloh61:
	add	x24, x24, l_.str.3@PAGEOFF
Lloh62:
	adrp	x25, l_.str.4@PAGE
Lloh63:
	add	x25, x25, l_.str.4@PAGEOFF
	b	LBB0_21
LBB0_20:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.eq	LBB0_37
LBB0_21:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_26 Depth 2
                                        ;     Child Loop BB0_28 Depth 2
	ldr	x28, [x21, x26, lsl #3]
	mov	x0, x28
	mov	x1, x22
	bl	_strcmp
	mov	x27, x0
	cbz	w0, LBB0_24
; %bb.22:                               ;   in Loop: Header=BB0_21 Depth=1
	mov	x0, x28
	mov	x1, x23
	bl	_strcmp
	cbz	w0, LBB0_24
; %bb.23:                               ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_21
	b	LBB0_37
LBB0_24:                                ;   in Loop: Header=BB0_21 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_27
LBB0_25:                                ;   in Loop: Header=BB0_21 Depth=1
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_25
; %bb.26:                               ;   in Loop: Header=BB0_21 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_27:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_28:                                ;   Parent Loop BB0_21 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_20
; %bb.29:                               ;   in Loop: Header=BB0_28 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_28
	.loh AdrpLdr	Lloh48, Lloh49
	.loh AdrpAdd	Lloh54, Lloh55
	.loh AdrpAdd	Lloh52, Lloh53
	.loh AdrpAdd	Lloh50, Lloh51
	.loh AdrpAdd	Lloh62, Lloh63
	.loh AdrpAdd	Lloh60, Lloh61
	.loh AdrpAdd	Lloh58, Lloh59
	.loh AdrpAdd	Lloh56, Lloh57
	.cfi_endproc
                                        ; -- End function
	.section	__TEXT,__cstring,cstring_literals
l_.str:                                 ; @.str
	.asciz	"**"

l_.str.1:                               ; @.str.1
	.asciz	"*"

l_.str.2:                               ; @.str.2
	.asciz	"//"

l_.str.3:                               ; @.str.3
	.asciz	"+"

l_.str.4:                               ; @.str.4
	.asciz	"-"

lCPI0_0:
	.long	0                               ; 0x0
	.long	1                               ; 0x1
	.long	2                               ; 0x2
	.long	3                               ; 0x3
	.section	__TEXT,__text,regular,pure_instructions
	.globl	_func0
	.p2align	2
_func0:                                 ; @func0
	.cfi_startproc
; %bb.0:
	stp	x28, x27, [sp, #-96]!           ; 16-byte Folded Spill
	.cfi_def_cfa_offset 96
	stp	x26, x25, [sp, #16]             ; 16-byte Folded Spill
	stp	x24, x23, [sp, #32]             ; 16-byte Folded Spill
	stp	x22, x21, [sp, #48]             ; 16-byte Folded Spill
	stp	x20, x19, [sp, #64]             ; 16-byte Folded Spill
	stp	x29, x30, [sp, #80]             ; 16-byte Folded Spill
	add	x29, sp, #80
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	.cfi_offset w19, -24
	.cfi_offset w20, -32
	.cfi_offset w21, -40
	.cfi_offset w22, -48
	.cfi_offset w23, -56
	.cfi_offset w24, -64
	.cfi_offset w25, -72
	.cfi_offset w26, -80
	.cfi_offset w27, -88
	.cfi_offset w28, -96
	mov	x23, x3
	mov	x22, x2
	mov	x24, x1
	mov	x21, x0
	sbfiz	x20, x23, #2, #32
	mov	x0, x20
	bl	_malloc
	mov	x19, x0
	mov	x0, x20
	bl	_malloc
	mov	x20, x0
	cmp	w23, #1
	b.lt	LBB0_8
; %bb.1:
	mov	w25, w23
	lsl	x2, x25, #2
	mov	x0, x19
	mov	x1, x24
	bl	_memcpy
	cmp	w23, #16
	b.hs	LBB0_3
; %bb.2:
	mov	x8, #0
	b	LBB0_6
LBB0_3:
	and	x8, x25, #0xfffffff0
Lloh64:
	adrp	x9, lCPI0_0@PAGE
Lloh65:
	ldr	q0, [x9, lCPI0_0@PAGEOFF]
	add	x9, x20, #32
	movi.4s	v1, #4
	movi.4s	v2, #8
	movi.4s	v3, #12
	movi.4s	v4, #16
	mov	x10, x8
LBB0_4:                                 ; =>This Inner Loop Header: Depth=1
	add.4s	v5, v0, v1
	add.4s	v6, v0, v2
	add.4s	v7, v0, v3
	stp	q0, q5, [x9, #-32]
	stp	q6, q7, [x9], #64
	add.4s	v0, v0, v4
	subs	x10, x10, #16
	b.ne	LBB0_4
; %bb.5:
	cmp	x8, x25
	b.eq	LBB0_8
LBB0_6:
	add	x9, x20, x8, lsl #2
	sub	x8, x25, x8
LBB0_7:                                 ; =>This Inner Loop Header: Depth=1
	str	w8, [x9], #4
	subs	x8, x8, #1
	b.ne	LBB0_7
LBB0_8:
	cmp	w22, #1
	b.lt	LBB0_37
; %bb.9:
	mov	x26, #0
	mov	w27, w22
Lloh66:
	adrp	x22, l_.str@PAGE
Lloh67:
	add	x22, x22, l_.str@PAGEOFF
Lloh68:
	adrp	x23, l_.str.1@PAGE
Lloh69:
	add	x23, x23, l_.str.1@PAGEOFF
Lloh70:
	adrp	x24, l_.str.2@PAGE
Lloh71:
	add	x24, x24, l_.str.2@PAGEOFF
	b	LBB0_11
LBB0_10:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x28, x26, #1
	sbfiz	x25, x25, #2, #32
	ldr	s0, [x19, x25]
	sshll.2d	v0, v0, #0
	scvtf	d0, d0
	ldr	s1, [x19, x8, lsl #2]
	sshll.2d	v1, v1, #0
	scvtf	d1, d1
	bl	_pow
	fcvtzs	w8, d0
	str	w8, [x19, x25]
	str	w25, [x20, x28, lsl #2]
	mov	x26, x28
	cmp	x26, x27
	b.eq	LBB0_19
LBB0_11:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_14 Depth 2
                                        ;     Child Loop BB0_17 Depth 2
	ldr	x0, [x21, x26, lsl #3]
	mov	x1, x22
	bl	_strcmp
	cbz	w0, LBB0_13
; %bb.12:                               ;   in Loop: Header=BB0_11 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_11
	b	LBB0_19
LBB0_13:                                ;   in Loop: Header=BB0_11 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_16
LBB0_14:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_14
; %bb.15:                               ;   in Loop: Header=BB0_11 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_16:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_17:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_10
; %bb.18:                               ;   in Loop: Header=BB0_17 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_17
LBB0_19:
	mov	x26, #0
Lloh72:
	adrp	x22, l_.str.1@PAGE
Lloh73:
	add	x22, x22, l_.str.1@PAGEOFF
Lloh74:
	adrp	x23, l_.str.2@PAGE
Lloh75:
	add	x23, x23, l_.str.2@PAGEOFF
Lloh76:
	adrp	x24, l_.str.3@PAGE
Lloh77:
	add	x24, x24, l_.str.3@PAGEOFF
Lloh78:
	adrp	x25, l_.str.4@PAGE
Lloh79:
	add	x25, x25, l_.str.4@PAGEOFF
	b	LBB0_21
LBB0_20:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.eq	LBB0_37
LBB0_21:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_26 Depth 2
                                        ;     Child Loop BB0_28 Depth 2
	ldr	x28, [x21, x26, lsl #3]
	mov	x0, x28
	mov	x1, x22
	bl	_strcmp
	mov	x27, x0
	cbz	w0, LBB0_24
; %bb.22:                               ;   in Loop: Header=BB0_21 Depth=1
	mov	x0, x28
	mov	x1, x23
	bl	_strcmp
	cbz	w0, LBB0_24
; %bb.23:                               ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_21
	b	LBB0_37
LBB0_24:                                ;   in Loop: Header=BB0_21 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_27
LBB0_25:                                ;   in Loop: Header=BB0_21 Depth=1
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_25
; %bb.26:                               ;   in Loop: Header=BB0_21 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_27:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_28:                                ;   Parent Loop BB0_21 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_20
; %bb.29:                               ;   in Loop: Header=BB0_28 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_28
	.loh AdrpLdr	Lloh64, Lloh65
	.loh AdrpAdd	Lloh70, Lloh71
	.loh AdrpAdd	Lloh68, Lloh69
	.loh AdrpAdd	Lloh66, Lloh67
	.loh AdrpAdd	Lloh78, Lloh79
	.loh AdrpAdd	Lloh76, Lloh77
	.loh AdrpAdd	Lloh74, Lloh75
	.loh AdrpAdd	Lloh72, Lloh73
	.cfi_endproc
                                        ; -- End function
	.section	__TEXT,__cstring,cstring_literals
l_.str:                                 ; @.str
	.asciz	"**"

l_.str.1:                               ; @.str.1
	.asciz	"*"

l_.str.2:                               ; @.str.2
	.asciz	"//"

l_.str.3:                               ; @.str.3
	.asciz	"+"

l_.str.4:                               ; @.str.4
	.asciz	"-"

lCPI0_0:
	.long	0                               ; 0x0
	.long	1                               ; 0x1
	.long	2                               ; 0x2
	.long	3                               ; 0x3
	.section	__TEXT,__text,regular,pure_instructions
	.globl	_func0
	.p2align	2
_func0:                                 ; @func0
	.cfi_startproc
; %bb.0:
	stp	x28, x27, [sp, #-96]!           ; 16-byte Folded Spill
	.cfi_def_cfa_offset 96
	stp	x26, x25, [sp, #16]             ; 16-byte Folded Spill
	stp	x24, x23, [sp, #32]             ; 16-byte Folded Spill
	stp	x22, x21, [sp, #48]             ; 16-byte Folded Spill
	stp	x20, x19, [sp, #64]             ; 16-byte Folded Spill
	stp	x29, x30, [sp, #80]             ; 16-byte Folded Spill
	add	x29, sp, #80
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	.cfi_offset w19, -24
	.cfi_offset w20, -32
	.cfi_offset w21, -40
	.cfi_offset w22, -48
	.cfi_offset w23, -56
	.cfi_offset w24, -64
	.cfi_offset w25, -72
	.cfi_offset w26, -80
	.cfi_offset w27, -88
	.cfi_offset w28, -96
	mov	x23, x3
	mov	x22, x2
	mov	x24, x1
	mov	x21, x0
	sbfiz	x20, x23, #2, #32
	mov	x0, x20
	bl	_malloc
	mov	x19, x0
	mov	x0, x20
	bl	_malloc
	mov	x20, x0
	cmp	w23, #1
	b.lt	LBB0_8
; %bb.1:
	mov	w25, w23
	lsl	x2, x25, #2
	mov	x0, x19
	mov	x1, x24
	bl	_memcpy
	cmp	w23, #16
	b.hs	LBB0_3
; %bb.2:
	mov	x8, #0
	b	LBB0_6
LBB0_3:
	and	x8, x25, #0xfffffff0
Lloh80:
	adrp	x9, lCPI0_0@PAGE
Lloh81:
	ldr	q0, [x9, lCPI0_0@PAGEOFF]
	add	x9, x20, #32
	movi.4s	v1, #4
	movi.4s	v2, #8
	movi.4s	v3, #12
	movi.4s	v4, #16
	mov	x10, x8
LBB0_4:                                 ; =>This Inner Loop Header: Depth=1
	add.4s	v5, v0, v1
	add.4s	v6, v0, v2
	add.4s	v7, v0, v3
	stp	q0, q5, [x9, #-32]
	stp	q6, q7, [x9], #64
	add.4s	v0, v0, v4
	subs	x10, x10, #16
	b.ne	LBB0_4
; %bb.5:
	cmp	x8, x25
	b.eq	LBB0_8
LBB0_6:
	add	x9, x20, x8, lsl #2
	sub	x8, x25, x8
LBB0_7:                                 ; =>This Inner Loop Header: Depth=1
	str	w8, [x9], #4
	subs	x8, x8, #1
	b.ne	LBB0_7
LBB0_8:
	cmp	w22, #1
	b.lt	LBB0_37
; %bb.9:
	mov	x26, #0
	mov	w27, w22
Lloh82:
	adrp	x22, l_.str@PAGE
Lloh83:
	add	x22, x22, l_.str@PAGEOFF
Lloh84:
	adrp	x23, l_.str.1@PAGE
Lloh85:
	add	x23, x23, l_.str.1@PAGEOFF
Lloh86:
	adrp	x24, l_.str.2@PAGE
Lloh87:
	add	x24, x24, l_.str.2@PAGEOFF
	b	LBB0_11
LBB0_10:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x28, x26, #1
	sbfiz	x25, x25, #2, #32
	ldr	s0, [x19, x25]
	sshll.2d	v0, v0, #0
	scvtf	d0, d0
	ldr	s1, [x19, x8, lsl #2]
	sshll.2d	v1, v1, #0
	scvtf	d1, d1
	bl	_pow
	fcvtzs	w8, d0
	str	w8, [x19, x25]
	str	w25, [x20, x28, lsl #2]
	mov	x26, x28
	cmp	x26, x27
	b.eq	LBB0_19
LBB0_11:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_14 Depth 2
                                        ;     Child Loop BB0_17 Depth 2
	ldr	x0, [x21, x26, lsl #3]
	mov	x1, x22
	bl	_strcmp
	cbz	w0, LBB0_13
; %bb.12:                               ;   in Loop: Header=BB0_11 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_11
	b	LBB0_19
LBB0_13:                                ;   in Loop: Header=BB0_11 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_16
LBB0_14:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_14
; %bb.15:                               ;   in Loop: Header=BB0_11 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_16:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_17:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_10
; %bb.18:                               ;   in Loop: Header=BB0_17 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_17
LBB0_19:
	mov	x26, #0
Lloh88:
	adrp	x22, l_.str.1@PAGE
Lloh89:
	add	x22, x22, l_.str.1@PAGEOFF
Lloh90:
	adrp	x23, l_.str.2@PAGE
Lloh91:
	add	x23, x23, l_.str.2@PAGEOFF
Lloh92:
	adrp	x24, l_.str.3@PAGE
Lloh93:
	add	x24, x24, l_.str.3@PAGEOFF
Lloh94:
	adrp	x25, l_.str.4@PAGE
Lloh95:
	add	x25, x25, l_.str.4@PAGEOFF
	b	LBB0_21
LBB0_20:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.eq	LBB0_37
LBB0_21:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_26 Depth 2
                                        ;     Child Loop BB0_28 Depth 2
	ldr	x28, [x21, x26, lsl #3]
	mov	x0, x28
	mov	x1, x22
	bl	_strcmp
	mov	x27, x0
	cbz	w0, LBB0_24
; %bb.22:                               ;   in Loop: Header=BB0_21 Depth=1
	mov	x0, x28
	mov	x1, x23
	bl	_strcmp
	cbz	w0, LBB0_24
; %bb.23:                               ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_21
	b	LBB0_37
LBB0_24:                                ;   in Loop: Header=BB0_21 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_27
LBB0_25:                                ;   in Loop: Header=BB0_21 Depth=1
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_25
; %bb.26:                               ;   in Loop: Header=BB0_21 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_27:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_28:                                ;   Parent Loop BB0_21 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_20
; %bb.29:                               ;   in Loop: Header=BB0_28 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_28
	.loh AdrpLdr	Lloh80, Lloh81
	.loh AdrpAdd	Lloh86, Lloh87
	.loh AdrpAdd	Lloh84, Lloh85
	.loh AdrpAdd	Lloh82, Lloh83
	.loh AdrpAdd	Lloh94, Lloh95
	.loh AdrpAdd	Lloh92, Lloh93
	.loh AdrpAdd	Lloh90, Lloh91
	.loh AdrpAdd	Lloh88, Lloh89
	.cfi_endproc
                                        ; -- End function
	.section	__TEXT,__cstring,cstring_literals
l_.str:                                 ; @.str
	.asciz	"**"

l_.str.1:                               ; @.str.1
	.asciz	"*"

l_.str.2:                               ; @.str.2
	.asciz	"//"

l_.str.3:                               ; @.str.3
	.asciz	"+"

l_.str.4:                               ; @.str.4
	.asciz	"-"

lCPI0_0:
	.long	0                               ; 0x0
	.long	1                               ; 0x1
	.long	2                               ; 0x2
	.long	3                               ; 0x3
	.section	__TEXT,__text,regular,pure_instructions
	.globl	_func0
	.p2align	2
_func0:                                 ; @func0
	.cfi_startproc
; %bb.0:
	stp	x28, x27, [sp, #-96]!           ; 16-byte Folded Spill
	.cfi_def_cfa_offset 96
	stp	x26, x25, [sp, #16]             ; 16-byte Folded Spill
	stp	x24, x23, [sp, #32]             ; 16-byte Folded Spill
	stp	x22, x21, [sp, #48]             ; 16-byte Folded Spill
	stp	x20, x19, [sp, #64]             ; 16-byte Folded Spill
	stp	x29, x30, [sp, #80]             ; 16-byte Folded Spill
	add	x29, sp, #80
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	.cfi_offset w19, -24
	.cfi_offset w20, -32
	.cfi_offset w21, -40
	.cfi_offset w22, -48
	.cfi_offset w23, -56
	.cfi_offset w24, -64
	.cfi_offset w25, -72
	.cfi_offset w26, -80
	.cfi_offset w27, -88
	.cfi_offset w28, -96
	mov	x23, x3
	mov	x22, x2
	mov	x24, x1
	mov	x21, x0
	sbfiz	x20, x23, #2, #32
	mov	x0, x20
	bl	_malloc
	mov	x19, x0
	mov	x0, x20
	bl	_malloc
	mov	x20, x0
	cmp	w23, #1
	b.lt	LBB0_8
; %bb.1:
	mov	w25, w23
	lsl	x2, x25, #2
	mov	x0, x19
	mov	x1, x24
	bl	_memcpy
	cmp	w23, #16
	b.hs	LBB0_3
; %bb.2:
	mov	x8, #0
	b	LBB0_6
LBB0_3:
	and	x8, x25, #0xfffffff0
Lloh96:
	adrp	x9, lCPI0_0@PAGE
Lloh97:
	ldr	q0, [x9, lCPI0_0@PAGEOFF]
	add	x9, x20, #32
	movi.4s	v1, #4
	movi.4s	v2, #8
	movi.4s	v3, #12
	movi.4s	v4, #16
	mov	x10, x8
LBB0_4:                                 ; =>This Inner Loop Header: Depth=1
	add.4s	v5, v0, v1
	add.4s	v6, v0, v2
	add.4s	v7, v0, v3
	stp	q0, q5, [x9, #-32]
	stp	q6, q7, [x9], #64
	add.4s	v0, v0, v4
	subs	x10, x10, #16
	b.ne	LBB0_4
; %bb.5:
	cmp	x8, x25
	b.eq	LBB0_8
LBB0_6:
	add	x9, x20, x8, lsl #2
	sub	x8, x25, x8
LBB0_7:                                 ; =>This Inner Loop Header: Depth=1
	str	w8, [x9], #4
	subs	x8, x8, #1
	b.ne	LBB0_7
LBB0_8:
	cmp	w22, #1
	b.lt	LBB0_37
; %bb.9:
	mov	x26, #0
	mov	w27, w22
Lloh98:
	adrp	x22, l_.str@PAGE
Lloh99:
	add	x22, x22, l_.str@PAGEOFF
Lloh100:
	adrp	x23, l_.str.1@PAGE
Lloh101:
	add	x23, x23, l_.str.1@PAGEOFF
Lloh102:
	adrp	x24, l_.str.2@PAGE
Lloh103:
	add	x24, x24, l_.str.2@PAGEOFF
	b	LBB0_11
LBB0_10:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x28, x26, #1
	sbfiz	x25, x25, #2, #32
	ldr	s0, [x19, x25]
	sshll.2d	v0, v0, #0
	scvtf	d0, d0
	ldr	s1, [x19, x8, lsl #2]
	sshll.2d	v1, v1, #0
	scvtf	d1, d1
	bl	_pow
	fcvtzs	w8, d0
	str	w8, [x19, x25]
	str	w25, [x20, x28, lsl #2]
	mov	x26, x28
	cmp	x26, x27
	b.eq	LBB0_19
LBB0_11:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_14 Depth 2
                                        ;     Child Loop BB0_17 Depth 2
	ldr	x0, [x21, x26, lsl #3]
	mov	x1, x22
	bl	_strcmp
	cbz	w0, LBB0_13
; %bb.12:                               ;   in Loop: Header=BB0_11 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_11
	b	LBB0_19
LBB0_13:                                ;   in Loop: Header=BB0_11 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_16
LBB0_14:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_14
; %bb.15:                               ;   in Loop: Header=BB0_11 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_16:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_17:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_10
; %bb.18:                               ;   in Loop: Header=BB0_17 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_17
LBB0_19:
	mov	x26, #0
Lloh104:
	adrp	x22, l_.str.1@PAGE
Lloh105:
	add	x22, x22, l_.str.1@PAGEOFF
Lloh106:
	adrp	x23, l_.str.2@PAGE
Lloh107:
	add	x23, x23, l_.str.2@PAGEOFF
Lloh108:
	adrp	x24, l_.str.3@PAGE
Lloh109:
	add	x24, x24, l_.str.3@PAGEOFF
Lloh110:
	adrp	x25, l_.str.4@PAGE
Lloh111:
	add	x25, x25, l_.str.4@PAGEOFF
	b	LBB0_21
LBB0_20:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.eq	LBB0_37
LBB0_21:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_26 Depth 2
                                        ;     Child Loop BB0_28 Depth 2
	ldr	x28, [x21, x26, lsl #3]
	mov	x0, x28
	mov	x1, x22
	bl	_strcmp
	mov	x27, x0
	cbz	w0, LBB0_24
; %bb.22:                               ;   in Loop: Header=BB0_21 Depth=1
	mov	x0, x28
	mov	x1, x23
	bl	_strcmp
	cbz	w0, LBB0_24
; %bb.23:                               ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_21
	b	LBB0_37
LBB0_24:                                ;   in Loop: Header=BB0_21 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_27
LBB0_25:                                ;   in Loop: Header=BB0_21 Depth=1
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_25
; %bb.26:                               ;   in Loop: Header=BB0_21 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_27:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_28:                                ;   Parent Loop BB0_21 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_20
; %bb.29:                               ;   in Loop: Header=BB0_28 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_28
	.loh AdrpLdr	Lloh96, Lloh97
	.loh AdrpAdd	Lloh102, Lloh103
	.loh AdrpAdd	Lloh100, Lloh101
	.loh AdrpAdd	Lloh98, Lloh99
	.loh AdrpAdd	Lloh110, Lloh111
	.loh AdrpAdd	Lloh108, Lloh109
	.loh AdrpAdd	Lloh106, Lloh107
	.loh AdrpAdd	Lloh104, Lloh105
	.cfi_endproc
                                        ; -- End function
	.section	__TEXT,__cstring,cstring_literals
l_.str:                                 ; @.str
	.asciz	"**"

l_.str.1:                               ; @.str.1
	.asciz	"*"

l_.str.2:                               ; @.str.2
	.asciz	"//"

l_.str.3:                               ; @.str.3
	.asciz	"+"

l_.str.4:                               ; @.str.4
	.asciz	"-"

lCPI0_0:
	.long	0                               ; 0x0
	.long	1                               ; 0x1
	.long	2                               ; 0x2
	.long	3                               ; 0x3
	.section	__TEXT,__text,regular,pure_instructions
	.globl	_func0
	.p2align	2
_func0:                                 ; @func0
	.cfi_startproc
; %bb.0:
	stp	x28, x27, [sp, #-96]!           ; 16-byte Folded Spill
	.cfi_def_cfa_offset 96
	stp	x26, x25, [sp, #16]             ; 16-byte Folded Spill
	stp	x24, x23, [sp, #32]             ; 16-byte Folded Spill
	stp	x22, x21, [sp, #48]             ; 16-byte Folded Spill
	stp	x20, x19, [sp, #64]             ; 16-byte Folded Spill
	stp	x29, x30, [sp, #80]             ; 16-byte Folded Spill
	add	x29, sp, #80
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	.cfi_offset w19, -24
	.cfi_offset w20, -32
	.cfi_offset w21, -40
	.cfi_offset w22, -48
	.cfi_offset w23, -56
	.cfi_offset w24, -64
	.cfi_offset w25, -72
	.cfi_offset w26, -80
	.cfi_offset w27, -88
	.cfi_offset w28, -96
	mov	x23, x3
	mov	x22, x2
	mov	x24, x1
	mov	x21, x0
	sbfiz	x20, x23, #2, #32
	mov	x0, x20
	bl	_malloc
	mov	x19, x0
	mov	x0, x20
	bl	_malloc
	mov	x20, x0
	cmp	w23, #1
	b.lt	LBB0_8
; %bb.1:
	mov	w25, w23
	lsl	x2, x25, #2
	mov	x0, x19
	mov	x1, x24
	bl	_memcpy
	cmp	w23, #16
	b.hs	LBB0_3
; %bb.2:
	mov	x8, #0
	b	LBB0_6
LBB0_3:
	and	x8, x25, #0xfffffff0
Lloh112:
	adrp	x9, lCPI0_0@PAGE
Lloh113:
	ldr	q0, [x9, lCPI0_0@PAGEOFF]
	add	x9, x20, #32
	movi.4s	v1, #4
	movi.4s	v2, #8
	movi.4s	v3, #12
	movi.4s	v4, #16
	mov	x10, x8
LBB0_4:                                 ; =>This Inner Loop Header: Depth=1
	add.4s	v5, v0, v1
	add.4s	v6, v0, v2
	add.4s	v7, v0, v3
	stp	q0, q5, [x9, #-32]
	stp	q6, q7, [x9], #64
	add.4s	v0, v0, v4
	subs	x10, x10, #16
	b.ne	LBB0_4
; %bb.5:
	cmp	x8, x25
	b.eq	LBB0_8
LBB0_6:
	add	x9, x20, x8, lsl #2
	sub	x8, x25, x8
LBB0_7:                                 ; =>This Inner Loop Header: Depth=1
	str	w8, [x9], #4
	subs	x8, x8, #1
	b.ne	LBB0_7
LBB0_8:
	cmp	w22, #1
	b.lt	LBB0_37
; %bb.9:
	mov	x26, #0
	mov	w27, w22
Lloh114:
	adrp	x22, l_.str@PAGE
Lloh115:
	add	x22, x22, l_.str@PAGEOFF
Lloh116:
	adrp	x23, l_.str.1@PAGE
Lloh117:
	add	x23, x23, l_.str.1@PAGEOFF
Lloh118:
	adrp	x24, l_.str.2@PAGE
Lloh119:
	add	x24, x24, l_.str.2@PAGEOFF
	b	LBB0_11
LBB0_10:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x28, x26, #1
	sbfiz	x25, x25, #2, #32
	ldr	s0, [x19, x25]
	sshll.2d	v0, v0, #0
	scvtf	d0, d0
	ldr	s1, [x19, x8, lsl #2]
	sshll.2d	v1, v1, #0
	scvtf	d1, d1
	bl	_pow
	fcvtzs	w8, d0
	str	w8, [x19, x25]
	str	w25, [x20, x28, lsl #2]
	mov	x26, x28
	cmp	x26, x27
	b.eq	LBB0_19
LBB0_11:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_14 Depth 2
                                        ;     Child Loop BB0_17 Depth 2
	ldr	x0, [x21, x26, lsl #3]
	mov	x1, x22
	bl	_strcmp
	cbz	w0, LBB0_13
; %bb.12:                               ;   in Loop: Header=BB0_11 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_11
	b	LBB0_19
LBB0_13:                                ;   in Loop: Header=BB0_11 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_16
LBB0_14:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_14
; %bb.15:                               ;   in Loop: Header=BB0_11 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_16:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_17:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_10
; %bb.18:                               ;   in Loop: Header=BB0_17 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_17
LBB0_19:
	mov	x26, #0
Lloh20:
	adrp	x22, l_.str.1@PAGE
Lloh21:
	add	x22, x22, l_.str.1@PAGEOFF
Lloh22:
	adrp	x23, l_.str.2@PAGE
Lloh23:
	add	x23, x23, l_.str.2@PAGEOFF
Lloh24:
	adrp	x24, l_.str.3@PAGE
Lloh25:
	add	x24, x24, l_.str.3@PAGEOFF
Lloh26:
	adrp	x25, l_.str.4@PAGE
Lloh27:
	add	x25, x25, l_.str.4@PAGEOFF
	b	LBB0_21
LBB0_20:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.eq	LBB0_37
LBB0_21:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_26 Depth 2
                                        ;     Child Loop BB0_28 Depth 2
	ldr	x28, [x21, x26, lsl #3]
	mov	x0, x28
	mov	x1, x22
	bl	_strcmp
	mov	x27, x0
	cbz	w0, LBB0_24
; %bb.22:                               ;   in Loop: Header=BB0_21 Depth=1
	mov	x0, x28
	mov	x1, x23
	bl	_strcmp
	cbz	w0, LBB0_24
; %bb.23:                               ;   in Loop: Header=BB0_21 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_21
	b	LBB0_37
LBB0_24:                                ;   in Loop: Header=BB0_21 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_27
LBB0_25:                                ;   in Loop: Header=BB0_21 Depth=1
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_25
; %bb.26:                               ;   in Loop: Header=BB0_21 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_27:                                ;   in Loop: Header=BB0_21 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_28:                                ;   Parent Loop BB0_21 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w10, w9
	b.eq	LBB0_20
; %bb.29:                               ;   in Loop: Header=BB0_28 Depth=2
	str	w10, [x8, #4]
	sxtw	x9, w10
	b	LBB0_28
	.loh AdrpLdr	Lloh112, Lloh113
	.loh AdrpAdd	Lloh118, Lloh119
	.loh AdrpAdd	Lloh116, Lloh117
	.loh AdrpAdd	Lloh114, Lloh115
	.loh AdrpAdd	Lloh26, Lloh27
	.loh AdrpAdd	Lloh24, Lloh25
	.loh AdrpAdd	Lloh22, Lloh23
	.loh AdrpAdd	Lloh20, Lloh21
	.cfi_endproc
                                        ; -- End function
	.section	__TEXT,__cstring,cstring_literals
l_.str:                                 ; @.str
	.asciz	"**"

l_.str.1:                               ; @.str.1
	.asciz	"*"

l_.str.2:                               ; @.str.2
	.asciz	"//"

l_.str.3:                               ; @.str.3
	.asciz	"+"

l_.str.4:                               ; @.str.4
	.asciz	"-"

lCPI0_0:
	.long	0                               ; 0x0
	.long	1                               ; 0x1
	.long	2                               ; 0x2
	.long	3                               ; 0x3
	.section	__TEXT,__text,regular,pure_instructions
	.globl	_func0
	.p2align	2
_func0:                                 ; @func0
	.cfi_startproc
; %bb.0:
	stp	x28, x27, [sp, #-96]!           ; 16-byte Folded Spill
	.cfi_def_cfa_offset 96
	stp	x26, x25, [sp, #16]             ; 16-byte Folded Spill
	stp	x24, x23, [sp, #32]             ; 16-byte Folded Spill
	stp	x22, x21, [sp, #48]             ; 16-byte Folded Spill
	stp	x20, x19, [sp, #64]             ; 16-byte Folded Spill
	stp	x29, x30, [sp, #80]             ; 16-byte Folded Spill
	add	x29, sp, #80
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	.cfi_offset w19, -24
	.cfi_offset w20, -32
	.cfi_offset w21, -40
	.cfi_offset w22, -48
	.cfi_offset w23, -56
	.cfi_offset w24, -64
	.cfi_offset w25, -72
	.cfi_offset w26, -80
	.cfi_offset w27, -88
	.cfi_offset w28, -96
	mov	x23, x3
	mov	x22, x2
	mov	x24, x1
	mov	x21, x0
	sbfiz	x20, x23, #2, #32
	mov	x0, x20
	bl	_malloc
	mov	x19, x0
	mov	x0, x20
	bl	_malloc
	mov	x20, x0
	cmp	w23, #1
	b.lt	LBB0_8
; %bb.1:
	mov	w25, w23
	lsl	x2, x25, #2
	mov	x0, x19
	mov	x1, x24
	bl	_memcpy
	cmp	w23, #16
	b.hs	LBB0_3
; %bb.2:
	mov	x8, #0
	b	LBB0_6
LBB0_3:
	and	x8, x25, #0xfffffff0
Lloh30:
	adrp	x9, lCPI0_0@PAGE
Lloh31:
	ldr	q0, [x9, lCPI0_0@PAGEOFF]
	add	x9, x20, #32
	movi.4s	v1, #4
	movi.4s	v2, #8
	movi.4s	v3, #12
	movi.4s	v4, #16
	mov	x10, x8
LBB0_4:                                 ; =>This Inner Loop Header: Depth=1
	add.4s	v5, v0, v1
	add.4s	v6, v0, v2
	add.4s	v7, v0, v3
	stp	q0, q5, [x9, #-32]
	stp	q6, q7, [x9], #64
	add.4s	v0, v0, v4
	subs	x10, x10, #16
	b.ne	LBB0_4
; %bb.5:
	cmp	x8, x25
	b.eq	LBB0_8
LBB0_6:
	add	x9, x20, x8, lsl #2
	sub	x8, x25, x8
LBB0_7:                                 ; =>This Inner Loop Header: Depth=1
	str	w8, [x9], #4
	subs	x8, x8, #1
	b.ne	LBB0_7
LBB0_8:
	cmp	w22, #1
	b.lt	LBB0_37
; %bb.9:
	mov	x26, #0
	mov	w27, w22
Lloh32:
	adrp	x22, l_.str@PAGE
Lloh33:
	add	x22, x22, l_.str@PAGEOFF
Lloh34:
	adrp	x23, l_.str.1@PAGE
Lloh35:
	add	x23, x23, l_.str.1@PAGEOFF
Lloh36:
	adrp	x24, l_.str.2@PAGE
Lloh37:
	add	x24, x24, l_.str.2@PAGEOFF
	b	LBB0_11
LBB0_10:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x28, x26, #1
	sbfiz	x25, x25, #2, #32
	ldr	s0, [x19, x25]
	sshll.2d	v0, v0, #0
	scvtf	d0, d0
	ldr	s1, [x19, x8, lsl #2]
	sshll.2d	v1, v1, #0
	scvtf	d1, d1
	bl	_pow
	fcvtzs	w8, d0
	str	w8, [x19, x25]
	str	w25, [x20, x28, lsl #2]
	mov	x26, x28
	cmp	x26, x27
	b.eq	LBB0_19
LBB0_11:                                ; =>This Loop Header: Depth=1
                                        ;     Child Loop BB0_14 Depth 2
                                        ;     Child Loop BB0_17 Depth 2
	ldr	x0, [x21, x26, lsl #3]
	mov	x1, x22
	bl	_strcmp
	cbz	w0, LBB0_13
; %bb.12:                               ;   in Loop: Header=BB0_11 Depth=1
	add	x26, x26, #1
	cmp	x26, x27
	b.ne	LBB0_11
	b	LBB0_19
LBB0_13:                                ;   in Loop: Header=BB0_11 Depth=1
	ldrsw	x8, [x20, x26, lsl #2]
	ldr	w9, [x20, x8, lsl #2]
	cmp	w9, w8
	b.eq	LBB0_16
LBB0_14:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	str	w9, [x20, x26, lsl #2]
	sxtw	x8, w9
	ldr	w10, [x20, w9, sxtw #2]
	mov	x9, x10
	cmp	w10, w8
	b.ne	LBB0_14
; %bb.15:                               ;   in Loop: Header=BB0_11 Depth=1
                                        ; kill: def $w8 killed $w8 killed $x8 def $x8
LBB0_16:                                ;   in Loop: Header=BB0_11 Depth=1
	add	x8, x20, x26, lsl #2
	ldrsw	x9, [x8, #4]
LBB0_17:                                ;   Parent Loop BB0_11 Depth=1
                                        ; =>  This Inner Loop Header: Depth=2
	ldr	w10, [x20, x9, lsl #2]
	cmp	w