# problem10/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	testl	%esi, %esi
	jle	LBB0_13
## %bb.1:
	movl	%esi, %r14d
	movq	%rdi, %rbx
	movl	%esi, %r15d
	leaq	(,%r15,4), %rdi
	callq	_malloc
	testq	%rax, %rax
	je	LBB0_13
## %bb.2:
	movl	(%rbx), %edx
	movl	%edx, (%rax)
	cmpl	$1, %r14d
	je	LBB0_18
## %bb.3:
	leaq	-1(%r15), %r9
	addq	$-2, %r15
	movl	%r9d, %r8d
	andl	$3, %r8d
	movl	$1, %esi
	cmpq	$3, %r15
	jb	LBB0_15
## %bb.4:
	andq	$-4, %r9
	xorl	%esi, %esi
	jmp	LBB0_6
	.p2align	4, 0x90
LBB0_5:                                 ##   in Loop: Header=BB0_6 Depth=1
	movl	%edx, 16(%rax,%rsi,4)
	addq	$4, %rsi
	cmpq	%rsi, %r9
	je	LBB0_14
LBB0_6:                                 ## =>This Inner Loop Header: Depth=1
	movl	4(%rbx,%rsi,4), %ecx
	cmpl	%edx, %ecx
	cmovgl	%ecx, %edx
	movl	%edx, 4(%rax,%rsi,4)
	movl	8(%rbx,%rsi,4), %ecx
	cmpl	%edx, %ecx
	jg	LBB0_8
## %bb.7:                               ##   in Loop: Header=BB0_6 Depth=1
	movl	%edx, %ecx
LBB0_8:                                 ##   in Loop: Header=BB0_6 Depth=1
	movl	%ecx, 8(%rax,%rsi,4)
	movl	12(%rbx,%rsi,4), %edi
	cmpl	%ecx, %edi
	jg	LBB0_10
## %bb.9:                               ##   in Loop: Header=BB0_6 Depth=1
	movl	%ecx, %edi
LBB0_10:                                ##   in Loop: Header=BB0_6 Depth=1
	movl	%edi, 12(%rax,%rsi,4)
	movl	16(%rbx,%rsi,4), %edx
	cmpl	%edi, %edx
	jg	LBB0_5
## %bb.11:                              ##   in Loop: Header=BB0_6 Depth=1
	movl	%edi, %edx
	jmp	LBB0_5
LBB0_13:
	xorl	%eax, %eax
LBB0_18:
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
LBB0_14:
	incq	%rsi
LBB0_15:
	testq	%r8, %r8
	je	LBB0_18
## %bb.16:
	leaq	(%rax,%rsi,4), %rdi
	leaq	(%rbx,%rsi,4), %rsi
	xorl	%ebx, %ebx
	.p2align	4, 0x90
LBB0_17:                                ## =>This Inner Loop Header: Depth=1
	movl	(%rsi,%rbx,4), %ecx
	cmpl	%edx, %ecx
	cmovgl	%ecx, %edx
	movl	%edx, (%rdi,%rbx,4)
	incq	%rbx
	cmpq	%rbx, %r8
	jne	LBB0_17
	jmp	LBB0_18
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
