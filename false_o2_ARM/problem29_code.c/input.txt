# problem29/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	testl	%esi, %esi
	jle	LBB0_6
## %bb.1:
	movq	%rdi, %r15
	movl	%esi, %r12d
	xorl	%ebx, %ebx
	xorl	%r14d, %r14d
	.p2align	4, 0x90
LBB0_2:                                 ## =>This Inner Loop Header: Depth=1
	movq	(%r15,%rbx,8), %rdi
	callq	_strlen
	addl	%eax, %r14d
	incq	%rbx
	cmpq	%rbx, %r12
	jne	LBB0_2
## %bb.3:
	incl	%r14d
	movslq	%r14d, %rdi
	callq	_malloc
	testq	%rax, %rax
	je	LBB0_9
## %bb.4:
	movq	%rax, %r14
	movb	$0, (%rax)
	xorl	%ebx, %ebx
	.p2align	4, 0x90
LBB0_5:                                 ## =>This Inner Loop Header: Depth=1
	movq	(%r15,%rbx,8), %rsi
	movq	%r14, %rdi
	callq	_strcat
	incq	%rbx
	cmpq	%rbx, %r12
	jne	LBB0_5
	jmp	LBB0_10
LBB0_6:
	movl	$1, %edi
	callq	_malloc
	testq	%rax, %rax
	je	LBB0_9
## %bb.7:
	movq	%rax, %r14
	movb	$0, (%rax)
	jmp	LBB0_10
LBB0_9:
	xorl	%r14d, %r14d
LBB0_10:
	movq	%r14, %rax
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
