# problem107/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r14
	pushq	%rbx
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	movl	%edi, %r14d
	movslq	%edi, %rbx
	leaq	(,%rbx,4), %rdi
	callq	_malloc
	testl	%ebx, %ebx
	jle	LBB0_5
## %bb.1:
	movl	%r14d, %r8d
	cmpl	$1, %r14d
	jne	LBB0_6
## %bb.2:
	xorl	%edx, %edx
	movl	$1, %esi
	movl	$1, %edi
	jmp	LBB0_3
LBB0_6:
	movl	%r8d, %r9d
	andl	$-2, %r9d
	negq	%r9
	xorl	%edx, %edx
	movl	$1, %esi
	movl	$1, %edi
	movl	$2, %ebx
	.p2align	4, 0x90
LBB0_7:                                 ## =>This Inner Loop Header: Depth=1
	leal	-1(%rbx), %ecx
	addl	%ebx, %edx
	decl	%edx
	movl	%edx, -4(%rax,%rdi,4)
	addl	%ebx, %edx
	imull	%ebx, %esi
	imull	%ecx, %esi
	movl	%esi, (%rax,%rdi,4)
	addl	$2, %ebx
	leaq	(%r9,%rdi), %rcx
	addq	$2, %rcx
	addq	$2, %rdi
	cmpq	$1, %rcx
	jne	LBB0_7
LBB0_3:
	testb	$1, %r8b
	je	LBB0_5
## %bb.4:
	addl	%edi, %edx
	imull	%edi, %esi
	testb	$1, %dil
	cmovnel	%edx, %esi
	movl	%esi, -4(%rax,%rdi,4)
LBB0_5:
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
