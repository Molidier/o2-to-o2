# problem145/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$232, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movq	%rsi, %r12
	movq	%rdi, %r15
	movq	___stack_chk_guard@GOTPCREL(%rip), %rax
	movq	(%rax), %rax
	movq	%rax, -48(%rbp)
	movb	(%rdi), %cl
	xorl	%eax, %eax
	cmpb	$47, %cl
	je	LBB0_3
## %bb.1:
	xorl	%eax, %eax
	.p2align	4, 0x90
LBB0_2:                                 ## =>This Inner Loop Header: Depth=1
	movb	%cl, -160(%rbp,%rax)
	movzbl	1(%r15,%rax), %ecx
	incq	%rax
	cmpb	$47, %cl
	jne	LBB0_2
LBB0_3:
	movl	%eax, %r13d
	movb	$0, -160(%rbp,%r13)
	leaq	-160(%rbp), %rdi
	callq	_atoi
	movl	%eax, %r14d
	movb	1(%r13,%r15), %al
	xorl	%ebx, %ebx
	testb	%al, %al
	je	LBB0_4
## %bb.5:
	leaq	(%r15,%r13), %rdx
	addq	$2, %rdx
	xorl	%ecx, %ecx
	.p2align	4, 0x90
LBB0_6:                                 ## =>This Inner Loop Header: Depth=1
	movb	%al, -272(%rbp,%rcx)
	movzbl	(%rdx,%rcx), %eax
	incq	%rcx
	testb	%al, %al
	jne	LBB0_6
## %bb.7:
	movl	%ecx, %eax
	jmp	LBB0_8
LBB0_4:
	xorl	%eax, %eax
LBB0_8:
	movb	$0, -272(%rbp,%rax)
	leaq	-272(%rbp), %rdi
	callq	_atoi
	movl	%eax, %r15d
	movb	(%r12), %al
	cmpb	$47, %al
	je	LBB0_11
## %bb.9:
	xorl	%ebx, %ebx
	.p2align	4, 0x90
LBB0_10:                                ## =>This Inner Loop Header: Depth=1
	movb	%al, -160(%rbp,%rbx)
	movzbl	1(%r12,%rbx), %eax
	incq	%rbx
	cmpb	$47, %al
	jne	LBB0_10
LBB0_11:
	movl	%ebx, %ebx
	movb	$0, -160(%rbp,%rbx)
	leaq	-160(%rbp), %rdi
	callq	_atoi
	movl	%eax, %r13d
	movb	1(%rbx,%r12), %al
	testb	%al, %al
	je	LBB0_12
## %bb.13:
	leaq	(%rbx,%r12), %rdx
	addq	$2, %rdx
	xorl	%ecx, %ecx
	.p2align	4, 0x90
LBB0_14:                                ## =>This Inner Loop Header: Depth=1
	movb	%al, -272(%rbp,%rcx)
	movzbl	(%rdx,%rcx), %eax
	incq	%rcx
	testb	%al, %al
	jne	LBB0_14
## %bb.15:
	movl	%ecx, %eax
	jmp	LBB0_16
LBB0_12:
	xorl	%eax, %eax
LBB0_16:
	movb	$0, -272(%rbp,%rax)
	leaq	-272(%rbp), %rdi
	callq	_atoi
	movl	%eax, %ecx
	imull	%r14d, %r13d
	imull	%r15d, %ecx
	movl	%r13d, %eax
	cltd
	idivl	%ecx
	xorl	%eax, %eax
	testl	%edx, %edx
	sete	%cl
	movq	___stack_chk_guard@GOTPCREL(%rip), %rdx
	movq	(%rdx), %rdx
	cmpq	-48(%rbp), %rdx
	jne	LBB0_18
## %bb.17:
	movb	%cl, %al
	addq	$232, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
LBB0_18:
	callq	___stack_chk_fail
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
