# problem148/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ; -- Begin function func0
	.p2align	2
_func0:                                 ; @func0
	.cfi_startproc
; %bb.0:
	stp	x26, x25, [sp, #-80]!           ; 16-byte Folded Spill
	.cfi_def_cfa_offset 80
	stp	x24, x23, [sp, #16]             ; 16-byte Folded Spill
	stp	x22, x21, [sp, #32]             ; 16-byte Folded Spill
	stp	x20, x19, [sp, #48]             ; 16-byte Folded Spill
	stp	x29, x30, [sp, #64]             ; 16-byte Folded Spill
	add	x29, sp, #64
	.cfi_def_cfa w29, 16
	.cfi_offset w30, -8
	.cfi_offset w29, -16
	.cfi_offset w19, -24
	.cfi_offset w20, -32
	.cfi_offset w21, -40
	.cfi_offset w22, -48
	.cfi_offset w23, -56
	.cfi_offset w24, -64
	.cfi_offset w25, -72
	.cfi_offset w26, -80
	mov	x22, x0
	sbfiz	x0, x22, #2, #32
	bl	_malloc
	mov	x19, x0
	add	w23, w22, #1
	mov	x8, x23
	sbfiz	x21, x8, #3, #32
	mov	x0, x21
	bl	_malloc
	mov	x20, x0
	mov	x0, x21
	bl	_malloc
	mov	x21, x0
	tbnz	w22, #31, LBB0_4
; %bb.1:
	mov	x24, x23
	mov	x25, x20
	mov	x26, x21
LBB0_2:                                 ; =>This Inner Loop Header: Depth=1
	mov	w0, #3
	mov	w1, #4
	bl	_calloc
	str	x0, [x25], #8
	mov	w0, #3
	mov	w1, #4
	bl	_calloc
	str	x0, [x26], #8
	subs	x24, x24, #1
	b.ne	LBB0_2
; %bb.3:
	ldr	x9, [x20]
	ldr	x8, [x21]
	b	LBB0_5
LBB0_4:
                                        ; implicit-def: $x8
                                        ; implicit-def: $x9
LBB0_5:
	str	wzr, [x9, #8]
	movi.2d	v0, #0000000000000000
	str	d0, [x9]
	str	wzr, [x8, #8]
	str	d0, [x8]
	cmp	w22, #1
	b.lt	LBB0_11
; %bb.6:
	mov	x14, #0
	mov	w10, #0
	add	x11, x20, #8
	sub	x12, x23, #1
	mov	w13, #21846
	movk	w13, #21845, lsl #16
	mov	x15, x9
LBB0_7:                                 ; =>This Inner Loop Header: Depth=1
	add	x16, x14, #1
	madd	w17, w16, w16, w10
	smull	x0, w17, w13
	lsr	x1, x0, #63
	lsr	x0, x0, #32
	add	w0, w0, w1
	add	w0, w0, w0, lsl #1
	sub	w17, w17, w0
	str	w17, [x19, x14, lsl #2]
	ldr	x0, [x11, x14, lsl #3]
	ldr	w14, [x15]
	str	w14, [x0]
	ldr	w14, [x15, #4]
	str	w14, [x0, #4]
	ldr	w14, [x15, #8]
	str	w14, [x0, #8]
	sbfiz	x14, x17, #2, #32
	ldr	w15, [x0, x14]
	add	w15, w15, #1
	str	w15, [x0, x14]
	sub	w10, w10, #1
	mov	x14, x16
	mov	x15, x0
	cmp	x12, x16
	b.ne	LBB0_7
; %bb.8:
	add	x10, x20, #8
	add	x11, x21, #8
	sub	x12, x23, #2
	mov	w13, #21846
	movk	w13, #21845, lsl #16
	mov	x14, x19
	mov	x16, x9
	mov	x17, x8
LBB0_9:                                 ; =>This Inner Loop Header: Depth=1
	ldr	x15, [x11]
	ldr	w0, [x17]
	str	w0, [x15]
	ldr	w0, [x17, #4]
	str	w0, [x15, #4]
	ldr	w17, [x17, #8]
	str	w17, [x15, #8]
	ldrsw	x17, [x14]
	ldr	w0, [x16]
	mul	x1, x17, x13
	lsr	x2, x1, #63
	lsr	x1, x1, #32
	add	w1, w1, w2
	add	w1, w1, w1, lsl #1
	sub	w1, w17, w1
	sbfiz	x1, x1, #2, #32
	ldr	w2, [x15, x1]
	add	w0, w2, w0
	str	w0, [x15, x1]
	add	w0, w17, #1
	smull	x1, w0, w13
	lsr	x2, x1, #63
	lsr	x1, x1, #32
	add	w1, w1, w2
	add	w1, w1, w1, lsl #1
	sub	w0, w0, w1
	sbfiz	x0, x0, #2, #32
	ldr	w1, [x15, x0]
	ldr	w2, [x16, #4]
	add	w1, w1, w2
	str	w1, [x15, x0]
	ldr	w16, [x16, #8]
	add	w17, w17, #2
	smull	x0, w17, w13
	lsr	x1, x0, #63
	lsr	x0, x0, #32
	add	w0, w0, w1
	add	w0, w0, w0, lsl #1
	sub	w17, w17, w0
	sbfiz	x17, x17, #2, #32
	ldr	w0, [x15, x17]
	add	w16, w0, w16
	str	w16, [x15, x17]
	cbz	x12, LBB0_11
; %bb.10:                               ;   in Loop: Header=BB0_9 Depth=1
	ldr	x16, [x10], #8
	add	x14, x14, #4
	add	x11, x11, #8
	sub	x12, x12, #1
	mov	x17, x15
	b	LBB0_9
LBB0_11:
	tbnz	w22, #31, LBB0_15
; %bb.12:
	ldr	w10, [x8]
	str	w10, [x9]
	str	wzr, [x8]
	ldr	w10, [x8, #4]
	str	w10, [x9, #4]
	str	wzr, [x8, #4]
	ldr	w10, [x8, #8]
	str	w10, [x9, #8]
	str	wzr, [x8, #8]
	cbz	w22, LBB0_15
; %bb.13:
	sub	x10, x23, #1
	add	x11, x21, #8
	add	x12, x20, #8
LBB0_14:                                ; =>This Inner Loop Header: Depth=1
	ldr	x13, [x11], #8
	ldr	x14, [x12], #8
	ldr	w15, [x13]
	str	w15, [x14]
	str	wzr, [x13]
	ldr	w15, [x13, #4]
	str	w15, [x14, #4]
	str	wzr, [x13, #4]
	ldr	w15, [x13, #8]
	str	w15, [x14, #8]
	str	wzr, [x13, #8]
	subs	x10, x10, #1
	b.ne	LBB0_14
LBB0_15:
	cmp	w22, #1
	b.lt	LBB0_19
; %bb.16:
	add	x10, x20, #8
	sub	x11, x23, #2
	add	x12, x21, #8
	mov	w13, #21846
	movk	w13, #21845, lsl #16
	mov	x14, x19
	mov	x16, x9
	mov	x17, x8
LBB0_17:                                ; =>This Inner Loop Header: Depth=1
	ldr	x15, [x12]
	ldr	w0, [x17]
	str	w0, [x15]
	ldr	w0, [x17, #4]
	str	w0, [x15, #4]
	ldr	w17, [x17, #8]
	str	w17, [x15, #8]
	ldrsw	x17, [x14]
	ldr	w0, [x16]
	mul	x1, x17, x13
	lsr	x2, x1, #63
	lsr	x1, x1, #32
	add	w1, w1, w2
	add	w1, w1, w1, lsl #1
	sub	w1, w17, w1
	sbfiz	x1, x1, #2, #32
	ldr	w2, [x15, x1]
	add	w0, w2, w0
	str	w0, [x15, x1]
	add	w0, w17, #1
	smull	x1, w0, w13
	lsr	x2, x1, #63
	lsr	x1, x1, #32
	add	w1, w1, w2
	add	w1, w1, w1, lsl #1
	sub	w0, w0, w1
	sbfiz	x0, x0, #2, #32
	ldr	w1, [x15, x0]
	ldr	w2, [x16, #4]
	add	w1, w1, w2
	str	w1, [x15, x0]
	ldr	w16, [x16, #8]
	add	w17, w17, #2
	smull	x0, w17, w13
	lsr	x1, x0, #63
	lsr	x0, x0, #32
	add	w0, w0, w1
	add	w0, w0, w0, lsl #1
	sub	w17, w17, w0
	sbfiz	x17, x17, #2, #32
	ldr	w0, [x15, x17]
	add	w16, w0, w16
	str	w16, [x15, x17]
	cbz	x11, LBB0_19
; %bb.18:                               ;   in Loop: Header=BB0_17 Depth=1
	ldr	x16, [x10], #8
	sub	x11, x11, #1
	add	x12, x12, #8
	add	x14, x14, #4
	mov	x17, x15
	b	LBB0_17
LBB0_19:
	sxtw	x10, w22
	tbnz	w22, #31, LBB0_25
; %bb.20:
	ldr	w11, [x8]
	str	w11, [x9]
	str	wzr, [x8]
	ldr	w11, [x8, #4]
	str	w11, [x9, #4]
	str	wzr, [x8, #4]
	ldr	w11, [x8, #8]
	str	w11, [x9, #8]
	str	wzr, [x8, #8]
	cbz	w22, LBB0_23
; %bb.21:
	sub	x8, x23, #1
	add	x9, x21, #8
	add	x11, x20, #8
LBB0_22:                                ; =>This Inner Loop Header: Depth=1
	ldr	x12, [x9], #8
	ldr	x13, [x11], #8
	ldr	w14, [x12]
	str	w14, [x13]
	str	wzr, [x12]
	ldr	w14, [x12, #4]
	str	w14, [x13, #4]
	str	wzr, [x12, #4]
	ldr	w14, [x12, #8]
	str	w14, [x13, #8]
	str	wzr, [x12, #8]
	subs	x8, x8, #1
	b.ne	LBB0_22
LBB0_23:
	ldr	x8, [x20, x10, lsl #3]
	ldr	w22, [x8]
	mov	x24, x20
	mov	x25, x21
LBB0_24:                                ; =>This Inner Loop Header: Depth=1
	ldr	x0, [x24], #8
	bl	_free
	ldr	x0, [x25], #8
	bl	_free
	subs	x23, x23, #1
	b.ne	LBB0_24
	b	LBB0_26
LBB0_25:
	ldr	x8, [x20, x10, lsl #3]
	ldr	w22, [x8]
LBB0_26:
	mov	x0, x20
	bl	_free
	mov	x0, x21
	bl	_free
	mov	x0, x19
	bl	_free
	mov	x0, x22
	ldp	x29, x30, [sp, #64]             ; 16-byte Folded Reload
	ldp	x20, x19, [sp, #48]             ; 16-byte Folded Reload
	ldp	x22, x21, [sp, #32]             ; 16-byte Folded Reload
	ldp	x24, x23, [sp, #16]             ; 16-byte Folded Reload
	ldp	x26, x25, [sp], #80             ; 16-byte Folded Reload
	ret
	.cfi_endproc
                                        ; -- End function
.subsections_via_symbols
