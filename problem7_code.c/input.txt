# problem7/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movq	%rsi, %r14
	movq	%rdi, %rbx
	xorl	%ecx, %ecx
	xorl	%r12d, %r12d
	xorl	%r15d, %r15d
	xorl	%eax, %eax
	jmp	LBB0_1
	.p2align	4, 0x90
LBB0_3:                                 ##   in Loop: Header=BB0_1 Depth=1
	testb	%dl, %dl
	je	LBB0_4
LBB0_8:                                 ##   in Loop: Header=BB0_1 Depth=1
	incq	%rbx
LBB0_1:                                 ## =>This Inner Loop Header: Depth=1
	movzbl	(%rbx), %edx
	cmpb	$40, %dl
	je	LBB0_5
## %bb.2:                               ##   in Loop: Header=BB0_1 Depth=1
	cmpb	$41, %dl
	jne	LBB0_3
## %bb.6:                               ##   in Loop: Header=BB0_1 Depth=1
	decl	%ecx
	jne	LBB0_8
## %bb.7:                               ##   in Loop: Header=BB0_1 Depth=1
	movslq	%r15d, %r13
	incl	%r15d
	leaq	4(,%r13,4), %rsi
	movq	%rax, %rdi
	callq	_realloc
	movl	%r12d, (%rax,%r13,4)
	xorl	%ecx, %ecx
	xorl	%r12d, %r12d
	jmp	LBB0_8
	.p2align	4, 0x90
LBB0_5:                                 ##   in Loop: Header=BB0_1 Depth=1
	cmpl	%r12d, %ecx
	leal	1(%rcx), %ecx
	cmovgel	%ecx, %r12d
                                        ## kill: def $ecx killed $ecx def $rcx
	incq	%rbx
	jmp	LBB0_1
LBB0_4:
	movl	%r15d, (%r14)
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
