# problem124/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movq	%rdx, %r14
	movq	%rsi, %rax
	movl	$1, (%rdx)
	movl	$1, (%rsi)
	cmpl	$1, %edi
	jne	LBB0_1
LBB0_6:
	cmpl	$2, (%r14)
	jl	LBB0_13
## %bb.7:
	movl	$1, %ecx
	jmp	LBB0_8
	.p2align	4, 0x90
LBB0_12:                                ##   in Loop: Header=BB0_8 Depth=1
	movslq	%esi, %rsi
	movl	%edx, (%rax,%rsi,4)
	incq	%rcx
	movslq	(%r14), %rdx
	cmpq	%rdx, %rcx
	jge	LBB0_13
LBB0_8:                                 ## =>This Loop Header: Depth=1
                                        ##     Child Loop BB0_9 Depth 2
	movl	(%rax,%rcx,4), %edx
	movq	%rcx, %rsi
	.p2align	4, 0x90
LBB0_9:                                 ##   Parent Loop BB0_8 Depth=1
                                        ## =>  This Inner Loop Header: Depth=2
	leaq	-1(%rsi), %rdi
	movl	%edi, %ebx
	movl	(%rax,%rbx,4), %ebx
	cmpl	%edx, %ebx
	jle	LBB0_12
## %bb.10:                              ##   in Loop: Header=BB0_9 Depth=2
	movl	%ebx, (%rax,%rsi,4)
	leaq	1(%rdi), %rbx
	movq	%rdi, %rsi
	cmpq	$1, %rbx
	jg	LBB0_9
## %bb.11:                              ##   in Loop: Header=BB0_8 Depth=1
	xorl	%esi, %esi
	jmp	LBB0_12
LBB0_13:
	addq	$8, %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
LBB0_1:
	movl	%edi, %ebx
	movl	$10, %r15d
	jmp	LBB0_2
	.p2align	4, 0x90
LBB0_14:                                ##   in Loop: Header=BB0_2 Depth=1
	movl	%ebx, %ecx
	shrl	$31, %ecx
	addl	%ebx, %ecx
	sarl	%ecx
	movl	%ecx, %ebx
LBB0_15:                                ##   in Loop: Header=BB0_2 Depth=1
	cmpl	$1, %ebx
	je	LBB0_6
LBB0_2:                                 ## =>This Inner Loop Header: Depth=1
	movl	%ebx, %ecx
	andl	$-2147483647, %ecx              ## imm = 0x80000001
	cmpl	$1, %ecx
	jne	LBB0_14
## %bb.3:                               ##   in Loop: Header=BB0_2 Depth=1
	movl	(%r14), %ecx
	cmpl	%r15d, %ecx
	jl	LBB0_5
## %bb.4:                               ##   in Loop: Header=BB0_2 Depth=1
	addl	%r15d, %r15d
	movslq	%r15d, %rsi
	shlq	$2, %rsi
	movq	%rax, %rdi
	callq	_realloc
	movl	(%r14), %ecx
LBB0_5:                                 ##   in Loop: Header=BB0_2 Depth=1
	leal	1(%rcx), %edx
	movl	%edx, (%r14)
	movslq	%ecx, %rcx
	movl	%ebx, (%rax,%rcx,4)
	leal	(%rbx,%rbx,2), %ebx
	incl	%ebx
	jmp	LBB0_15
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
