# problem142/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.section	__TEXT,__literal16,16byte_literals
	.p2align	4                               ## -- Begin function func0
LCPI0_0:
	.byte	208                             ## 0xd0
	.byte	208                             ## 0xd0
	.byte	208                             ## 0xd0
	.byte	208                             ## 0xd0
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
LCPI0_1:
	.byte	10                              ## 0xa
	.byte	10                              ## 0xa
	.byte	10                              ## 0xa
	.byte	10                              ## 0xa
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
LCPI0_2:
	.long	1                               ## 0x1
	.long	1                               ## 0x1
	.long	1                               ## 0x1
	.long	1                               ## 0x1
LCPI0_3:
	.byte	46                              ## 0x2e
	.byte	46                              ## 0x2e
	.byte	46                              ## 0x2e
	.byte	46                              ## 0x2e
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.space	1
	.section	__TEXT,__text,regular,pure_instructions
	.globl	_func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movq	%rdi, %r14
	callq	_strlen
	movq	%rax, %rbx
	leaq	L_.str(%rip), %r15
	cmpl	$5, %ebx
	jl	LBB0_13
## %bb.1:
	movb	(%r14), %r13b
	cmpb	$65, %r13b
	jl	LBB0_13
## %bb.2:
	leal	-91(%r13), %eax
	cmpb	$36, %al
	ja	LBB0_4
## %bb.3:
	movzbl	%al, %eax
	movabsq	$133143986239, %rcx             ## imm = 0x1F0000003F
	btq	%rax, %rcx
	jae	LBB0_4
LBB0_13:
	movq	%r15, %rax
	addq	$8, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
LBB0_4:
	movslq	%ebx, %rax
	leaq	(%r14,%rax), %r12
	addq	$-4, %r12
	leaq	L_.str.1(%rip), %rsi
	movq	%r12, %rdi
	callq	_strcmp
	testl	%eax, %eax
	je	LBB0_7
## %bb.5:
	leaq	L_.str.2(%rip), %rsi
	movq	%r12, %rdi
	callq	_strcmp
	testl	%eax, %eax
	je	LBB0_7
## %bb.6:
	leaq	L_.str.3(%rip), %rsi
	movq	%r12, %rdi
	callq	_strcmp
	testl	%eax, %eax
	jne	LBB0_13
LBB0_7:
	movl	%ebx, %eax
	leal	-48(%r13), %ecx
	xorl	%edi, %edi
	cmpb	$10, %cl
	setb	%dil
	xorl	%ebx, %ebx
	cmpb	$46, %r13b
	sete	%bl
	cmpq	$1, %rax
	je	LBB0_12
## %bb.8:
	leaq	-1(%rax), %rdx
	movl	$1, %ecx
	cmpq	$8, %rdx
	jb	LBB0_14
## %bb.9:
	movq	%rdx, %rsi
	andq	$-8, %rsi
	leaq	1(%rsi), %rcx
	movd	%ebx, %xmm13
	movd	%edi, %xmm2
	pxor	%xmm0, %xmm0
	xorl	%edi, %edi
	movdqa	LCPI0_0(%rip), %xmm8            ## xmm8 = <208,208,208,208,u,u,u,u,u,u,u,u,u,u,u,u>
	movdqa	LCPI0_1(%rip), %xmm9            ## xmm9 = <10,10,10,10,u,u,u,u,u,u,u,u,u,u,u,u>
	pcmpeqd	%xmm10, %xmm10
	movdqa	LCPI0_2(%rip), %xmm12           ## xmm12 = [1,1,1,1]
	movdqa	LCPI0_3(%rip), %xmm11           ## xmm11 = <46,46,46,46,u,u,u,u,u,u,u,u,u,u,u,u>
	pxor	%xmm7, %xmm7
LBB0_10:                                ## =>This Inner Loop Header: Depth=1
	movd	1(%r14,%rdi), %xmm1             ## xmm1 = mem[0],zero,zero,zero
	movd	5(%r14,%rdi), %xmm6             ## xmm6 = mem[0],zero,zero,zero
	movdqa	%xmm1, %xmm3
	paddb	%xmm8, %xmm3
	movdqa	%xmm6, %xmm4
	paddb	%xmm8, %xmm4
	movdqa	%xmm3, %xmm5
	pmaxub	%xmm9, %xmm5
	pcmpeqb	%xmm3, %xmm5
	pxor	%xmm10, %xmm5
	pmovzxbd	%xmm5, %xmm3                    ## xmm3 = xmm5[0],zero,zero,zero,xmm5[1],zero,zero,zero,xmm5[2],zero,zero,zero,xmm5[3],zero,zero,zero
	pand	%xmm12, %xmm3
	paddd	%xmm3, %xmm2
	movdqa	%xmm4, %xmm3
	pmaxub	%xmm9, %xmm3
	pcmpeqb	%xmm4, %xmm3
	pxor	%xmm10, %xmm3
	pmovzxbd	%xmm3, %xmm3                    ## xmm3 = xmm3[0],zero,zero,zero,xmm3[1],zero,zero,zero,xmm3[2],zero,zero,zero,xmm3[3],zero,zero,zero
	pand	%xmm12, %xmm3
	paddd	%xmm3, %xmm7
	pcmpeqb	%xmm11, %xmm1
	pmovzxbd	%xmm1, %xmm1                    ## xmm1 = xmm1[0],zero,zero,zero,xmm1[1],zero,zero,zero,xmm1[2],zero,zero,zero,xmm1[3],zero,zero,zero
	pand	%xmm12, %xmm1
	paddd	%xmm1, %xmm13
	pcmpeqb	%xmm11, %xmm6
	pmovzxbd	%xmm6, %xmm1                    ## xmm1 = xmm6[0],zero,zero,zero,xmm6[1],zero,zero,zero,xmm6[2],zero,zero,zero,xmm6[3],zero,zero,zero
	pand	%xmm12, %xmm1
	paddd	%xmm1, %xmm0
	addq	$8, %rdi
	cmpq	%rdi, %rsi
	jne	LBB0_10
## %bb.11:
	paddd	%xmm2, %xmm7
	pshufd	$238, %xmm7, %xmm1              ## xmm1 = xmm7[2,3,2,3]
	paddd	%xmm7, %xmm1
	pshufd	$85, %xmm1, %xmm2               ## xmm2 = xmm1[1,1,1,1]
	paddd	%xmm1, %xmm2
	movd	%xmm2, %edi
	paddd	%xmm13, %xmm0
	pshufd	$238, %xmm0, %xmm1              ## xmm1 = xmm0[2,3,2,3]
	paddd	%xmm0, %xmm1
	pshufd	$85, %xmm1, %xmm0               ## xmm0 = xmm1[1,1,1,1]
	paddd	%xmm1, %xmm0
	movd	%xmm0, %ebx
	cmpq	%rsi, %rdx
	je	LBB0_12
LBB0_14:                                ## =>This Inner Loop Header: Depth=1
	movzbl	(%r14,%rcx), %edx
	leal	-48(%rdx), %esi
	cmpb	$10, %sil
	adcl	$0, %edi
	xorl	%esi, %esi
	cmpb	$46, %dl
	sete	%sil
	addl	%esi, %ebx
	incq	%rcx
	cmpq	%rcx, %rax
	jne	LBB0_14
LBB0_12:
	cmpl	$1, %ebx
	leaq	L_.str(%rip), %rax
	leaq	L_.str.4(%rip), %r15
	cmovneq	%rax, %r15
	cmpl	$4, %edi
	cmovaeq	%rax, %r15
	jmp	LBB0_13
	.cfi_endproc
                                        ## -- End function
	.section	__TEXT,__cstring,cstring_literals
L_.str:                                 ## @.str
	.asciz	"No"

L_.str.1:                               ## @.str.1
	.asciz	".txt"

L_.str.2:                               ## @.str.2
	.asciz	".exe"

L_.str.3:                               ## @.str.3
	.asciz	".dll"

L_.str.4:                               ## @.str.4
	.asciz	"Yes"

.subsections_via_symbols
