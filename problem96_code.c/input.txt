# problem96/code.c
	.section	__TEXT,__text,regular,pure_instructions
	.build_version macos, 13, 0	sdk_version 13, 3
	.globl	_func0                          ## -- Begin function func0
	.p2align	4, 0x90
_func0:                                 ## @func0
	.cfi_startproc
## %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	testl	%esi, %esi
	je	LBB0_20
## %bb.1:
	jle	LBB0_17
## %bb.2:
	movl	%esi, %eax
	movq	%rax, -48(%rbp)                 ## 8-byte Spill
	xorl	%ecx, %ecx
	movq	__DefaultRuneLocale@GOTPCREL(%rip), %r15
	movl	$1, %esi
	movl	$4096, %r8d                     ## imm = 0x1000
	xorl	%r14d, %r14d
	xorl	%r13d, %r13d
	movq	%rdi, -56(%rbp)                 ## 8-byte Spill
	jmp	LBB0_4
	.p2align	4, 0x90
LBB0_3:                                 ##   in Loop: Header=BB0_4 Depth=1
	movq	-64(%rbp), %rcx                 ## 8-byte Reload
	incq	%rcx
	movl	$1, %eax
	cmpq	-48(%rbp), %rcx                 ## 8-byte Folded Reload
	movq	-56(%rbp), %rdi                 ## 8-byte Reload
	je	LBB0_21
LBB0_4:                                 ## =>This Loop Header: Depth=1
                                        ##     Child Loop BB0_6 Depth 2
	movq	%rcx, -64(%rbp)                 ## 8-byte Spill
	movq	%rcx, %rax
	shlq	$4, %rax
	movq	(%rdi,%rax), %r12
	movb	(%r12), %cl
	testb	%cl, %cl
	je	LBB0_3
## %bb.5:                               ##   in Loop: Header=BB0_4 Depth=1
	incq	%r12
	.p2align	4, 0x90
LBB0_6:                                 ##   Parent Loop BB0_4 Depth=1
                                        ## =>  This Inner Loop Header: Depth=2
	movzbl	%cl, %ebx
	testb	%bl, %bl
	js	LBB0_9
## %bb.7:                               ##   in Loop: Header=BB0_6 Depth=2
	movl	60(%r15,%rbx,4), %eax
	testl	$256, %eax                      ## imm = 0x100
	je	LBB0_20
## %bb.8:                               ##   in Loop: Header=BB0_6 Depth=2
	testl	$32768, %eax                    ## imm = 0x8000
	cmovnel	%esi, %r14d
	jmp	LBB0_12
	.p2align	4, 0x90
LBB0_9:                                 ##   in Loop: Header=BB0_6 Depth=2
	movl	$256, %esi                      ## imm = 0x100
	movl	%ebx, %edi
	callq	___maskrune
	testl	%eax, %eax
	je	LBB0_20
## %bb.10:                              ##   in Loop: Header=BB0_6 Depth=2
	movl	$32768, %esi                    ## imm = 0x8000
	movl	%ebx, %edi
	callq	___maskrune
	movzbl	-1(%r12), %ecx
	testl	%eax, %eax
	movl	$1, %esi
	cmovnel	%esi, %r14d
	testb	%cl, %cl
	js	LBB0_15
## %bb.11:                              ##   in Loop: Header=BB0_6 Depth=2
	movl	$4096, %r8d                     ## imm = 0x1000
LBB0_12:                                ##   in Loop: Header=BB0_6 Depth=2
	movzbl	%cl, %eax
	movl	60(%r15,%rax,4), %eax
	andl	%r8d, %eax
LBB0_13:                                ##   in Loop: Header=BB0_6 Depth=2
	testl	%eax, %eax
	cmovnel	%esi, %r13d
	leal	(%r14,%r13), %eax
	cmpl	$2, %eax
	je	LBB0_20
## %bb.14:                              ##   in Loop: Header=BB0_6 Depth=2
	movzbl	(%r12), %ecx
	incq	%r12
	testb	%cl, %cl
	jne	LBB0_6
	jmp	LBB0_3
LBB0_15:                                ##   in Loop: Header=BB0_6 Depth=2
	movzbl	%cl, %edi
	movl	$4096, %esi                     ## imm = 0x1000
	callq	___maskrune
	movl	$1, %esi
	movl	$4096, %r8d                     ## imm = 0x1000
	jmp	LBB0_13
LBB0_20:
	xorl	%eax, %eax
	jmp	LBB0_21
LBB0_17:
	movl	$1, %eax
LBB0_21:
	addq	$24, %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
	.cfi_endproc
                                        ## -- End function
.subsections_via_symbols
